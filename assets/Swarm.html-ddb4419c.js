import{_ as t,r as s,o,c as i,a as e,d as n,e as a,b as l}from"./app-f078eaf8.js";const d={},c=a('<h1 id="swarm-集群管理" tabindex="-1"><a class="header-anchor" href="#swarm-集群管理" aria-hidden="true">#</a> Swarm 集群管理</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>Docker Swarm 是 Docker 的集群管理工具。它将 Docker 主机池转变为单个虚拟 Docker 主机。 Docker Swarm 提供了标准的 Docker API，所有任何已经与 Docker 守护程序通信的工具都可以使用 Swarm 轻松地扩展到多个主机。</p><p>支持的工具包括但不限于以下各项：</p><ul><li>Dokku</li><li>Docker Compose</li><li>Docker Machine</li><li>Jenkins</li></ul><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h2><p>如下图所示，swarm 集群由管理节点（manager）和工作节点（work node）构成。</p><ul><li><strong>swarm mananger</strong>：负责整个集群的管理工作包括集群配置、服务管理等所有跟集群有关的工作。</li><li><strong>work node</strong>：即图中的 available node，主要负责运行相应的服务来执行任务（task）。</li></ul>',8),p={href:"https://www.runoob.com/wp-content/uploads/2019/11/services-diagram.png",target:"_blank",rel:"noopener noreferrer"},h=e("img",{src:"https://picgo.xingenhi.cn//typoraservices-diagram.png",alt:"img"},null,-1),m=a(`<hr><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>以下示例，均以 Docker Machine 和 virtualbox 进行介绍，确保你的主机已安装 virtualbox。</p><h3 id="_1、创建-swarm-集群管理节点-manager" tabindex="-1"><a class="header-anchor" href="#_1、创建-swarm-集群管理节点-manager" aria-hidden="true">#</a> 1、创建 swarm 集群管理节点（manager）</h3><p>创建 docker 机器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ docker-machine create -d virtualbox swarm-manager
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),g={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm1.png",target:"_blank",rel:"noopener noreferrer"},u=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm1.png",alt:"img"},null,-1),w=a(`<p>初始化 swarm 集群，进行初始化的这台机器，就是集群的管理节点。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ docker-machine ssh swarm-manager
$ docker swarm init --advertise-addr 192.168.99.107 #这里的 IP 为创建机器时分配的 ip。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),_={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm2.png",target:"_blank",rel:"noopener noreferrer"},b=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm2.png",alt:"img"},null,-1),v=a(`<p>以上输出，证明已经初始化成功。需要把以下这行复制出来，在增加工作节点时会用到：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker swarm join --token SWMTKN-1-4oogo9qziq768dma0uh3j0z0m5twlm10iynvz7ixza96k6jh9p-ajkb6w7qd06y1e33yrgko64sk 192.168.99.107:2377
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2、创建-swarm-集群工作节点-worker" tabindex="-1"><a class="header-anchor" href="#_2、创建-swarm-集群工作节点-worker" aria-hidden="true">#</a> 2、创建 swarm 集群工作节点（worker）</h3><p>这里直接创建好俩台机器，swarm-worker1 和 swarm-worker2 。</p>`,4),x={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm3.png",target:"_blank",rel:"noopener noreferrer"},k=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm3.png",alt:"img"},null,-1),f=e("p",null,"分别进入两个机器里，指定添加至上一步中创建的集群，这里会用到上一步复制的内容。",-1),y={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm4.png",target:"_blank",rel:"noopener noreferrer"},$=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm4.png",alt:"img"},null,-1),D=a(`<p>以上数据输出说明已经添加成功。</p><p>上图中，由于上一步复制的内容比较长，会被自动截断，实际上在图运行的命令如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker@swarm-worker1:~$ docker swarm join --token SWMTKN-1-4oogo9qziq768dma0uh3j0z0m5twlm10iynvz7ixza96k6jh9p-ajkb6w7qd06y1e33yrgko64sk 192.168.99.107:2377
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3、查看集群信息" tabindex="-1"><a class="header-anchor" href="#_3、查看集群信息" aria-hidden="true">#</a> 3、查看集群信息</h3><p>进入管理节点，执行：docker info 可以查看当前集群的信息。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ docker info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),S={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm5.png",target:"_blank",rel:"noopener noreferrer"},j=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm5.png",alt:"img"},null,-1),z=a(`<p>通过画红圈的地方，可以知道当前运行的集群中，有三个节点，其中有一个是管理节点。</p><h3 id="_4、部署服务到集群中" tabindex="-1"><a class="header-anchor" href="#_4、部署服务到集群中" aria-hidden="true">#</a> 4、部署服务到集群中</h3><p><strong>注意</strong>：跟集群管理有关的任何操作，都是在管理节点上操作的。</p><p>以下例子，在一个工作节点上创建一个名为 helloworld 的服务，这里是随机指派给一个工作节点：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker@swarm-manager:~$ docker service create --replicas 1 --name helloworld alpine ping docker.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),q={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm6.png",target:"_blank",rel:"noopener noreferrer"},N=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm6.png",alt:"img"},null,-1),I=a(`<h3 id="_5、查看服务部署情况" tabindex="-1"><a class="header-anchor" href="#_5、查看服务部署情况" aria-hidden="true">#</a> 5、查看服务部署情况</h3><p>查看 helloworld 服务运行在哪个节点上，可以看到目前是在 swarm-worker1 节点：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker@swarm-manager:~$ docker service ps helloworld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),M={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm7.png",target:"_blank",rel:"noopener noreferrer"},V=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm7.png",alt:"img"},null,-1),B=e("p",null,"查看 helloworld 部署的具体信息：",-1),E=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`docker@swarm-manager:~$ docker service inspect --pretty helloworld
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),T={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm8.png",target:"_blank",rel:"noopener noreferrer"},A=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm8.png",alt:"img"},null,-1),C=a(`<h3 id="_6、扩展集群服务" tabindex="-1"><a class="header-anchor" href="#_6、扩展集群服务" aria-hidden="true">#</a> 6、扩展集群服务</h3><p>我们将上述的 helloworld 服务扩展到俩个节点。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker@swarm-manager:~$ docker service scale helloworld=2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),K={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm9.png",target:"_blank",rel:"noopener noreferrer"},L=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm9.png",alt:"img"},null,-1),P=e("p",null,"可以看到已经从一个节点，扩展到两个节点。",-1),W={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm10.png",target:"_blank",rel:"noopener noreferrer"},J=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm10.png",alt:"img"},null,-1),F=a(`<h3 id="_7、删除服务" tabindex="-1"><a class="header-anchor" href="#_7、删除服务" aria-hidden="true">#</a> 7、删除服务</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker@swarm-manager:~$ docker service rm helloworld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),G={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm11.png",target:"_blank",rel:"noopener noreferrer"},H=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm11.png",alt:"img"},null,-1),O=e("p",null,"查看是否已删除：",-1),Q={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm12.png",target:"_blank",rel:"noopener noreferrer"},R=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm12.png",alt:"img"},null,-1),U=a(`<h3 id="_8、滚动升级服务" tabindex="-1"><a class="header-anchor" href="#_8、滚动升级服务" aria-hidden="true">#</a> 8、滚动升级服务</h3><p>以下实例，我们将介绍 redis 版本如何滚动升级至更高版本。</p><p>创建一个 3.0.6 版本的 redis。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker@swarm-manager:~$ docker service create --replicas 1 --name redis --update-delay 10s redis:3.0.6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),X={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm13.png",target:"_blank",rel:"noopener noreferrer"},Y=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm13.png",alt:"img"},null,-1),Z=e("p",null,"滚动升级 redis 。",-1),ee=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`docker@swarm-manager:~$ docker service update --image redis:3.0.7 redis
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),re={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm14.png",target:"_blank",rel:"noopener noreferrer"},ne=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm14.png",alt:"img"},null,-1),ae=a(`<p>看图可以知道 redis 的版本已经从 3.0.6 升级到了 3.0.7，说明服务已经升级成功。</p><h3 id="_9、停止某个节点接收新的任务" tabindex="-1"><a class="header-anchor" href="#_9、停止某个节点接收新的任务" aria-hidden="true">#</a> 9、停止某个节点接收新的任务</h3><p>查看所有的节点：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker@swarm-manager:~$ docker node ls
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),te={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm16.png",target:"_blank",rel:"noopener noreferrer"},se=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm16.png",alt:"img"},null,-1),oe=e("p",null,"可以看到目前所有的节点都是 Active, 可以接收新的任务分配。",-1),ie=e("p",null,"停止节点 swarm-worker1：",-1),le={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm17.png",target:"_blank",rel:"noopener noreferrer"},de=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm17.png",alt:"img"},null,-1),ce=e("p",null,[e("strong",null,"注意"),l("：swarm-worker1 状态变为 Drain。不会影响到集群的服务，只是 swarm-worker1 节点不再接收新的任务，集群的负载能力有所下降。")],-1),pe=e("p",null,"可以通过以下命令重新激活节点：",-1),he=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`docker@swarm-manager:~$  docker node update --availability active swarm-worker1
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),me={href:"https://www.runoob.com/wp-content/uploads/2019/11/swarm19.png",target:"_blank",rel:"noopener noreferrer"},ge=e("img",{src:"https://picgo.xingenhi.cn//typoraswarm19.png",alt:"img"},null,-1);function ue(we,_e){const r=s("ExternalLinkIcon");return o(),i("div",null,[c,e("p",null,[e("a",p,[h,n(r)])]),m,e("p",null,[e("a",g,[u,n(r)])]),w,e("p",null,[e("a",_,[b,n(r)])]),v,e("p",null,[e("a",x,[k,n(r)])]),f,e("p",null,[e("a",y,[$,n(r)])]),D,e("p",null,[e("a",S,[j,n(r)])]),z,e("p",null,[e("a",q,[N,n(r)])]),I,e("p",null,[e("a",M,[V,n(r)])]),B,E,e("p",null,[e("a",T,[A,n(r)])]),C,e("p",null,[e("a",K,[L,n(r)])]),P,e("p",null,[e("a",W,[J,n(r)])]),F,e("p",null,[e("a",G,[H,n(r)])]),O,e("p",null,[e("a",Q,[R,n(r)])]),U,e("p",null,[e("a",X,[Y,n(r)])]),Z,ee,e("p",null,[e("a",re,[ne,n(r)])]),ae,e("p",null,[e("a",te,[se,n(r)])]),oe,ie,e("p",null,[e("a",le,[de,n(r)])]),ce,pe,he,e("p",null,[e("a",me,[ge,n(r)])])])}const ve=t(d,[["render",ue],["__file","Swarm.html.vue"]]);export{ve as default};
