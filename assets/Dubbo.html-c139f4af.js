import{_ as p,r as o,o as c,c as i,a as n,b as a,d as t,e}from"./app-f078eaf8.js";const l={},u={class:"custom-container tip"},r=n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])],-1),d=n("p",{class:"custom-container-title"},"TIP",-1),k={href:"https://www.bilibili.com/video/BV1NJ411i7ku",target:"_blank",rel:"noopener noreferrer"},g={href:"https://dubbo.apache.org/zh/",target:"_blank",rel:"noopener noreferrer"},v=e(`<h1 id="_01【掌握】分布式基础理论" tabindex="-1"><a class="header-anchor" href="#_01【掌握】分布式基础理论" aria-hidden="true">#</a> 01【掌握】分布式基础理论</h1><h2 id="_1-什么是分布式系统" tabindex="-1"><a class="header-anchor" href="#_1-什么是分布式系统" aria-hidden="true">#</a> 1，什么是分布式系统？</h2><p>《分布式系统原理与范型》定义：</p><p>“分布式系统是若干独立计算机的集合，这些计算机对于用户来说就像单个相关系统”</p><p>分布式系统（distributed system）是建立在网络之上的软件系统。</p><p>随着互联网的发展，网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行，亟需一个治理系统确保架构有条不紊的演进。</p><h2 id="_2-发展演变" tabindex="-1"><a class="header-anchor" href="#_2-发展演变" aria-hidden="true">#</a> 2，发展演变</h2><p><img src="https://picgo.xingenhi.cn//typora58706db0-7e08-4f3a-9884-f43c196b6ab5.jpg" alt="image"></p><h3 id="_2-1-单一应用架构" tabindex="-1"><a class="header-anchor" href="#_2-1-单一应用架构" aria-hidden="true">#</a> 2.1，单一应用架构</h3><p>当网站流量很小时，只需一个应用，将所有功能都部署在一起，以减少部署节点和成本。此时，用于简化增删改查工作量的数据访问框架**(ORM)是关键。**</p><p><img src="https://picgo.xingenhi.cn//typorabc64a668-3739-4e9b-8580-1d153eca6b75.jpg" alt="image"></p><p>适用于小型网站，小型管理系统，将所有功能都部署到一个功能里，简单易用。</p><p>缺点： 1、性能扩展比较难</p><pre><code>   2、协同开发问题

   3、不利于升级维护
</code></pre><h3 id="_2-2-垂直应用架构" tabindex="-1"><a class="header-anchor" href="#_2-2-垂直应用架构" aria-hidden="true">#</a> 2.2，垂直应用架构</h3><p>当访问量逐渐增大，单一应用增加机器带来的加速度越来越小，将应用拆成互不相干的几个应用，以提升效率。此时，用于加速前端页面开发的<strong>Web框架(MVC)是关键</strong>。</p><p><img src="https://picgo.xingenhi.cn//typora97ac3786-6df7-465d-a689-b79c9b4d088d.png" alt="image"></p><p>通过切分业务来实现各个模块独立部署，降低了维护和部署的难度，团队各司其职更易管理，性能扩展也更方便，更有针对性。</p><p>缺点： 公用模块无法重复利用，开发性的浪费</p><h3 id="_2-3-分布式服务架构" tabindex="-1"><a class="header-anchor" href="#_2-3-分布式服务架构" aria-hidden="true">#</a> 2.3，分布式服务架构</h3><p>当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求。此时，用于提高业务复用及整合的分布式服务框架(<strong>RPC)是关键。</strong></p><p><img src="https://picgo.xingenhi.cn//typora1c31f15c-fda4-4886-8382-9bb1de08d76c.jpg" alt="image"></p><h3 id="_2-4-流动计算架构" tabindex="-1"><a class="header-anchor" href="#_2-4-流动计算架构" aria-hidden="true">#</a> 2.4，流动计算架构</h3><p>当服务越来越多，容量的评估，小服务资源的浪费等问题逐渐显现，此时需增加一个调度中心基于访问压力实时管理集群容量，提高集群利用率。此时，用于提高机器利用率的<strong>资源调度和治理中心(SOA)[ Service Oriented Architecture]是关键。</strong></p><p><img src="https://picgo.xingenhi.cn//typoraf5345476-49ec-4297-b358-0f74ff4b4d86.jpg" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typoradcc496d6-4078-4b85-a475-d4f28b7c85f7.png" alt="image"></p><hr><h2 id="_3-rpc" tabindex="-1"><a class="header-anchor" href="#_3-rpc" aria-hidden="true">#</a> 3，RPC</h2><p>什么叫RPC</p><p>RPC【Remote Procedure Call】是指远程过程调用，是一种进程间通信方式，他是一种技术的思想，而不是规范。它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，而不用程序员显式编码这个远程调用的细节。即程序员无论是调用本地的还是远程的函数，本质上编写的调用代码基本相同。</p><p>RPC基本原理</p><p><img src="https://picgo.xingenhi.cn//typorac86bc222-3445-4db7-923a-b763d16310ed.jpg" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora508b0344-6d0b-4c97-88a6-10eec171c300.jpg" alt="image"></p><p>RPC两个核心模块：通讯，序列化。</p><h1 id="_02【掌握】dubbo核心概念" tabindex="-1"><a class="header-anchor" href="#_02【掌握】dubbo核心概念" aria-hidden="true">#</a> 02【掌握】dubbo核心概念</h1><h2 id="淘宝的演变" tabindex="-1"><a class="header-anchor" href="#淘宝的演变" aria-hidden="true">#</a> 淘宝的演变</h2>`,36),b={href:"https://www.jianshu.com/p/537b3ee7229d",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,"1，简介",-1),h=n("p",null,"Apache Dubbo (incubating) |?d?b??| 是一款高性能、轻量级的开源Java RPC框架，它提供了三大核心能力：面向接口的远程方法调用，智能容错和负载均衡，以及服务自动注册和发现。",-1),f={href:"http://dubbo.apache.org/",target:"_blank",rel:"noopener noreferrer"},x=e('<h2 id="_2-基本概念" tabindex="-1"><a class="header-anchor" href="#_2-基本概念" aria-hidden="true">#</a> 2，基本概念</h2><p><img src="https://picgo.xingenhi.cn//typora71b8ea4c-e305-4cab-b7a8-db371f1e9e5f.jpg" alt="image"></p><p>**服务提供者（Provider）：**暴露服务的服务提供方，服务提供者在启动时，向注册中心注册自己提供的服务。</p><p><strong>服务消费者（Consumer）:</strong> 调用远程服务的服务消费方，服务消费者在启动时，向注册中心订阅自己所需的服务，服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</p><p>**注册中心（Registry）：**注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者</p><p>**监控中心（Monitor）：**服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心</p><ul><li>调用关系说明</li><li>服务容器负责启动，加载，运行服务提供者。</li><li>服务提供者在启动时，向注册中心注册自己提供的服务。</li><li>服务消费者在启动时，向注册中心订阅自己所需的服务。</li><li>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。</li><li>服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</li><li>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。</li></ul><h1 id="_03【掌握】dubbo环境搭建linux" tabindex="-1"><a class="header-anchor" href="#_03【掌握】dubbo环境搭建linux" aria-hidden="true">#</a> 03【掌握】dubbo环境搭建linux</h1><h2 id="_1-安装zookeeper" tabindex="-1"><a class="header-anchor" href="#_1-安装zookeeper" aria-hidden="true">#</a> 1，安装zookeeper</h2><h3 id="_1-1-安装jdk" tabindex="-1"><a class="header-anchor" href="#_1-1-安装jdk" aria-hidden="true">#</a> 1.1，安装JDK</h3><h4 id="_1-1-1-下载jdk" tabindex="-1"><a class="header-anchor" href="#_1-1-1-下载jdk" aria-hidden="true">#</a> 1.1.1，下载JDK</h4>',11),y={href:"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html",target:"_blank",rel:"noopener noreferrer"},q=e(`<p><img src="https://picgo.xingenhi.cn//typora0f2a29d0-94da-41cb-a7a1-bc809c548747.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora204125c9-4cad-4b6e-95ea-170a03193b7a.png" alt="image"></p><h4 id="_1-1-2-使用xftp工具导入linux" tabindex="-1"><a class="header-anchor" href="#_1-1-2-使用xftp工具导入linux" aria-hidden="true">#</a> 1.1.2，使用XFTP工具导入linux</h4><p><img src="https://picgo.xingenhi.cn//typora7fc1a10f-d2e4-4c56-a322-e4192476744c.png" alt="image"></p><h4 id="_1-1-3-解压到-root-software目录" tabindex="-1"><a class="header-anchor" href="#_1-1-3-解压到-root-software目录" aria-hidden="true">#</a> 1.1.3，解压到/root/software目录</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>mkdir <span class="token operator">/</span>root<span class="token operator">/</span>software   #在root下面创建software目录
tar <span class="token operator">-</span>zxvf  jdk<span class="token operator">-</span><span class="token number">8</span>u181<span class="token operator">-</span>linux<span class="token operator">-</span>x64<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz <span class="token operator">-</span><span class="token class-name">C</span> <span class="token operator">/</span>root<span class="token operator">/</span>software #解压到指定目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-1-4-配置环境变量并测试" tabindex="-1"><a class="header-anchor" href="#_1-1-4-配置环境变量并测试" aria-hidden="true">#</a> 1.1.4，配置环境变量并测试</h4><p>打开控制台，运行$ sudo vi /etc/profile，在最后插入下面要配置的内容 ，按Esc键 ，输入( :wq 保存并退出)</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">JAVA_HOME</span><span class="token operator">=</span><span class="token operator">/</span>root<span class="token operator">/</span>software<span class="token operator">/</span>jdk1<span class="token punctuation">.</span><span class="token number">8.0_181</span>
<span class="token constant">PATH</span><span class="token operator">=</span>$<span class="token constant">JAVA_HOME</span><span class="token operator">/</span>bin<span class="token operator">:</span>$<span class="token class-name">PATH</span>
<span class="token constant">CLASSPATH</span><span class="token operator">=</span><span class="token punctuation">.</span><span class="token punctuation">:</span>$<span class="token constant">JAVA_HOME</span><span class="token operator">/</span>lib<span class="token operator">/</span>dt<span class="token punctuation">.</span>jar<span class="token operator">:</span>$<span class="token constant">JAVA_HOME</span><span class="token operator">/</span>lib<span class="token operator">/</span>tools<span class="token punctuation">.</span>jar
export <span class="token constant">JAVA_HOME</span>
export <span class="token constant">PATH</span>
export <span class="token constant">CLASSPATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让环境变量生效，执行下面的命令</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>source <span class="token operator">/</span>etc<span class="token operator">/</span>profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>验证</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>java <span class="token operator">-</span>version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typoraeb0adf11-75a4-40f5-9699-4d341f84068a.png" alt="image"></p><h3 id="_1-2-安装zookeeper" tabindex="-1"><a class="header-anchor" href="#_1-2-安装zookeeper" aria-hidden="true">#</a> 1.2，安装zookeeper</h3><h4 id="_1-2-1-下载" tabindex="-1"><a class="header-anchor" href="#_1-2-1-下载" aria-hidden="true">#</a> 1.2.1，下载</h4><p>可以从</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>apache<span class="token punctuation">.</span>org<span class="token operator">/</span>dist<span class="token operator">/</span>zookeeper<span class="token operator">/</span>stable
http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>mirror<span class="token punctuation">.</span>bit<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>apache<span class="token operator">/</span>zookeeper<span class="token operator">/</span>stable<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typoraaa599b24-8e44-4739-918f-3de921458b43.png" alt="image"></p><p>在linux上使用 wget</p>`,20),_={href:"http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.4.14/",target:"_blank",rel:"noopener noreferrer"},w={href:"http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz",target:"_blank",rel:"noopener noreferrer"},S=e(`<p>建议使用镜像</p><p>推荐下载好了再使用xftp传到linux如果使用wget会丢失jar包[亲测过]</p><h4 id="_1-2-2-解压并修改位置" tabindex="-1"><a class="header-anchor" href="#_1-2-2-解压并修改位置" aria-hidden="true">#</a> 1.2.2，解压并修改位置</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>#解压到/usr/local下面
tar -zxvf zookeeper-3.4.14.tar.gz -C /usr/local
#进入目录
cd /usr/local/
#修改名字
mv zookeeper-3.4.14/ zookeeper
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-3-修改配置文件" tabindex="-1"><a class="header-anchor" href="#_1-2-3-修改配置文件" aria-hidden="true">#</a> 1.2.3，修改配置文件</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>#打开zk的配置文件目录
cd /usr/local/zookeeper/conf
#修改zoo_sample.cfg 为zoo.cfg [一定要改]
mv zoo_sample.cfg  zoo.cfg
#编辑zoo.cfg
vi zoo.cfg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typoradac20b28-d458-4a9d-9cd7-39f0a1948876.png" alt="image"></p><h4 id="_1-2-4-开机启动zookeepr脚本" tabindex="-1"><a class="header-anchor" href="#_1-2-4-开机启动zookeepr脚本" aria-hidden="true">#</a> 1.2.4， 开机启动zookeepr脚本</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>#<span class="token operator">!</span><span class="token operator">/</span>bin<span class="token operator">/</span>bash
#chkconfig<span class="token operator">:</span><span class="token number">2345</span> <span class="token number">20</span> <span class="token number">90</span>
#description<span class="token operator">:</span>zookeeper
#processname<span class="token operator">:</span>zookeeper
<span class="token constant">ZK_PATH</span><span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>zookeeper
export <span class="token constant">JAVA_HOME</span><span class="token operator">=</span><span class="token operator">/</span>root<span class="token operator">/</span>software<span class="token operator">/</span>jdk1<span class="token punctuation">.</span><span class="token number">8.0_181</span>
<span class="token keyword">case</span> $<span class="token number">1</span> in
         start<span class="token punctuation">)</span> sh  $<span class="token constant">ZK_PATH</span><span class="token operator">/</span>bin<span class="token operator">/</span>zkServer<span class="token punctuation">.</span>sh start<span class="token punctuation">;</span><span class="token punctuation">;</span>
         stop<span class="token punctuation">)</span>  sh  $<span class="token constant">ZK_PATH</span><span class="token operator">/</span>bin<span class="token operator">/</span>zkServer<span class="token punctuation">.</span>sh stop<span class="token punctuation">;</span><span class="token punctuation">;</span>
         status<span class="token punctuation">)</span> sh  $<span class="token constant">ZK_PATH</span><span class="token operator">/</span>bin<span class="token operator">/</span>zkServer<span class="token punctuation">.</span>sh status<span class="token punctuation">;</span><span class="token punctuation">;</span>
         restart<span class="token punctuation">)</span> sh $<span class="token constant">ZK_PATH</span><span class="token operator">/</span>bin<span class="token operator">/</span>zkServer<span class="token punctuation">.</span>sh restart<span class="token punctuation">;</span><span class="token punctuation">;</span>
         <span class="token operator">*</span><span class="token punctuation">)</span>  echo <span class="token string">&quot;require start|stop|status|restart&quot;</span>  <span class="token punctuation">;</span><span class="token punctuation">;</span>
esac
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打开/etc/init.d/</p><p><img src="https://picgo.xingenhi.cn//typoracbe07d9c-5d17-4d00-b527-07fd80e4b778.png" alt="image"></p><p>把脚本注册为Service</p><p><img src="https://picgo.xingenhi.cn//typora58e2e9f1-21a1-4383-9e09-5a58d0c3502a.png" alt="image"></p><p>增加权限</p><p><img src="https://picgo.xingenhi.cn//typora20efbc74-477c-4004-b2d8-601107df00d7.png" alt="image"></p><h4 id="_1-2-5-启动zookeeper" tabindex="-1"><a class="header-anchor" href="#_1-2-5-启动zookeeper" aria-hidden="true">#</a> 1.2.5，启动zookeeper</h4><p><img src="https://picgo.xingenhi.cn//typora6f951e81-c8ce-4e37-8054-4c1f5f9d4311.png" alt="image"></p><p>如果出现连接不上在问题修改etc/hosts</p><p>删除第一行里面的127.0.0.1</p><h2 id="_2-安装dubbo监控【常规安装】" tabindex="-1"><a class="header-anchor" href="#_2-安装dubbo监控【常规安装】" aria-hidden="true">#</a> 2，安装dubbo监控【常规安装】</h2><p>dubbo本身并不是一个服务软件。它其实就是一个jar包能够帮你的java程序连接到zookeeper，并利用zookeeper消费、提供服务。所以你不用在Linux上启动什么dubbo服务。</p><p>但是为了让用户更好的管理监控众多的dubbo服务，官方提供了一个可视化的监控程序，不过这个监控即使不装也不影响使用。</p><h3 id="_2-1、下载dubbo-admin" tabindex="-1"><a class="header-anchor" href="#_2-1、下载dubbo-admin" aria-hidden="true">#</a> 2.1、下载dubbo-admin</h3>`,23),I={href:"https://github.com/apache/dubbo-admin/tree/master",target:"_blank",rel:"noopener noreferrer"},j=n("p",null,[n("img",{src:"https://picgo.xingenhi.cn//typorab77741ad-7ea2-427b-a066-305eb0c8fd33.png",alt:"image"})],-1),C=n("p",null,[n("img",{src:"https://picgo.xingenhi.cn//typoraefd4ba5d-5759-4e1f-a602-0f60221bb5ff.jpg",alt:"image"})],-1),A=n("p",null,"配置参考文档",-1),U={href:"http://dubbo.apache.org/zh-cn/docs/admin/introduction.html",target:"_blank",rel:"noopener noreferrer"},P=e('<h3 id="_2-2-解压" tabindex="-1"><a class="header-anchor" href="#_2-2-解压" aria-hidden="true">#</a> 2.2，解压</h3><p><img src="https://picgo.xingenhi.cn//typora8fefee4f-5c18-47fc-9cdb-483592f66f28.png" alt="image"></p><p>dubbo-admin 管理项目</p><p>dubbo-monitor-simple监控统计项目</p><p>dubbo-registry-simple 简单的注册中心，开发中一般使用zk</p><h3 id="_2-3-修改配置文件并打包" tabindex="-1"><a class="header-anchor" href="#_2-3-修改配置文件并打包" aria-hidden="true">#</a> 2.3，修改配置文件并打包</h3><p><img src="https://picgo.xingenhi.cn//typora7ea3b457-f86b-457e-b04d-615907b17da2.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0e4400c3-9fa1-42df-af9a-23ad1d8141e4.png" alt="image"></p><p>配置密码和注册中心，在启动之前一定要启动注册中心，要不然无法访问哦</p><p>使用mvn install 打包</p><p><img src="https://picgo.xingenhi.cn//typorac364a288-02c6-47b0-b748-d4eac4549092.png" alt="image"></p><p>把包好的jar包放到linux上去使用java -jar 运行</p><p><img src="https://picgo.xingenhi.cn//typora315e862d-93c8-4c27-99df-e7a3e471eb49.png" alt="image"></p>',13),z={href:"http://192.168.120.131:7001/",target:"_blank",rel:"noopener noreferrer"},D=e(`<p>用户名:root</p><p>密码:root</p><h2 id="_3-安装dubbo监控【使用docker安装】" tabindex="-1"><a class="header-anchor" href="#_3-安装dubbo监控【使用docker安装】" aria-hidden="true">#</a> 3，安装dubbo监控【使用docker安装】</h2><h3 id="_3-1-安装zookeeper" tabindex="-1"><a class="header-anchor" href="#_3-1-安装zookeeper" aria-hidden="true">#</a> 3.1，安装zookeeper</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>docker pull zookeeper<span class="token operator">:</span><span class="token number">3.4</span><span class="token number">.14</span>#拉取镜像
docker run <span class="token operator">--</span>name zookeeper <span class="token operator">-</span>p <span class="token number">2182</span><span class="token operator">:</span><span class="token number">2181</span> <span class="token operator">-</span>v <span class="token operator">/</span>root<span class="token operator">/</span>zookeeper<span class="token operator">/</span>data<span class="token operator">:</span><span class="token operator">/</span>data <span class="token operator">-</span>d zookeeper<span class="token operator">:</span><span class="token number">3.4</span><span class="token number">.14</span>#启动容器
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-拉取镜像" tabindex="-1"><a class="header-anchor" href="#_3-2-拉取镜像" aria-hidden="true">#</a> 3.2，拉取镜像</h3>`,6),R={href:"https://hub.docker.com/r/chenchuxin/dubbo-admin",target:"_blank",rel:"noopener noreferrer"},L=e(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>docker pull webuilder<span class="token operator">/</span>dubboadmin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-3-启动容器" tabindex="-1"><a class="header-anchor" href="#_3-3-启动容器" aria-hidden="true">#</a> 3.3，启动容器</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>docker run <span class="token operator">-</span>itd <span class="token operator">-</span>p <span class="token number">8080</span><span class="token operator">:</span><span class="token number">8080</span> <span class="token operator">-</span>e <span class="token constant">ZOOKEEPER_SERVER</span><span class="token operator">=</span>your_zookeeper_ip<span class="token operator">:</span><span class="token number">2181</span> dubboadmin <span class="token operator">--</span>name<span class="token operator">=</span>dubbo<span class="token operator">-</span>name
or
docker run <span class="token operator">-</span>itd <span class="token operator">-</span>p <span class="token number">8080</span><span class="token operator">:</span><span class="token number">8080</span> <span class="token operator">--</span>add<span class="token operator">-</span>host zookeeper<span class="token operator">-</span>server<span class="token operator">:</span>your_zookeeper_ip dubboadmin <span class="token operator">--</span>name<span class="token operator">=</span>dubbo<span class="token operator">-</span>name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-环境参数" tabindex="-1"><a class="header-anchor" href="#_3-4-环境参数" aria-hidden="true">#</a> 3.4，环境参数</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">ZOOKEEPER_SERVER</span> （必选） <span class="token class-name">Zookeeper</span>&#39;s <span class="token constant">IP</span> and <span class="token constant">PORT</span><span class="token punctuation">,</span> sparated by a <span class="token class-name"><span class="token namespace">colon<span class="token punctuation">.</span></span> Default</span> is &#39;zookeeper<span class="token operator">-</span>server<span class="token operator">:</span><span class="token number">2181</span>&#39;
<span class="token constant">ROOT_PASSWORD</span> （可选） <span class="token class-name">Dubbo</span> <span class="token class-name">Admin</span>&#39;s root user&#39;s password<span class="token punctuation">,</span> <span class="token keyword">default</span> is <span class="token char">&#39;root&#39;</span>
<span class="token constant">GUEST_PASSWORD</span> （可选） <span class="token class-name">Dubbo</span> <span class="token class-name">Admin</span>&#39;s guest user&#39;s password<span class="token punctuation">,</span> <span class="token keyword">default</span> is <span class="token char">&#39;root&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_04【掌握】dubbo环境搭建windows" tabindex="-1"><a class="header-anchor" href="#_04【掌握】dubbo环境搭建windows" aria-hidden="true">#</a> 04【掌握】dubbo环境搭建windows</h1><h2 id="_1-下载并安装zookepper" tabindex="-1"><a class="header-anchor" href="#_1-下载并安装zookepper" aria-hidden="true">#</a> 1，下载并安装zookepper</h2><h3 id="_1-1、下载zookeeper" tabindex="-1"><a class="header-anchor" href="#_1-1、下载zookeeper" aria-hidden="true">#</a> 1.1、下载zookeeper</h3><p>网址 https://archive.apache.org/dist/zookeeper/zookeeper-3.4.14/</p><h3 id="_1-2、解压zookeeper" tabindex="-1"><a class="header-anchor" href="#_1-2、解压zookeeper" aria-hidden="true">#</a> 1.2、解压zookeeper</h3><p>解压运行zkServer.cmd ，初次运行会报错，没有zoo.cfg配置文件</p><h3 id="_1-3、修改zoo-cfg配置文件" tabindex="-1"><a class="header-anchor" href="#_1-3、修改zoo-cfg配置文件" aria-hidden="true">#</a> 1.3、修改zoo.cfg配置文件</h3><p>将conf下的zoo_sample.cfg复制一份改名为zoo.cfg即可。</p><p>注意几个重要位置：</p><p>dataDir=./ 临时数据存储的目录（可写相对路径）</p><p>clientPort=2181 zookeeper的端口号</p><p>修改完成后再次启动zookeeper</p><h3 id="_1-4、使用zkcli-cmd测试" tabindex="-1"><a class="header-anchor" href="#_1-4、使用zkcli-cmd测试" aria-hidden="true">#</a> 1.4、使用zkCli.cmd测试</h3><p>ls /：列出zookeeper根下保存的所有节点</p><p>create –e /sxt 123：创建一个sxt节点，值为123</p><p>get /sxt：获取/sxt节点的值</p><h2 id="_2-下载并安装dubbo-admin" tabindex="-1"><a class="header-anchor" href="#_2-下载并安装dubbo-admin" aria-hidden="true">#</a> 2，下载并安装dubbo-admin</h2><p>dubbo本身并不是一个服务软件。它其实就是一个jar包能够帮你的java程序连接到zookeeper，并利用zookeeper消费、提供服务。所以你不用在Linux上启动什么dubbo服务。</p><p>但是为了让用户更好的管理监控众多的dubbo服务，官方提供了一个可视化的监控程序，不过这个监控即使不装也不影响使用。</p><h3 id="_1、下载dubbo-admin" tabindex="-1"><a class="header-anchor" href="#_1、下载dubbo-admin" aria-hidden="true">#</a> 1、下载dubbo-admin</h3>`,25),O={href:"https://github.com/apache/dubbo-admin/tree/master",target:"_blank",rel:"noopener noreferrer"},E=e(`<p><img src="https://picgo.xingenhi.cn//typora6cb78f68-b3ea-44bf-b428-283292903bd0.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typoraeeeda2ba-966f-440f-a231-5b058ef59f2a.jpg" alt="image"></p><h3 id="_2、进入目录-修改dubbo-admin配置" tabindex="-1"><a class="header-anchor" href="#_2、进入目录-修改dubbo-admin配置" aria-hidden="true">#</a> 2、进入目录，修改dubbo-admin配置</h3><p>修改 src\\main\\resources\\application.properties 指定zookeeper地址</p><p><img src="https://picgo.xingenhi.cn//typorae1cfd4d1-3fe0-4d7f-b540-44b059eab304.png" alt="image"></p><h3 id="_3、打包dubbo-admin" tabindex="-1"><a class="header-anchor" href="#_3、打包dubbo-admin" aria-hidden="true">#</a> 3、打包dubbo-admin</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>mvn clean <span class="token keyword">package</span> <span class="token operator">-</span><span class="token class-name">Dmaven</span><span class="token punctuation">.</span>test<span class="token punctuation">.</span>skip<span class="token operator">=</span><span class="token boolean">true</span> 
mvn installl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、运行dubbo-admin" tabindex="-1"><a class="header-anchor" href="#_4、运行dubbo-admin" aria-hidden="true">#</a> 4、运行dubbo-admin</h3><p>java -jar dubbo-admin-0.0.1-SNAPSHOT.jar</p><p><img src="https://picgo.xingenhi.cn//typora20b306d1-514d-46db-8c0b-0e2ba9c62008.png" alt="image"></p><p>注意：【有可能控制台看着启动了，但是网页打不开，需要在控制台按下ctrl+c即可】</p>`,11),B={href:"http://127.0.0.1:7001/",target:"_blank",rel:"noopener noreferrer"},M=e(`<p>默认使用root/root 登陆</p><h1 id="_05【掌握】dubbo-helloworld" tabindex="-1"><a class="header-anchor" href="#_05【掌握】dubbo-helloworld" aria-hidden="true">#</a> 05【掌握】dubbo-helloworld</h1><h2 id="_1-提出需求" tabindex="-1"><a class="header-anchor" href="#_1-提出需求" aria-hidden="true">#</a> 1，提出需求</h2><p>某个电商系统，订单服务需要调用用户服务获取某个用户的所有地址；</p><p>我们现在 需要创建两个服务模块进行测试</p><table><thead><tr><th>模块</th><th>功能</th></tr></thead><tbody><tr><td>订单服务web模块</td><td>创建订单等</td></tr><tr><td>用户服务service模块</td><td>查询用户地址等</td></tr></tbody></table><p>测试预期结果：</p><p>订单服务web模块在A服务器，用户服务模块在B服务器，A可以远程调用B的功能。</p><h2 id="_2-工程架构" tabindex="-1"><a class="header-anchor" href="#_2-工程架构" aria-hidden="true">#</a> 2，工程架构</h2><p>根据 dubbo《服务化最佳实践》</p><h3 id="_2-1-分包" tabindex="-1"><a class="header-anchor" href="#_2-1-分包" aria-hidden="true">#</a> 2.1，分包</h3><p>建议将服务接口，服务模型，服务异常等均放在 API 包中，因为服务模型及异常也是 API 的一部分，同时，这样做也符合分包原则：重用发布等价原则(REP)，共同重用原则(CRP)。</p><p>如果需要，也可以考虑在 API 包中放置一份 spring 的引用配置，这样使用方，只需在 spring 加载过程中引用此配置即可，配置建议放在模块的包目录下，以免冲突，如：com/alibaba/china/xxx/dubbo-reference.xml。</p><h3 id="_2-2-粒度" tabindex="-1"><a class="header-anchor" href="#_2-2-粒度" aria-hidden="true">#</a> 2.2，粒度</h3><p>服务接口尽可能大粒度，每个服务方法应代表一个功能，而不是某功能的一个步骤，否则将面临分布式事务问题，Dubbo 暂未提供分布式事务支持。</p><p>服务接口建议以业务场景为单位划分，并对相近业务做抽象，防止接口数量爆炸。</p><p>不建议使用过于抽象的通用接口，如：Map query(Map)，这样的接口没有明确语义，会给后期维护带来不便。</p><p><img src="https://picgo.xingenhi.cn//typora0d6e712e-a2af-4c71-adc7-506de2c9600f.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typorac3ccd028-9b6e-4bbb-9d70-1615c950f7f1.png" alt="image"></p><h2 id="_3-创建模块" tabindex="-1"><a class="header-anchor" href="#_3-创建模块" aria-hidden="true">#</a> 3，创建模块</h2><h3 id="_3-1、ego-interface-公共接口层-model-service-exception" tabindex="-1"><a class="header-anchor" href="#_3-1、ego-interface-公共接口层-model-service-exception" aria-hidden="true">#</a> 3.1、ego-interface：公共接口层（model，service，exception…）</h3><p>作用：定义公共接口，也可以导入公共依赖</p><p>①Bean模型</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserAddress</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> userAddress<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> userId<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>②Service接口UserService</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserAddressList</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>③Service接口OrderService</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OrderService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 初始化订单
     * <span class="token keyword">@param</span> <span class="token parameter">userId</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> <span class="token function">initOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2、ego-user-service-provider-用户服务模块-对用户接口的实现" tabindex="-1"><a class="header-anchor" href="#_3-2、ego-user-service-provider-用户服务模块-对用户接口的实现" aria-hidden="true">#</a> 3.2、ego-user-service-provider：用户服务模块（对用户接口的实现）</h3><p>1、pom.xml</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>dependencies<span class="token punctuation">&gt;</span></span>
   <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>sxt<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>ego<span class="token operator">-</span><span class="token keyword">interface</span><span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">0.0</span><span class="token number">.1</span><span class="token operator">-</span><span class="token constant">SNAPSHOT</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、Service</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span><span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> address<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        address<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserAddress</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;湖北省武汉市东湖高新区金融港B22栋11楼&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;whsxt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        address<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserAddress</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;北京市海淀区西三旗街道建材城西路中腾建华商务大厦东侧二层尚学堂&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bjsxt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserAddressList</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//讲道理要是去数据库里面去查询的</span>
        <span class="token keyword">return</span> address<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3、ego-order-service-consumer-订单模块-调用用户模块" tabindex="-1"><a class="header-anchor" href="#_3-3、ego-order-service-consumer-订单模块-调用用户模块" aria-hidden="true">#</a> 3.3、ego-order-service-consumer：订单模块（调用用户模块）</h3><p>1、pom.xml</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>dependencies<span class="token punctuation">&gt;</span></span>
   <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>sxt<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>ego<span class="token operator">-</span><span class="token keyword">interface</span><span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">0.0</span><span class="token number">.1</span><span class="token operator">-</span><span class="token constant">SNAPSHOT</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、测试</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OrderService</span><span class="token punctuation">{</span>

    <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserService</span><span class="token punctuation">(</span><span class="token class-name">UserService</span> userService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>userService <span class="token operator">=</span> userService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 初始化订单，查询用户的所有地址并返回
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">userId</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> <span class="token function">initOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">getUserAddressList</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在这样是无法进行调用的。我们ego-order-web引入了ego-interface，但是interface的实现是ego-user，我们并没有引入，而且实际他可能还在别的服务器中。</p><h2 id="_4-使用dubbo改造" tabindex="-1"><a class="header-anchor" href="#_4-使用dubbo改造" aria-hidden="true">#</a> 4，使用dubbo改造</h2><h3 id="_4-1、改造ego-user-service-provider作为服务提供者" tabindex="-1"><a class="header-anchor" href="#_4-1、改造ego-user-service-provider作为服务提供者" aria-hidden="true">#</a> 4.1、改造ego-user-service-provider作为服务提供者</h3><p>1、引入dubbo和其它的修改pom.xml</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.sxt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ego-user-service-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.sxt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ego-interface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- 核心包 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.6.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- java连接zookeeper的包，因为服务启动时要注册 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.101tec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>zkclient<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- curator-framework --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>curator-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 因为dubbo底层使用的是netty，【通讯框架】 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.netty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>netty-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.32.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>由于我们使用zookeeper作为注册中心，所以需要操作zookeeper</strong></p><p><strong>dubbo 2.6以前的版本引入zkclient操作zookeeper</strong></p><p><strong>dubbo 2.6及以后的版本引入curator操作zookeeper</strong></p><p><strong>下面两个zk客户端根据dubbo版本2选1即可</strong></p><p>2、配置提供者provider.xml</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>dubbo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://dubbo.apache.org/schema/dubbo<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>


    <span class="token comment">&lt;!--当前应用的名字 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>application</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ego-user<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>application</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--指定注册中心的地址 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>registry</span> <span class="token attr-name">address</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zookeeper://127.0.0.1:2181<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token comment">&lt;!--使用dubbo协议，将服务暴露在20880端口 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>protocol</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dubbo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20880<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userServiceImpl<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.impl.UserServiceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 指定需要暴露的服务 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>service</span>
        <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.UserService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userServiceImpl<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、启动服务TestProvider</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestProvider</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ClassPathXmlApplicationContext</span> ioc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:provider.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ioc<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;服务提供者启动成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><p><img src="https://picgo.xingenhi.cn//typoraba162a06-14ad-4b34-97dd-4e6d26cc6df1.png" alt="image"></p><p>刷新发现有一个服务了</p><p><img src="https://picgo.xingenhi.cn//typora426d9e99-a49f-4480-8e6a-b77e6781bc55.png" alt="image"></p><hr><h3 id="_4-2、改造ego-order-service-consumer作为服务消费者" tabindex="-1"><a class="header-anchor" href="#_4-2、改造ego-order-service-consumer作为服务消费者" aria-hidden="true">#</a> 4.2、改造ego-order-service-consumer作为服务消费者</h3><p>1、引入dubbo和其它依赖修改pom.xml</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.sxt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ego-order-service-consumer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.sxt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ego-interface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 引入dubbo --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.6.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.101tec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>zkclient<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- curator-framework --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>curator-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.netty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>netty-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.32.Final<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、配置消费者信息consumer.xml</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>dubbo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://dubbo.apache.org/schema/dubbo<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/context<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 应用名 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>application</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ego-order-web<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>application</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 指定注册中心地址 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>registry</span> <span class="token attr-name">address</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zookeeper://127.0.0.1:2181<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token comment">&lt;!-- 生成远程服务代理，可以和本地bean一样使用demoService --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userService<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.UserService<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>reference</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- orderService --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orderService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.impl.OrderServiceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userService<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、测试调用</p><p>访问ego-order-service-consumer的initOrder请求，会调用UserService获取用户地址；</p><p>调用成功。说明我们order已经可以调用远程的UserService了；</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestConsumer</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ClassPathXmlApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;classpath:consumer.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">OrderService</span> bean <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">OrderService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> order <span class="token operator">=</span> bean<span class="token punctuation">.</span><span class="token function">initOrder</span><span class="token punctuation">(</span><span class="token string">&quot;whsxt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">UserAddress</span> userAddress <span class="token operator">:</span> order<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>userAddress<span class="token punctuation">.</span><span class="token function">getUserAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>4、注解版</p><p>1、服务提供方</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>dubbo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://dubbo.apache.org/schema/dubbo<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!--当前应用的名字 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>application</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ego-user<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>application</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--指定注册中心的地址 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>registry</span> <span class="token attr-name">address</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zookeeper://127.0.0.1:2181<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token comment">&lt;!--使用dubbo协议，将服务暴露在20880端口 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>protocol</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dubbo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20880<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>annotation</span> <span class="token attr-name">package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.impl<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span> <span class="token comment">//使用dubbo提供的service注解，注册暴露服务</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span><span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> address<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        address<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserAddress</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;湖北省武汉市东湖高新区金融港B22栋11楼&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;whsxt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        address<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserAddress</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;北京市海淀区西三旗街道建材城西路中腾建华商务大厦东侧二层尚学堂&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bjsxt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserAddressList</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//讲道理要是去数据库里面去查询的</span>
        <span class="token keyword">return</span> address<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、服务消费方</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>dubbo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://dubbo.apache.org/schema/dubbo<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/context<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 应用名 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>application</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ego-order-web<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>application</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 指定注册中心地址 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>registry</span> <span class="token attr-name">address</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zookeeper://127.0.0.1:2181<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>annotation</span> <span class="token attr-name">package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.impl<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.impl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>component-scan</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span><span class="token comment">// 使用spring的service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OrderService</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Reference</span> <span class="token comment">//使用dubbo提供的reference注解引用远程服务</span>
    <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 初始化订单，查询用户的所有地址并返回
     * <span class="token keyword">@param</span> <span class="token parameter">userId</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> <span class="token function">initOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">getUserAddressList</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_06【掌握】监控中心" tabindex="-1"><a class="header-anchor" href="#_06【掌握】监控中心" aria-hidden="true">#</a> 06【掌握】监控中心</h1><h2 id="_1-dubbo-admin" tabindex="-1"><a class="header-anchor" href="#_1-dubbo-admin" aria-hidden="true">#</a> 1，dubbo-admin</h2><p>图形化的服务管理页面；安装时需要指定注册中心地址，即可从注册中心中获取到所有的提供者/消费者进行配置管理</p><h2 id="_2-dubbo-monitor-simple" tabindex="-1"><a class="header-anchor" href="#_2-dubbo-monitor-simple" aria-hidden="true">#</a> 2，dubbo-monitor-simple</h2><p>简单的监控中心；</p><h2 id="_3、安装" tabindex="-1"><a class="header-anchor" href="#_3、安装" aria-hidden="true">#</a> 3、安装</h2><p>1、找到之前下载好的dubbo-admin里面的dubbo-monitor-simple项目</p><p>2、修改配置指定注册中心地址</p><p>进入 dubbo-monitor-simple\\src\\main\\resources\\conf</p><p>修改 dubbo.properties文件</p><p><img src="https://picgo.xingenhi.cn//typora3e45986b-89e6-4b29-ab65-8edea4ab6f79.png" alt="image"></p><p>3、打包dubbo-monitor-simple</p><p>mvn clean package -Dmaven.test.skip=true</p><p>4、解压 tar.gz 文件，并运行start.bat</p><p><img src="https://picgo.xingenhi.cn//typora8c45264e-500d-4d08-8792-10826815945e.png" alt="image"></p><p>如果缺少servlet-api，自行导入servlet-api再访问监控中心</p><p>5、启动访问8080</p><p><img src="https://picgo.xingenhi.cn//typora219898f2-39c1-4663-b163-551fe24d455d.png" alt="image"></p><p>2、监控中心配置</p><p>所有服务配置连接监控中心，进行监控统计</p><p>&lt;dubbo:monitor protocol=&quot;registry&quot;&gt;</p><p>Simple Monitor 挂掉不会影响到 Consumer 和 Provider 之间的调用，所以用于生产环境不会有风险。</p><p>Simple Monitor 采用磁盘存储统计信息，请注意安装机器的磁盘限制，如果要集群，建议用mount共享磁盘。</p><h1 id="_07【掌握】dubbo整合springboot方式1" tabindex="-1"><a class="header-anchor" href="#_07【掌握】dubbo整合springboot方式1" aria-hidden="true">#</a> 07【掌握】dubbo整合SpringBoot方式1</h1><h2 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1，概述</h2><p>dubbo整合springboot和三种方式</p>`,99),T=n("li",null,"方式1：引入dubbo-starter，在application.properties配置属性，使用@Service【暴露服务】使用@Reference【引用服务】",-1),H=n("li",null,"方式2：保留dubbo xml配置文件; 导入dubbo-starter，使用@ImportResource导入dubbo的配置文件即可",-1),F=n("li",null,"方式3：使用注解API的方式， 将每一个组件手动创建到容器中,让dubbo来扫描其他的组件",-1),N={href:"https://github.com/apache/dubbo",target:"_blank",rel:"noopener noreferrer"},V=e(`<p><img src="https://picgo.xingenhi.cn//typora0eb9e95c-5af9-4d0e-8b69-530d8a27aca9.png" alt="image"></p><h2 id="_2-服务提供者" tabindex="-1"><a class="header-anchor" href="#_2-服务提供者" aria-hidden="true">#</a> 2，服务提供者</h2><h3 id="_2-1-创建boot-ego-user-service-provider" tabindex="-1"><a class="header-anchor" href="#_2-1-创建boot-ego-user-service-provider" aria-hidden="true">#</a> 2.1，创建boot-ego-user-service-provider</h3><p><img src="https://picgo.xingenhi.cn//typoraa0618c5c-3458-4666-8b99-eb2825ba9b09.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typoraae3eb426-1a06-4661-8f58-c2818112c56c.png" alt="image"></p><h3 id="_2-2-加入依赖" tabindex="-1"><a class="header-anchor" href="#_2-2-加入依赖" aria-hidden="true">#</a> 2.2，加入依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.4.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span> <span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!-- lookup parent from repository --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.sxt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>boot-ego-user-service-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>boot-ego-user-service-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Demo project for Spring Boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven-jar-plugin.version</span><span class="token punctuation">&gt;</span></span>3.1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven-jar-plugin.version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dubbo.version</span><span class="token punctuation">&gt;</span></span>2.6.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dubbo.version</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.sxt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ego-interface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Dubbo Spring Boot Starter --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dubbo-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.2.1.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${dubbo.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.netty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>netty-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- curator-framework --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>curator-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.12.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-创建userserviceimpl" tabindex="-1"><a class="header-anchor" href="#_2-3-创建userserviceimpl" aria-hidden="true">#</a> 2.3，创建UserServiceImpl</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sxt<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">UserAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sxt<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">UserService</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span><span class="token comment">//暴露服务</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> address<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        address<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserAddress</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;湖北省武汉市东湖高新区金融港B22栋11楼&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;whsxt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        address<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserAddress</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;北京市海淀区西三旗街道建材城西路中腾建华商务大厦东侧二层尚学堂&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bjsxt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserAddressList</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//讲道理要是去数据库里面去查询的</span>
        <span class="token keyword">return</span> address<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-配置properties文件" tabindex="-1"><a class="header-anchor" href="#_2-4-配置properties文件" aria-hidden="true">#</a> 2.4，配置properties文件</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>dubbo.application.name=boot-ego-user-service-provider
dubbo.registry.address=zookeeper://127.0.0.1:2181

dubbo.protocol.name=dubbo
dubbo.protocol.port=20880

#dubbo.monitor.protocol=registry
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-修改启动类" tabindex="-1"><a class="header-anchor" href="#_2-5-修改启动类" aria-hidden="true">#</a> 2.5，修改启动类</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@EnableDubbo</span><span class="token operator">//</span>开户注解的dubbo功能
<span class="token decorator annotation punctuation">@SpringBootApplication</span>
public <span class="token keyword">class</span> <span class="token class-name">BootEgoUserServiceProviderApplication</span> <span class="token punctuation">{</span>

    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        SpringApplication<span class="token punctuation">.</span>run<span class="token punctuation">(</span>BootEgoUserServiceProviderApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-启动测试" tabindex="-1"><a class="header-anchor" href="#_2-6-启动测试" aria-hidden="true">#</a> 2.6，启动测试</h3><p><img src="https://picgo.xingenhi.cn//typorae0d2a404-264f-4e8f-be2e-2dc9c2bd53ff.png" alt="image"></p><h2 id="_3-服务消费者" tabindex="-1"><a class="header-anchor" href="#_3-服务消费者" aria-hidden="true">#</a> 3，服务消费者</h2><h3 id="_3-1-创建boot-ego-order-service-consumer" tabindex="-1"><a class="header-anchor" href="#_3-1-创建boot-ego-order-service-consumer" aria-hidden="true">#</a> 3.1，创建boot-ego-order-service-consumer</h3><p><img src="https://picgo.xingenhi.cn//typora158a6f2f-67e2-4110-8ade-a56b29157fdd.png" alt="image"></p><h3 id="_3-2-加入依赖" tabindex="-1"><a class="header-anchor" href="#_3-2-加入依赖" aria-hidden="true">#</a> 3.2，加入依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.4.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span> <span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!-- lookup parent from repository --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.sxt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>boot-ego-user-service-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>boot-ego-user-service-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Demo project for Spring Boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dubbo.version</span><span class="token punctuation">&gt;</span></span>2.6.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dubbo.version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.sxt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ego-interface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Dubbo Spring Boot Starter --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dubbo-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.2.1.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${dubbo.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.netty<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>netty-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- curator-framework --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>curator-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.12.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-创建orderserviceimpl" tabindex="-1"><a class="header-anchor" href="#_3-3-创建orderserviceimpl" aria-hidden="true">#</a> 3.3，创建OrderServiceImpl</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OrderService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Reference</span>
    <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> <span class="token function">initOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;用户id：&quot;</span><span class="token operator">+</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//1、查询用户的收货地址</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> addressList <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getUserAddressList</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> addressList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-创建ordercontroller" tabindex="-1"><a class="header-anchor" href="#_3-4-创建ordercontroller" aria-hidden="true">#</a> 3.4，创建OrderController</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Controller</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">OrderService</span> orderService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/initOrder&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> <span class="token function">initOrder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;uid&quot;</span><span class="token punctuation">)</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> orderService<span class="token punctuation">.</span><span class="token function">initOrder</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-修改properties" tabindex="-1"><a class="header-anchor" href="#_3-5-修改properties" aria-hidden="true">#</a> 3.5，修改properties</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>dubbo<span class="token punctuation">.</span>application<span class="token punctuation">.</span>name<span class="token operator">=</span>boot<span class="token operator">-</span>ego<span class="token operator">-</span>order<span class="token operator">-</span>service<span class="token operator">-</span>consumer
dubbo<span class="token punctuation">.</span>registry<span class="token punctuation">.</span>address<span class="token operator">=</span>zookeeper<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">2181</span>

dubbo<span class="token punctuation">.</span>monitor<span class="token punctuation">.</span>protocol<span class="token operator">=</span>registry

server<span class="token punctuation">.</span>port<span class="token operator">=</span><span class="token number">8888</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-启动类配置" tabindex="-1"><a class="header-anchor" href="#_3-5-启动类配置" aria-hidden="true">#</a> 3.5，启动类配置</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@SpringBootApplication</span>
<span class="token decorator annotation punctuation">@EnableDubbo</span> <span class="token operator">//</span>启动dubbo
public <span class="token keyword">class</span> <span class="token class-name">BootEgoOrderServiceConsumerApplication</span> <span class="token punctuation">{</span>
    public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        SpringApplication<span class="token punctuation">.</span>run<span class="token punctuation">(</span>BootEgoOrderServiceConsumerApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-6-启动测试" tabindex="-1"><a class="header-anchor" href="#_3-6-启动测试" aria-hidden="true">#</a> 3.6，启动测试</h3><p><img src="https://picgo.xingenhi.cn//typora87ed4960-549f-4c31-8825-13c86b637035.png" alt="image"></p><h1 id="_08【掌握】dubbo整合springboot方式2" tabindex="-1"><a class="header-anchor" href="#_08【掌握】dubbo整合springboot方式2" aria-hidden="true">#</a> 08【掌握】dubbo整合SpringBoot方式2</h1><h2 id="_1-提供者" tabindex="-1"><a class="header-anchor" href="#_1-提供者" aria-hidden="true">#</a> 1，提供者</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DubboConfig</span> <span class="token punctuation">{</span>


    <span class="token doc-comment comment">/**
     * 创建dubbo的应用对象
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>application</span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>boot-ego-user-service-provider<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>application</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ApplicationConfig</span> <span class="token function">applicationConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ApplicationConfig</span> applicationConfig<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ApplicationConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        applicationConfig<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;boot-ego-user-service-provider&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> applicationConfig<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 创建注册中心的对象
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>registry</span> <span class="token attr-name">address</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zookeeper://127.0.0.1:2181<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>registry</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RegistryConfig</span> <span class="token function">registryConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">RegistryConfig</span> registryConfig<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">RegistryConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registryConfig<span class="token punctuation">.</span><span class="token function">setProtocol</span><span class="token punctuation">(</span><span class="token string">&quot;zookeeper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registryConfig<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1:2181&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> registryConfig<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * 使用dubbo协议，将服务暴露在20880端口
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>protocol</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dubbo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20880<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>protocol</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ProtocolConfig</span> <span class="token function">protocolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ProtocolConfig</span> config<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ProtocolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        config<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;dubbo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        config<span class="token punctuation">.</span><span class="token function">setPort</span><span class="token punctuation">(</span><span class="token number">20880</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> config<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 指定需要暴露的服务
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>service</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.UserService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userServiceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>service</span><span class="token punctuation">&gt;</span></span>
     * <span class="token keyword">@param</span> <span class="token parameter">application</span> 
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ServiceConfig</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserService</span><span class="token punctuation">&gt;</span></span> <span class="token function">serviceConfigUserService</span><span class="token punctuation">(</span><span class="token class-name">UserService</span> userService<span class="token punctuation">,</span> <span class="token class-name">ApplicationConfig</span> applicationConfig<span class="token punctuation">,</span><span class="token class-name">RegistryConfig</span> registryConfig<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">ServiceConfig</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserService</span><span class="token punctuation">&gt;</span></span> serviceConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServiceConfig</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serviceConfig<span class="token punctuation">.</span><span class="token function">setInterface</span><span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serviceConfig<span class="token punctuation">.</span><span class="token function">setRef</span><span class="token punctuation">(</span>userService<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//注入applicationName</span>
        serviceConfig<span class="token punctuation">.</span><span class="token function">setApplication</span><span class="token punctuation">(</span>applicationConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置注册中心</span>
        serviceConfig<span class="token punctuation">.</span><span class="token function">setRegistry</span><span class="token punctuation">(</span>registryConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//设置方法</span>
        <span class="token class-name">MethodConfig</span> methodConfig<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">MethodConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        methodConfig<span class="token punctuation">.</span><span class="token function">setRetries</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        methodConfig<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;getUserAddressList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        methodConfig<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MethodConfig</span><span class="token punctuation">&gt;</span></span> methods<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MethodConfig</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        methods<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>methodConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
        serviceConfig<span class="token punctuation">.</span><span class="token function">setMethods</span><span class="token punctuation">(</span>methods<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//暴露的方法</span>
        serviceConfig<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> serviceConfig<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!--</span> <span class="token attr-name">配置监控中心</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>monitor</span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>registry<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>monitor</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MonitorConfig</span>  <span class="token function">monitorConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MonitorConfig</span> monitorConfig<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">MonitorConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        monitorConfig<span class="token punctuation">.</span><span class="token function">setProtocol</span><span class="token punctuation">(</span><span class="token string">&quot;registry&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> monitorConfig<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-消费端" tabindex="-1"><a class="header-anchor" href="#_2-消费端" aria-hidden="true">#</a> 2，消费端</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DubboConfig</span> <span class="token punctuation">{</span>


    <span class="token doc-comment comment">/**
     * 创建dubbo的应用对象
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>application</span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>boot-ego-user-service-provider<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>application</span><span class="token punctuation">&gt;</span></span>
     */</span>
<span class="token comment">//  @Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ApplicationConfig</span> <span class="token function">applicationConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ApplicationConfig</span> applicationConfig<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ApplicationConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        applicationConfig<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;boot-ego-order-service-consumer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> applicationConfig<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 创建注册中心的对象
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>registry</span> <span class="token attr-name">address</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zookeeper://127.0.0.1:2181<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>registry</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token comment">//@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RegistryConfig</span> <span class="token function">registryConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">RegistryConfig</span> registryConfig<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">RegistryConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registryConfig<span class="token punctuation">.</span><span class="token function">setProtocol</span><span class="token punctuation">(</span><span class="token string">&quot;zookeeper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registryConfig<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1:2181&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> registryConfig<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">orderServiceImpl</span>
     * 
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!--</span> <span class="token attr-name">生成远程服务代理，可以和本地bean一样使用demoService</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.UserService<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>reference</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!--</span> <span class="token attr-name">创建orderService</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orderServiceImpl<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.impl.OrderServiceImpl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userService<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ReferenceConfig</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserService</span><span class="token punctuation">&gt;</span></span> <span class="token function">referenceConfigUserService</span><span class="token punctuation">(</span><span class="token class-name">OrderServiceImpl</span> orderServiceImpl <span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">ReferenceConfig</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserService</span><span class="token punctuation">&gt;</span></span> referenceConfig<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ReferenceConfig</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        referenceConfig<span class="token punctuation">.</span><span class="token function">setInterface</span><span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        referenceConfig<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;userService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        referenceConfig<span class="token punctuation">.</span><span class="token function">setApplication</span><span class="token punctuation">(</span><span class="token function">applicationConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        referenceConfig<span class="token punctuation">.</span><span class="token function">setRegistry</span><span class="token punctuation">(</span><span class="token function">registryConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//给orderServiceImpl注入数据</span>
        orderServiceImpl<span class="token punctuation">.</span><span class="token function">setUserService</span><span class="token punctuation">(</span>referenceConfig<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> referenceConfig<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>



    <span class="token doc-comment comment">/**
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!--</span> <span class="token attr-name">配置监控中心</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>monitor</span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>registry<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>monitor</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MonitorConfig</span>  <span class="token function">monitorConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MonitorConfig</span> monitorConfig<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">MonitorConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        monitorConfig<span class="token punctuation">.</span><span class="token function">setProtocol</span><span class="token punctuation">(</span><span class="token string">&quot;registry&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> monitorConfig<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_09【掌握】配置文件加载顺序【配置覆盖原则】" tabindex="-1"><a class="header-anchor" href="#_09【掌握】配置文件加载顺序【配置覆盖原则】" aria-hidden="true">#</a> 09【掌握】配置文件加载顺序【配置覆盖原则】</h1><p><img src="https://picgo.xingenhi.cn//typoraa7e5b15b-b6cf-4ba4-acfa-44627c86d0b8.jpg" alt="image"></p><p>1、JVM 启动 -D 参数优先，这样可以使用户在部署和启动时进行参数重写，比如在启动时需改变协议的端口。</p><p>2、XML 次之，如果在 XML 中有配置，则 dubbo.properties 中的相应配置项无效。</p><p>3、Properties 最后，相当于缺省值，只有 XML 没有配置时，dubbo.properties 的相应配置项才会生效，通常用于共享公共配置，比如应用名。</p><p>3、配置原则</p><p>dubbo推荐在Provider上尽量多配置Consumer端属性：</p><p>1、作服务的提供者，比服务使用方更清楚服务性能参数，如调用的超时时间，合理的重试次数，等等</p><p>2、在Provider配置后，Consumer不配置则会使用Provider的配置值，即Provider配置可以作为Consumer的缺省值。否则，Consumer会使用Consumer端的全局设置，这对于Provider不可控的，并且往往是不合理的</p><p>配置的覆盖规则：</p><ol><li>方法级配置别优于接口级别，即小Scope优先</li><li>Consumer端配置 优于 Provider配置 优于 全局配置，</li><li>最后是Dubbo Hard Code的配置值（见配置文档）</li></ol><p><img src="https://picgo.xingenhi.cn//typora6b706bdf-6965-44a5-8c3c-3bca0425dfa9.jpg" alt="image"></p><table><thead><tr><th><strong>消费者方法&gt;提供者方法&gt;消费者接口级别&gt;提供者接口级别&gt;消费者全局&gt;提供者全局</strong></th></tr></thead></table><p>实际开发中是配置提供者还是消费者？</p><p>答案：实际开发中是配置提供者。</p><h1 id="_10【掌握】超时处理" tabindex="-1"><a class="header-anchor" href="#_10【掌握】超时处理" aria-hidden="true">#</a> 10【掌握】超时处理</h1><h2 id="一、概述" tabindex="-1"><a class="header-anchor" href="#一、概述" aria-hidden="true">#</a> 一、概述</h2><pre><code>由于网络或服务端不可靠，会导致调用出现一种不确定的中间状态（超时）。为了避免超时导致客户端资源（线程）挂起耗尽，必须设置超时时间。

为什么会有超时处理：当消费者调用提供者时，提供者执行的时间过长，会超时，消费者会认为调用失败。
</code></pre><h2 id="二、xml配置方式" tabindex="-1"><a class="header-anchor" href="#二、xml配置方式" aria-hidden="true">#</a> 二、xml配置方式</h2><h3 id="_1、dubbo消费端" tabindex="-1"><a class="header-anchor" href="#_1、dubbo消费端" aria-hidden="true">#</a> 1、Dubbo消费端</h3><p>全局超时配置</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>consumer</span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5000<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>指定接口以及特定方法超时配置</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.UserService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2000<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>method</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getUserAddressList<span class="token punctuation">&quot;</span></span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3000<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>reference</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、dubbo服务端" tabindex="-1"><a class="header-anchor" href="#_2、dubbo服务端" aria-hidden="true">#</a> 2、Dubbo服务端</h3><p>全局超时配置</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>provider</span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5000<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>指定接口以及特定方法超时配置</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>provider</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.UserService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2000<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>method</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getUserAddressList<span class="token punctuation">&quot;</span></span> <span class="token attr-name">timeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3000<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">dubbo:</span>provider</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、超时处理注解配置" tabindex="-1"><a class="header-anchor" href="#三、超时处理注解配置" aria-hidden="true">#</a> 三、超时处理注解配置</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Reference</span><span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span>
<span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>
​
<span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span><span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_11【掌握】启动时检查" tabindex="-1"><a class="header-anchor" href="#_11【掌握】启动时检查" aria-hidden="true">#</a> 11【掌握】启动时检查</h1><h2 id="一、概述-1" tabindex="-1"><a class="header-anchor" href="#一、概述-1" aria-hidden="true">#</a> 一、概述</h2><pre><code>Dubbo 缺省会在启动时检查依赖的服务是否可用，不可用时会抛出异常，阻止 Spring 初始化完成，以便上线时，能及早发现问题，默认 check=&quot;true&quot;。

可以通过 check=&quot;false&quot; 关闭检查，比如，测试时，有些服务不关心，或者出现了循环依赖，必须有一方先启动。

另外，如果你的 Spring 容器是懒加载的，或者通过 API 编程延迟引用服务，请关闭 check，否则服务临时不可用时，会抛出异常，拿到 null 引用，如果 check=&quot;false&quot;，总是会返回引用，当服务恢复时，能自动连上。
</code></pre><h2 id="二、xml配置" tabindex="-1"><a class="header-anchor" href="#二、xml配置" aria-hidden="true">#</a> 二、xml配置</h2><p>关闭某个服务的启动时检查 (没有提供者时报错)：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.UserService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">check</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关闭所有服务的启动时检查 (没有提供者时报错)：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>consumer</span> <span class="token attr-name">check</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关闭注册中心启动时检查 (注册订阅失败时报错)：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>registry</span> <span class="token attr-name">check</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过 dubbo.properties</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>dubbo.referencecom.sxt.service.UserService.check=false
dubbo.reference.check=false
dubbo.consumer.check=false
dubbo.registry.check=false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 -D 参数</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>java <span class="token punctuation">-</span>Ddubbo.reference.com.sxt.service.UserService.check=false
java <span class="token punctuation">-</span>Ddubbo.reference.check=false
java <span class="token punctuation">-</span>Ddubbo.consumer.check=false 
java <span class="token punctuation">-</span>Ddubbo.registry.check=false
​
配置的含义：
dubbo.reference.check=false，强制改变所有 reference 的 check 值，就算配置中有声明，也会被覆盖。
dubbo.consumer.check=false，是设置 check 的缺省值，如果配置中有显式的声明，如：&lt;dubbo<span class="token punctuation">:</span>reference check=&quot;true&quot;/<span class="token punctuation">&gt;</span>，不会受影响。
dubbo.registry.check=false，前面两个都是指订阅成功，但提供者列表是否为空是否报错，如果注册订阅失败时，也允许启动，需使用此选项，将在后台定时重试。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、启动检查注解配置" tabindex="-1"><a class="header-anchor" href="#三、启动检查注解配置" aria-hidden="true">#</a> 三、启动检查注解配置</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Reference</span><span class="token punctuation">(</span>check<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_12【掌握】重试原则" tabindex="-1"><a class="header-anchor" href="#_12【掌握】重试原则" aria-hidden="true">#</a> 12【掌握】重试原则</h1><h2 id="一、概述-2" tabindex="-1"><a class="header-anchor" href="#一、概述-2" aria-hidden="true">#</a> 一、概述</h2><pre><code>失败自动切换，当出现失败，重试其它服务器，但重试会带来更长延迟。可通过 retries=&quot;2&quot; 来设置重试次数(不含第一次)。
</code></pre><p><strong>什么时候使用重试，什么时候不使用重试？</strong></p><p>答：如果是非幂等操作【执行多次对数据有影响的操作，如add】，不能重试；如果是幂等性操作【执行多次对数据没有影响的操作，如查询，修改，删除】，可以重试。</p><h2 id="二、xml配置-1" tabindex="-1"><a class="header-anchor" href="#二、xml配置-1" aria-hidden="true">#</a> 二、xml配置</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>service retries<span class="token operator">=</span><span class="token string">&quot;2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
或
<span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>reference retries<span class="token operator">=</span><span class="token string">&quot;2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
或
<span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>reference<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>method name<span class="token operator">=</span><span class="token string">&quot;getUserAddressList&quot;</span> retries<span class="token operator">=</span><span class="token string">&quot;2&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dubbo<span class="token operator">:</span>reference<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、重试注解的配置" tabindex="-1"><a class="header-anchor" href="#三、重试注解的配置" aria-hidden="true">#</a> 三、重试注解的配置</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Reference</span><span class="token punctuation">(</span>retries<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>
​
<span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span>retries<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span><span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_13【掌握】灰度发布" tabindex="-1"><a class="header-anchor" href="#_13【掌握】灰度发布" aria-hidden="true">#</a> 13【掌握】灰度发布</h1><h2 id="一、什么是灰度发布" tabindex="-1"><a class="header-anchor" href="#一、什么是灰度发布" aria-hidden="true">#</a> 一、什么是灰度发布</h2><pre><code>当一个接口实现，出现不兼容升级时，可以用版本号过渡，版本号不同的服务相互间不引用。

可以按照以下的步骤进行版本迁移：
</code></pre><ul><li>在低压力时间段，先升级一半提供者为新版本</li><li>再将所有消费者升级为新版本</li><li>然后将剩下的一半提供者升级为新版本</li></ul><h2 id="二、xml配置-2" tabindex="-1"><a class="header-anchor" href="#二、xml配置-2" aria-hidden="true">#</a> 二、xml配置</h2><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>老版本服务提供者配置：
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>service</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.impl.UserServiceImpl<span class="token punctuation">&quot;</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1.0.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
​
新版本服务提供者配置：
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>service</span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.impl.UserServiceImpl2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2.0.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
​
老版本服务消费者配置：
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.UserService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1.0.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
​
新版本服务消费者配置：
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.UserService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2.0.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
​
如果不需要区分版本，可以按照以下的方式配置：
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">dubbo:</span>reference</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">interface</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.service.UserService<span class="token punctuation">&quot;</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、注解配置" tabindex="-1"><a class="header-anchor" href="#三、注解配置" aria-hidden="true">#</a> 三、注解配置</h2><h3 id="提供者" tabindex="-1"><a class="header-anchor" href="#提供者" aria-hidden="true">#</a> 提供者:</h3><p><img src="https://picgo.xingenhi.cn//typorac7310767-81cd-47f4-816d-5b65e76cdfd2.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typorad9b32e48-10d7-47d3-987d-f346e12f2dc2.png" alt="image"></p><h3 id="消费者" tabindex="-1"><a class="header-anchor" href="#消费者" aria-hidden="true">#</a> 消费者:</h3><p><img src="https://picgo.xingenhi.cn//typoracdf04ca1-3332-46f2-9419-fb4770dd87b7.png" alt="image"></p><h1 id="_14【掌握】本地存根" tabindex="-1"><a class="header-anchor" href="#_14【掌握】本地存根" aria-hidden="true">#</a> 14【掌握】本地存根</h1><h2 id="一、概述-3" tabindex="-1"><a class="header-anchor" href="#一、概述-3" aria-hidden="true">#</a> 一、概述</h2><p>远程服务后，客户端通常只剩下接口，而实现全在服务器端，但提供方有些时候想在客户端也执行部分逻辑，比如：做 ThreadLocal 缓存，提前验证参数，调用失败后伪造容错数据等等，此时就需要在 API 中带上 Stub，客户端生成 Proxy 实例，会把 Proxy 通过构造函数传给 Stub [1]，然后把 Stub 暴露给用户，Stub 可以决定要不要去调 Proxy。</p><p><img src="https://picgo.xingenhi.cn//typora0.8664607986264516.png" alt="image"></p><h2 id="二、xml配置-3" tabindex="-1"><a class="header-anchor" href="#二、xml配置-3" aria-hidden="true">#</a> 二、xml配置</h2><p>消费端在 spring 配置文件中按以下方式配置[1]：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&lt;</span>dubbo<span class="token punctuation">:</span>reference <span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&quot;userService&quot;</span> interface<span class="token operator">=</span><span class="token string">&quot;com.sxt.service.UserService&quot;</span> stub<span class="token operator">=</span><span class="token string">&quot;com.sxt.service.impl.SubUserServiceImpl&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dubbo<span class="token punctuation">:</span>reference<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>消费端提供 Stub 的实现 [2]：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>public <span class="token keyword">class</span> <span class="token class-name">SubUserServiceImpl</span> implements UserService<span class="token punctuation">{</span>
​
    private UserService userService<span class="token punctuation">;</span>

    public SubUserServiceImpl<span class="token punctuation">(</span>UserService userService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        this<span class="token punctuation">.</span>userService<span class="token operator">=</span>userService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token decorator annotation punctuation">@Override</span>
    public List<span class="token operator">&lt;</span>UserAddress<span class="token operator">&gt;</span> getUserAddressList<span class="token punctuation">(</span>String userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> userService<span class="token punctuation">.</span>getUserAddressList<span class="token punctuation">(</span><span class="token string">&quot;whsxt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> catch <span class="token punctuation">(</span>Exception e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Arrays<span class="token punctuation">.</span>asList<span class="token punctuation">(</span>new UserAddress<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;本地存根&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;aaaaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Stub 必须有可传入 Proxy 的构造函数。</strong></p><p>在 interface 旁边放一个 Stub 实现，它实现 UserService 接口，并有一个传入远程 UserService 实例的构造函数</p><h2 id="三、注解配置-1" tabindex="-1"><a class="header-anchor" href="#三、注解配置-1" aria-hidden="true">#</a> 三、注解配置</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@Reference</span><span class="token punctuation">(</span>stub<span class="token operator">=</span><span class="token string">&quot;com.sxt.service.SubUserServiceImpl&quot;</span><span class="token punctuation">)</span>
UserService userService<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_15【掌握】dubbo整合springboot的常规配置项" tabindex="-1"><a class="header-anchor" href="#_15【掌握】dubbo整合springboot的常规配置项" aria-hidden="true">#</a> 15【掌握】dubbo整合springboot的常规配置项</h1><h2 id="_1-超时处理注解配置" tabindex="-1"><a class="header-anchor" href="#_1-超时处理注解配置" aria-hidden="true">#</a> 1，超时处理注解配置</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Reference</span><span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span>
<span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span><span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-启动检查注解配置" tabindex="-1"><a class="header-anchor" href="#_2-启动检查注解配置" aria-hidden="true">#</a> 2，启动检查注解配置</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Reference</span><span class="token punctuation">(</span>check<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-重试注解的配置" tabindex="-1"><a class="header-anchor" href="#_3-重试注解的配置" aria-hidden="true">#</a> 3，重试注解的配置</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Reference</span><span class="token punctuation">(</span>retries<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span>retries<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span><span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-灰度发布的注解配置" tabindex="-1"><a class="header-anchor" href="#_4-灰度发布的注解配置" aria-hidden="true">#</a> 4，灰度发布的注解配置</h2><h3 id="提供者-1" tabindex="-1"><a class="header-anchor" href="#提供者-1" aria-hidden="true">#</a> 提供者:</h3><p><img src="https://picgo.xingenhi.cn//typorac7310767-81cd-47f4-816d-5b65e76cdfd2.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typorad9b32e48-10d7-47d3-987d-f346e12f2dc2.png" alt="image"></p><h3 id="消费者-1" tabindex="-1"><a class="header-anchor" href="#消费者-1" aria-hidden="true">#</a> 消费者:</h3><p><img src="https://picgo.xingenhi.cn//typoracdf04ca1-3332-46f2-9419-fb4770dd87b7.png" alt="image"></p><h2 id="_5-本地存根的注解配置" tabindex="-1"><a class="header-anchor" href="#_5-本地存根的注解配置" aria-hidden="true">#</a> 5，本地存根的注解配置</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@Reference</span><span class="token punctuation">(</span>stub<span class="token operator">=</span><span class="token string">&quot;com.sxt.service.SubUserServiceImpl&quot;</span><span class="token punctuation">)</span>
UserService userService<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_16【掌握】zookeeper宕机与dubbo直连" tabindex="-1"><a class="header-anchor" href="#_16【掌握】zookeeper宕机与dubbo直连" aria-hidden="true">#</a> 16【掌握】zookeeper宕机与dubbo直连</h1><h2 id="_1-zookeeper宕机" tabindex="-1"><a class="header-anchor" href="#_1-zookeeper宕机" aria-hidden="true">#</a> 1，zookeeper宕机</h2><p>现象：zookeeper注册中心宕机，还可以消费dubbo暴露的服务。</p><p>原因：</p><p>健壮性</p><p>监控中心宕掉不影响使用，只是丢失部分采样数据</p><p>数据库宕掉后，注册中心仍能通过缓存提供服务列表查询，但不能注册新服务</p><p>注册中心对等集群，任意一台宕掉后，将自动切换到另一台</p><p>注册中心全部宕掉后，服务提供者和服务消费者仍能通过本地缓存通讯</p><p>服务提供者无状态，任意一台宕掉后，不影响使用</p><p>服务提供者全部宕掉后，服务消费者应用将无法使用，并无限次重连等待服务提供者恢复</p><p>高可用：通过设计，减少系统不能提供服务的时间；</p><h2 id="_2-dubbo直连" tabindex="-1"><a class="header-anchor" href="#_2-dubbo直连" aria-hidden="true">#</a> 2，dubbo直连</h2><p>直连就是直接连接服务器绕过注册中心了</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@Reference</span><span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">&quot;127.0.0.1:20880&quot;</span><span class="token punctuation">)</span>
UserService userService<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_17【掌握】集群下dubbo负载均衡配置" tabindex="-1"><a class="header-anchor" href="#_17【掌握】集群下dubbo负载均衡配置" aria-hidden="true">#</a> 17【掌握】集群下dubbo负载均衡配置</h1><h2 id="_1-概述-1" tabindex="-1"><a class="header-anchor" href="#_1-概述-1" aria-hidden="true">#</a> 1，概述</h2><p>在集群负载均衡时，Dubbo 提供了多种均衡策略，缺省为 random 随机调用。</p><p>负载均衡策略</p><h2 id="_2-random-loadbalance" tabindex="-1"><a class="header-anchor" href="#_2-random-loadbalance" aria-hidden="true">#</a> 2，Random LoadBalance</h2><p>随机，按权重设置随机概率。</p><p>在一个截面上碰撞的概率高，但调用量越大分布越均匀，而且按概率使用权重后也比较均匀，有利于动态调整提供者权重。</p><p><img src="https://picgo.xingenhi.cn//typora6f318b3f-6a56-4dee-9991-01e317e9223e.png" alt="image"></p><h2 id="_3-roundrobin-loadbalance" tabindex="-1"><a class="header-anchor" href="#_3-roundrobin-loadbalance" aria-hidden="true">#</a> 3，RoundRobin LoadBalance</h2><p>轮循，按公约后的权重设置轮循比率。</p><p>存在慢的提供者累积请求的问题，比如：第二台机器很慢，但没挂，当请求调到第二台时就卡在那，久而久之，所有请求都卡在调到第二台上。</p><p><img src="https://picgo.xingenhi.cn//typora5b00b7a2-9469-42e6-abb0-7f8b81f94a6c.png" alt="image"></p><h2 id="_4-leastactive-loadbalance" tabindex="-1"><a class="header-anchor" href="#_4-leastactive-loadbalance" aria-hidden="true">#</a> 4，LeastActive LoadBalance</h2><p>最少活跃调用数，相同活跃数的随机，活跃数指调用前后计数差。</p><p>使慢的提供者收到更少请求，因为越慢的提供者的调用前后计数差会越大。</p><p><img src="https://picgo.xingenhi.cn//typora51bd3709-2772-431d-92fd-76bfc32bcacd.png" alt="image"></p><h2 id="_5-consistenthash-loadbalance" tabindex="-1"><a class="header-anchor" href="#_5-consistenthash-loadbalance" aria-hidden="true">#</a> 5，ConsistentHash LoadBalance</h2><p>一致性 Hash，相同参数的请求总是发到同一提供者。</p><p>当某一台提供者挂时，原本发往该提供者的请求，基于虚拟节点，平摊到其它提供者，不会引起剧烈变动。算法参见：http://en.wikipedia.org/wiki/Consistent_hashing</p><p>缺省只对第一个参数 Hash，如果要修改，请配置 &lt;dubbo:parameter key=&quot;hash.arguments&quot; value=&quot;0,1&quot; /&gt;</p><p>缺省用 160 份虚拟节点，如果要修改，请配置 &lt;dubbo:parameter key=&quot;hash.nodes&quot; value=&quot;320&quot; /&gt;</p><p><img src="https://picgo.xingenhi.cn//typorad1f27668-7c63-4013-b630-965c8c3e510c.png" alt="image"></p><h2 id="_6-测试思路" tabindex="-1"><a class="header-anchor" href="#_6-测试思路" aria-hidden="true">#</a> 6，测试思路</h2><p>1，启动3个提供者20880 20881 20882</p><p>2，启动提供者不加可以看出默认的是random</p><p>3，修改成randomrobin的方式再来测试</p><h2 id="_7-动态权重修改" tabindex="-1"><a class="header-anchor" href="#_7-动态权重修改" aria-hidden="true">#</a> 7，动态权重修改</h2><p>1，写死</p><p><img src="https://picgo.xingenhi.cn//typoracc59a023-261c-443b-b6a6-3c98a63bf00a.png" alt="image"></p><p>2，动态</p><p><img src="https://picgo.xingenhi.cn//typora1d7e7612-0b67-40f9-ab6a-25f4698c0741.png" alt="image"></p><p>3，精确调整</p><p><img src="https://picgo.xingenhi.cn//typorab45433f2-dcc0-4acb-acdf-5d5240db70e9.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora2dcff3dc-bc36-4e67-8427-3fc951ccc92d.png" alt="image"></p><h1 id="_18【掌握】整合hystrix-服务熔断与降级处理" tabindex="-1"><a class="header-anchor" href="#_18【掌握】整合hystrix-服务熔断与降级处理" aria-hidden="true">#</a> 18【掌握】整合hystrix，服务熔断与降级处理</h1><h2 id="_1、服务降级" tabindex="-1"><a class="header-anchor" href="#_1、服务降级" aria-hidden="true">#</a> 1、服务降级</h2><p>什么是服务降级？</p><p><strong>当服务器压力剧增的情况下，根据实际业务情况及流量，对一些服务和页面有策略的不处理或换种简单的方式处理，从而释放服务器资源以保证核心交易正常运作或高效运作。</strong></p><p>可以通过服务降级功能临时屏蔽某个出错的非关键服务，并定义降级后的返回策略。</p><p>向注册中心写入动态配置覆盖规则：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">RegistryFactory</span> registryFactory <span class="token operator">=</span> <span class="token class-name">ExtensionLoader</span><span class="token punctuation">.</span><span class="token function">getExtensionLoader</span><span class="token punctuation">(</span><span class="token class-name">RegistryFactory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAdaptiveExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Registry</span> registry <span class="token operator">=</span> registryFactory<span class="token punctuation">.</span><span class="token function">getRegistry</span><span class="token punctuation">(</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">&quot;zookeeper://10.20.153.10:2181&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
registry<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">&quot;override://0.0.0.0/com.foo.BarService?category=configurators&amp;dynamic=false&amp;application=foo&amp;mock=force:return+null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中：</p><p>mock=force:return+null 表示消费方对该服务的方法调用都直接返回 null 值，不发起远程调用。用来屏蔽不重要服务不可用时对调用方的影响。</p><p>还可以改为 mock=fail:return+null 表示消费方对该服务的方法调用在失败后，再返回 null 值，不抛异常。用来容忍不重要服务不稳定时对调用方的影响。</p><p>演示屏蔽 在消费者端把A服务器屏蔽。再去请求，此时发现不会做远程调用 直接返回了null</p><p>演示容错 在消费者端把A服务的超时时间设置成1000 把对应调用了提供者睡眠5000，再来调用测试</p><h2 id="_2、集群容错" tabindex="-1"><a class="header-anchor" href="#_2、集群容错" aria-hidden="true">#</a> 2、集群容错</h2><p>在集群调用失败时，Dubbo 提供了多种容错方案，缺省为 failover 重试。</p><p>集群容错模式</p><p><strong>Failover Cluster</strong></p><p>失败自动切换，当出现失败，重试其它服务器。通常用于读操作，但重试会带来更长延迟。可通过 retries=&quot;2&quot; 来设置重试次数(不含第一次)。</p><p>重试次数配置如下：</p><p>&lt;dubbo:service retries=&quot;2&quot; /&gt;</p><p>或</p><p>&lt;dubbo:reference retries=&quot;2&quot; /&gt;</p><p>或</p><p><a href="dubbo:reference">dubbo:reference</a></p><pre><code>&lt;dubbo:method name=&quot;getUserAddressList&quot; retries=&quot;2&quot; /&gt;
</code></pre><p><strong>Failfast Cluster</strong></p><p>快速失败，只发起一次调用，失败立即报错。通常用于非幂等性的写操作，比如新增记录。</p><p><strong>Failsafe Cluster</strong></p><p>失败安全，出现异常时，直接忽略。通常用于写入审计日志等操作。</p><p><strong>Failback Cluster</strong></p><p>失败自动恢复，后台记录失败请求，定时重发。通常用于消息通知操作。</p><p><strong>Forking Cluster</strong></p><p>并行调用多个服务器，只要一个成功即返回。通常用于实时性要求较高的读操作，但需要浪费更多服务资源。可通过 forks=&quot;2&quot; 来设置最大并行数。</p><p><strong>Broadcast Clus****ter</strong></p><p>广播调用所有提供者，逐个调用，任意一台报错则报错 [2]。通常用于通知所有提供者更新缓存或日志等本地资源信息。</p><p><strong>集群模式配置</strong></p><p>按照以下示例在服务提供方和消费方配置集群模式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>service cluster<span class="token operator">=</span><span class="token string">&quot;failsafe&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
或
<span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>reference cluster<span class="token operator">=</span><span class="token string">&quot;failsafe&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、整合hystrix" tabindex="-1"><a class="header-anchor" href="#_3、整合hystrix" aria-hidden="true">#</a> 3、整合hystrix</h2><p>Hystrix 旨在通过控制那些访问远程系统、服务和第三方库的节点，从而对延迟和故障提供更强大的容错能力。Hystrix具备拥有回退机制和断路器功能的线程和信号隔离，请求缓存和请求打包，以及监控和配置等功能</p><h3 id="_1、配置spring-cloud-starter-netflix-hystrix" tabindex="-1"><a class="header-anchor" href="#_1、配置spring-cloud-starter-netflix-hystrix" aria-hidden="true">#</a> 1、配置spring-cloud-starter-netflix-hystrix</h3><p>spring boot官方提供了对hystrix的集成，直接在pom.xml里加入依赖：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>netflix<span class="token operator">-</span>hystrix<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.4</span><span class="token number">.4</span><span class="token punctuation">.</span><span class="token constant">RELEASE</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typora7073a4bf-1a2a-44db-8f5f-027d965132ae.png" alt="image"></p><p>然后在Application类上增加@EnableHystrix来启用hystrix starter：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@EnableDubbo</span><span class="token comment">//开户注解的dubbo功能</span>
<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableHystrix</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BootEgoUserServiceProviderApplication</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">BootEgoUserServiceProviderApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_2、配置provider端" tabindex="-1"><a class="header-anchor" href="#_2、配置provider端" aria-hidden="true">#</a> 2、配置Provider端</h3><p>在Dubbo的Provider上增加@HystrixCommand配置，这样子调用就会经过Hystrix代理。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span><span class="token comment">//暴露服务</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span><span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> address<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        address<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserAddress</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;湖北省武汉市东湖高新区金融港B22栋11楼&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;whsxt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        address<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserAddress</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;北京市海淀区西三旗街道建材城西路中腾建华商务大厦东侧二层尚学堂&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bjsxt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@HystrixCommand</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserAddressList</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;UserServiceImpl----20082-3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//讲道理要是去数据库里面去查询的</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> address<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、配置Consumer端</p><p>对于Consumer端，则可以增加一层method调用，并在method上配置@HystrixCommand。当调用出错时，会走到fallbackMethod = &quot;reliable&quot;的调用里。</p><p>启动类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableDubbo</span> <span class="token comment">//启动dubbo</span>
<span class="token annotation punctuation">@EnableHystrix</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BootEgoOrderServiceConsumerApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">BootEgoOrderServiceConsumerApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>消费类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OrderService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Reference</span>
    <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>
    <span class="token comment">//如果出错就调用hello方法</span>
    <span class="token annotation punctuation">@HystrixCommand</span><span class="token punctuation">(</span>fallbackMethod<span class="token operator">=</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> <span class="token function">initOrder</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;用户id：&quot;</span><span class="token operator">+</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//1、查询用户的收货地址</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> addressList <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getUserAddressList</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> addressList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
    出错之后的回调方法
    **/</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserAddress</span><span class="token punctuation">&gt;</span></span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserAddress</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;出错啦&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_19【熟悉】rpc原理和通信原理" tabindex="-1"><a class="header-anchor" href="#_19【熟悉】rpc原理和通信原理" aria-hidden="true">#</a> 19【熟悉】RPC原理和通信原理</h1><h2 id="_1-rpc原理" tabindex="-1"><a class="header-anchor" href="#_1-rpc原理" aria-hidden="true">#</a> 1，rpc原理</h2><p><img src="https://picgo.xingenhi.cn//typora953bfd62-482a-4b0a-b110-73b7031ddc4d.jpg" alt="image"></p><p>一次完整的RPC调用流程（同步调用，异步另说）如下：</p><p><strong>1）服务消费方（client）调用以本地调用方式调用服务；</strong></p><p>2）client stub接收到调用后负责将方法、参数等组装成能够进行网络传输的消息体；</p><p>3）client stub找到服务地址，并将消息发送到服务端；</p><p>4）server stub收到消息后进行解码；</p><p>5）server stub根据解码结果调用本地的服务；</p><p>6）本地服务执行并将结果返回给server stub；</p><p>7）server stub将返回结果打包成消息并发送至消费方；</p><p>8）client stub接收到消息，并进行解码；</p><p><strong>9）服务消费方得到最终结果。</strong></p><p>RPC框架的目标就是要2~8这些步骤都封装起来，这些细节对用户来说是透明的，不可见的。</p><h2 id="_2、netty通信原理" tabindex="-1"><a class="header-anchor" href="#_2、netty通信原理" aria-hidden="true">#</a> 2、netty通信原理</h2><p>Netty是一个异步事件驱动的网络应用程序框架， 用于快速开发可维护的高性能协议服务器和客户端。它极大地简化并简化了TCP和UDP套接字服务器等网络编程。</p><p>BIO：(Blocking IO)</p><p><img src="https://picgo.xingenhi.cn//typora00832bb9-7dbe-41c8-881e-5427246f6fb9.jpg" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora85f7eb6c-96d3-4962-8635-4dac5ae231f7.jpg" alt="image"></p><p>Selector 一般称 为选择器 ，也可以翻译为 多路复用器，</p><p>Connect（连接就绪）、Accept（接受就绪）、Read（读就绪）、Write（写就绪）</p><p>Netty基本原理：</p><p><img src="https://picgo.xingenhi.cn//typoraaa5f6b5b-f195-4f73-86bd-7d0482f4b1ff.jpg" alt="image"></p><h1 id="_20【难点】-源代码-dubbo的设计原理" tabindex="-1"><a class="header-anchor" href="#_20【难点】-源代码-dubbo的设计原理" aria-hidden="true">#</a> 20【难点】[源代码]dubbo的设计原理</h1><h2 id="_1、dubbo原理-框架设计" tabindex="-1"><a class="header-anchor" href="#_1、dubbo原理-框架设计" aria-hidden="true">#</a> 1、dubbo原理 -框架设计</h2><p><img src="https://picgo.xingenhi.cn//typora11a4b2a3-9042-4374-b050-f9d62598a0c9.jpg" alt="image"></p><ul><li>config 配置层：对外配置接口，以 ServiceConfig, ReferenceConfig 为中心，可以直接初始化配置类，也可以通过 spring 解析配置生成配置类</li><li>proxy 服务代理层：服务接口通过代理，生成服务的客户端 Stub 和服务器端 Skeleton, 以 ServiceProxy 为中心，扩展接口为 ProxyFactory</li><li>registry 注册中心层：封装服务地址的注册与发现，以服务 URL 为中心，扩展接口为 RegistryFactory, Registry, RegistryService</li><li>cluster 路由层：封装多个提供者的路由及负载均衡，并桥接注册中心，以 Invoker 为中心，扩展接口为 Cluster, Directory, Router, LoadBalance</li><li>monitor 监控层：RPC 调用次数和调用时间监控，以 Statistics 为中心，扩展接口为 MonitorFactory, Monitor, MonitorService</li><li>protocol 远程调用层：封装 RPC 调用，以 Invocation, Result 为中心，扩展接口为 Protocol, Invoker, Exporter</li><li>exchange 信息交换层：封装请求响应模式，同步转异步，以 Request, Response 为中心，扩展接口为 Exchanger, ExchangeChannel, ExchangeClient, ExchangeServer</li><li>transport 网络传输层：抽象 mina 和 netty 为统一接口，以 Message 为中心，扩展接口为 Channel, Transporter, Client, Server, Codec</li><li>serialize 数据序列化层：可复用的一些工具，扩展接口为 Serialization, ObjectInput, ObjectOutput, ThreadPool</li></ul><h2 id="_2、dubbo原理-启动解析、加载配置信息" tabindex="-1"><a class="header-anchor" href="#_2、dubbo原理-启动解析、加载配置信息" aria-hidden="true">#</a> 2、dubbo原理 -启动解析、加载配置信息</h2><p><img src="https://picgo.xingenhi.cn//typorab786ea76-56a2-436f-8fd5-1cdf6da1ea3a.jpg" alt="image"></p><p>在DubboBeanDefinitionParser构造方法的前面执行了DubboNamespaceHandler</p><h2 id="_3、dubbo原理-服务暴露" tabindex="-1"><a class="header-anchor" href="#_3、dubbo原理-服务暴露" aria-hidden="true">#</a> 3、dubbo原理 -服务暴露</h2><p><img src="https://picgo.xingenhi.cn//typora2896f1f1-18fb-4012-8219-9f64e645f3be.jpg" alt="image"></p><h2 id="_4、dubbo原理-服务引用" tabindex="-1"><a class="header-anchor" href="#_4、dubbo原理-服务引用" aria-hidden="true">#</a> 4、dubbo原理 -服务引用</h2><p><img src="https://picgo.xingenhi.cn//typoraa9b76afd-c67b-4035-94be-eb37fc36fdb5.jpg" alt="image"></p><h2 id="_5、dubbo原理-服务调用" tabindex="-1"><a class="header-anchor" href="#_5、dubbo原理-服务调用" aria-hidden="true">#</a> 5、dubbo原理 -服务调用</h2><p><img src="https://picgo.xingenhi.cn//typorac48043a8-050b-4a62-97b4-31c460dfd027.jpg" alt="image"></p><h1 id="_21【难点】dubbo-启动加载" tabindex="-1"><a class="header-anchor" href="#_21【难点】dubbo-启动加载" aria-hidden="true">#</a> 21【难点】dubbo 启动加载</h1><p>找到DefinitionParser</p><p>这个spring工厂提供的个解析XML和注解的全局接口</p><p>只要实现了这个接口的配置，那么在XML里面定义的标签就可以被解析</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image00161fd878b-72be-4a2f-b1c3-f7a9a0ba5754.png" alt="image"></p><h2 id="找到dubbobeandefinitionparser" tabindex="-1"><a class="header-anchor" href="#找到dubbobeandefinitionparser" aria-hidden="true">#</a> 找到DubboBeanDefinitionParser</h2><p>它实现了DefinitionParser这样一个接口，目地是用于来解析springxml或注解的配置里面的信息</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image00294a8fa38-ba14-497b-9c9b-87601ef71503.png" alt="image"></p><h2 id="找到dubbonamespacehandler" tabindex="-1"><a class="header-anchor" href="#找到dubbonamespacehandler" aria-hidden="true">#</a> 找到DubboNamespaceHandler</h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image0034c96de05-93a7-42da-bfe9-91c37040fb3d.png" alt="image"></p><h1 id="_22【难点】dubbo-服务暴露源码分析" tabindex="-1"><a class="header-anchor" href="#_22【难点】dubbo-服务暴露源码分析" aria-hidden="true">#</a> 22【难点】dubbo 服务暴露源码分析</h1><p>找到ServiceBean</p><p><img src="https://picgo.xingenhi.cn//typora0.4157555882372946.png" alt="image"></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>/**
 * ServiceFactoryBean
 *
 * @export
 */
public class ServiceBean<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>T</span><span class="token punctuation">&gt;</span></span> extends ServiceConfig<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>T</span><span class="token punctuation">&gt;</span></span> implements InitializingBean, DisposableBean,
        ApplicationContextAware, ApplicationListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContextRefreshedEvent</span><span class="token punctuation">&gt;</span></span>, BeanNameAware,
        ApplicationEventPublisherAware {
​
    private static final long serialVersionUID = 213195494150089726L;
​
    private final transient Service service;
​
    private transient ApplicationContext applicationContext;
​
    private transient String beanName;
​
    private transient boolean supportedApplicationListener;
​
    private ApplicationEventPublisher applicationEventPublisher;

InitializingBean   实现在这个接口那当IOC初始化时会调用的方法
​
ApplicationContextAware, 实现这个接口可以得到上下文的IOC窗口对象ApplicationListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContextRefreshedEvent</span><span class="token punctuation">&gt;</span></span>  监听器
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>找到ServiceBean-- afterPropertiesSet</p><p><img src="https://picgo.xingenhi.cn//typora0.16523564441214714.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.675086549324774.png" alt="image"></p><h2 id="找到servicebean—export方法" tabindex="-1"><a class="header-anchor" href="#找到servicebean—export方法" aria-hidden="true">#</a> 找到ServiceBean—export方法</h2><p><img src="https://picgo.xingenhi.cn//typora0.15255362600569985.png" alt="image"></p><h2 id="找到serviceconfig—export方法" tabindex="-1"><a class="header-anchor" href="#找到serviceconfig—export方法" aria-hidden="true">#</a> 找到ServiceConfig—export方法</h2><p><img src="https://picgo.xingenhi.cn//typora0.9973470674297131.png" alt="image"></p><h2 id="找到serviceconfig—doexport方法" tabindex="-1"><a class="header-anchor" href="#找到serviceconfig—doexport方法" aria-hidden="true">#</a> 找到ServiceConfig—doExport方法</h2><p><img src="https://picgo.xingenhi.cn//typora0.09334511939387824.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.9626789459995215.png" alt="image"></p><h2 id="找到serviceconfig—doexporturls方法" tabindex="-1"><a class="header-anchor" href="#找到serviceconfig—doexporturls方法" aria-hidden="true">#</a> 找到ServiceConfig—doExportUrls方法</h2><p>得入注册地，进行注册</p><p><img src="https://picgo.xingenhi.cn//typora0.6390975725514623.png" alt="image"></p><h2 id="找到serviceconfig—doexporturlsfor1protocol方法" tabindex="-1"><a class="header-anchor" href="#找到serviceconfig—doexporturlsfor1protocol方法" aria-hidden="true">#</a> 找到ServiceConfig—doExportUrlsFor1Protocol方法</h2><p><img src="https://picgo.xingenhi.cn//typora0.5648297099551987.png" alt="image"></p><h2 id="找到registryprotocol—export方法" tabindex="-1"><a class="header-anchor" href="#找到registryprotocol—export方法" aria-hidden="true">#</a> 找到RegistryProtocol—export方法</h2><p><img src="https://picgo.xingenhi.cn//typora0.685856467274036.png" alt="image"></p><h2 id="找到dubboprotocol—export方法" tabindex="-1"><a class="header-anchor" href="#找到dubboprotocol—export方法" aria-hidden="true">#</a> 找到DubboProtocol—export方法</h2><p><img src="https://picgo.xingenhi.cn//typora0.22153617887659954.png" alt="image"></p><h2 id="找到dubboprotocol—openserver方法" tabindex="-1"><a class="header-anchor" href="#找到dubboprotocol—openserver方法" aria-hidden="true">#</a> 找到DubboProtocol—openServer方法</h2><p><img src="https://picgo.xingenhi.cn//typora0.32193798081036995.png" alt="image"></p><h2 id="找到dubboprotocol—createserver方法" tabindex="-1"><a class="header-anchor" href="#找到dubboprotocol—createserver方法" aria-hidden="true">#</a> 找到DubboProtocol—createServer方法</h2><p><img src="https://picgo.xingenhi.cn//typora0.267493020365812.png" alt="image"></p><h2 id="找到exchangers—bind方法" tabindex="-1"><a class="header-anchor" href="#找到exchangers—bind方法" aria-hidden="true">#</a> 找到Exchangers—bind方法</h2><p><img src="https://picgo.xingenhi.cn//typora0.08287302054116184.png" alt="image"></p><h2 id="找到headerexchanger—bind方法" tabindex="-1"><a class="header-anchor" href="#找到headerexchanger—bind方法" aria-hidden="true">#</a> 找到HeaderExchanger—bind方法</h2><p><img src="https://picgo.xingenhi.cn//typora0.22583738917380383.png" alt="image"></p><h2 id="找到transporters—bind方法" tabindex="-1"><a class="header-anchor" href="#找到transporters—bind方法" aria-hidden="true">#</a> 找到Transporters—bind方法</h2><p><img src="https://picgo.xingenhi.cn//typora0.31140679665128945.png" alt="image"></p><h2 id="找到transporter—bind方法—到netty底层了" tabindex="-1"><a class="header-anchor" href="#找到transporter—bind方法—到netty底层了" aria-hidden="true">#</a> 找到Transporter—bind方法—到netty底层了</h2><p><img src="https://picgo.xingenhi.cn//typora0.5698558317678453.png" alt="image"></p><h1 id="_23【难点】dubbo-服务引用" tabindex="-1"><a class="header-anchor" href="#_23【难点】dubbo-服务引用" aria-hidden="true">#</a> 23【难点】dubbo 服务引用</h1><p><img src="https://picgo.xingenhi.cn//typora0.20516336164404306.png" alt="image"></p><h2 id="找到referencebean" tabindex="-1"><a class="header-anchor" href="#找到referencebean" aria-hidden="true">#</a> 找到ReferenceBean</h2><p><img src="https://picgo.xingenhi.cn//typora0.4561941148445007.png" alt="image"></p><h2 id="找到referencebean-afterpropertiesset" tabindex="-1"><a class="header-anchor" href="#找到referencebean-afterpropertiesset" aria-hidden="true">#</a> 找到ReferenceBean- afterPropertiesSet</h2><p><img src="https://picgo.xingenhi.cn//typora0.6474903745641671.png" alt="image"></p><h2 id="找到referencebean-getobject" tabindex="-1"><a class="header-anchor" href="#找到referencebean-getobject" aria-hidden="true">#</a> 找到ReferenceBean- getObject();</h2><p><img src="https://picgo.xingenhi.cn//typora0.9256267303072615.png" alt="image"></p><h2 id="找到referencebean-get" tabindex="-1"><a class="header-anchor" href="#找到referencebean-get" aria-hidden="true">#</a> 找到ReferenceBean- get();</h2><p><img src="https://picgo.xingenhi.cn//typora0.1795218249845068.png" alt="image"></p><h2 id="找到referencebean-init" tabindex="-1"><a class="header-anchor" href="#找到referencebean-init" aria-hidden="true">#</a> 找到ReferenceBean- init();</h2><p><img src="https://picgo.xingenhi.cn//typora0.08894660814333773.png" alt="image"></p><h2 id="找到referencebean-createproxy" tabindex="-1"><a class="header-anchor" href="#找到referencebean-createproxy" aria-hidden="true">#</a> 找到ReferenceBean- createProxy();</h2><p><img src="https://picgo.xingenhi.cn//typora0.8672426776284355.png" alt="image"></p><h2 id="找到registryprotocol-refer" tabindex="-1"><a class="header-anchor" href="#找到registryprotocol-refer" aria-hidden="true">#</a> 找到RegistryProtocol- refer();</h2><p><img src="https://picgo.xingenhi.cn//typora0.7929086140033001.png" alt="image"></p><h2 id="找到dubboprotocol-refer" tabindex="-1"><a class="header-anchor" href="#找到dubboprotocol-refer" aria-hidden="true">#</a> 找到DubboProtocol- refer();</h2><p><img src="https://picgo.xingenhi.cn//typora0.3826040427441947.png" alt="image"></p><h2 id="找到dubboprotocol-getclients" tabindex="-1"><a class="header-anchor" href="#找到dubboprotocol-getclients" aria-hidden="true">#</a> 找到DubboProtocol- getClients();</h2><p><img src="https://picgo.xingenhi.cn//typora0.00031364493018216135.png" alt="image"></p><h2 id="找到dubboprotocol-getsharedclients" tabindex="-1"><a class="header-anchor" href="#找到dubboprotocol-getsharedclients" aria-hidden="true">#</a> 找到DubboProtocol- getSharedClients();</h2><p><img src="https://picgo.xingenhi.cn//typora0.28525356090996046.png" alt="image"></p><h2 id="找到dubboprotocol-initclients" tabindex="-1"><a class="header-anchor" href="#找到dubboprotocol-initclients" aria-hidden="true">#</a> 找到DubboProtocol- initClients();</h2><p><img src="https://picgo.xingenhi.cn//typora0.40026927821872615.png" alt="image"></p><h2 id="找到exchangers-connect" tabindex="-1"><a class="header-anchor" href="#找到exchangers-connect" aria-hidden="true">#</a> 找到Exchangers- connect();</h2><p><img src="https://picgo.xingenhi.cn//typora0.6541956395476806.png" alt="image"></p><h2 id="找到headerexchanger-connect" tabindex="-1"><a class="header-anchor" href="#找到headerexchanger-connect" aria-hidden="true">#</a> 找到HeaderExchanger- connect();</h2><p><img src="https://picgo.xingenhi.cn//typora0.5780569610661319.png" alt="image"></p><h2 id="找到transporters-connect" tabindex="-1"><a class="header-anchor" href="#找到transporters-connect" aria-hidden="true">#</a> 找到Transporters- connect();</h2><p><img src="https://picgo.xingenhi.cn//typora0.020797709326534367.png" alt="image"></p><h2 id="找到transporter-connect" tabindex="-1"><a class="header-anchor" href="#找到transporter-connect" aria-hidden="true">#</a> 找到Transporter- connect();</h2><p><img src="https://picgo.xingenhi.cn//typora0.43263922621413925.png" alt="image"></p><h1 id="_24【难点】dubbo-服务调用" tabindex="-1"><a class="header-anchor" href="#_24【难点】dubbo-服务调用" aria-hidden="true">#</a> 24【难点】dubbo 服务调用</h1><h2 id="找到程序入口" tabindex="-1"><a class="header-anchor" href="#找到程序入口" aria-hidden="true">#</a> 找到程序入口</h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image0019313feaf-d880-4e38-bd85-0ca88dad1ca6.png" alt="image"></p><h2 id="orderserviceimpl" tabindex="-1"><a class="header-anchor" href="#orderserviceimpl" aria-hidden="true">#</a> OrderServiceImpl</h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image002c11f86f7-582f-4fa5-9068-4639d72e5859.png" alt="image"></p><h2 id="orderserviceimpl-1" tabindex="-1"><a class="header-anchor" href="#orderserviceimpl-1" aria-hidden="true">#</a> OrderServiceImpl</h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image003d0bc4a78-5e57-46cc-b4dc-da8afe6ed391.png" alt="image"></p><h2 id="找到invokerinvocationhandler-invoke" tabindex="-1"><a class="header-anchor" href="#找到invokerinvocationhandler-invoke" aria-hidden="true">#</a> 找到InvokerInvocationHandler-invoke</h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image004aaba15b0-e0ba-4043-96a1-e802fbb573ef.png" alt="image"></p><h2 id="找到mockclusterinvoker-invoke" tabindex="-1"><a class="header-anchor" href="#找到mockclusterinvoker-invoke" aria-hidden="true">#</a> 找到MockClusterInvoker-invoke</h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image005af6bbb58-b7a9-4181-aa3d-c6678461d409.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typoraclip_image0066735b373-8285-4852-b1a1-81933309aeb7.png" alt="image"></p><h2 id="找到failoverclusterinvoker-invoke" tabindex="-1"><a class="header-anchor" href="#找到failoverclusterinvoker-invoke" aria-hidden="true">#</a> 找到FailoverClusterInvoker-invoke</h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image0075209cf29-9f37-4a1e-ab36-ecfa2668d0f6.png" alt="image"></p><h2 id="因为failoverclusterinvoker里面没invoker方法-所的找其父类找到abstractclusterinvoker里面的invoker" tabindex="-1"><a class="header-anchor" href="#因为failoverclusterinvoker里面没invoker方法-所的找其父类找到abstractclusterinvoker里面的invoker" aria-hidden="true">#</a> 因为FailoverClusterInvoker里面没invoker方法 所的找其父类找到AbstractClusterInvoker里面的invoker</h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image008c755072b-76af-4977-af12-edc8b31cca79.png" alt="image"></p><h2 id="找到failoverclusterinvoker里面doinvoker方法" tabindex="-1"><a class="header-anchor" href="#找到failoverclusterinvoker里面doinvoker方法" aria-hidden="true">#</a> 找到FailoverClusterInvoker里面doInvoker方法</h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image00946838450-b54f-4520-8e70-2eb321e6b083.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typoraclip_image010b4a71948-4634-4c66-acd4-7fb2897456be.png" alt="image"></p><h1 id="_25【面试】相关面试题的处理" tabindex="-1"><a class="header-anchor" href="#_25【面试】相关面试题的处理" aria-hidden="true">#</a> 25【面试】相关面试题的处理</h1>`,368),X={href:"https://blog.csdn.net/moakun/article/details/82919804",target:"_blank",rel:"noopener noreferrer"},J=e('<h2 id="_1、dubbo是什么" tabindex="-1"><a class="header-anchor" href="#_1、dubbo是什么" aria-hidden="true">#</a> <strong>1、Dubbo是什么？</strong></h2><p>Dubbo是阿里巴巴开源的基于 Java 的高性能 RPC 分布式服务框架，现已成为 Apache 基金会孵化项目。</p><p>面试官问你如果这个都不清楚，那下面的就没必要问了。</p><p>官网：http://dubbo.apache.org</p><h2 id="_2、为什么要用dubbo" tabindex="-1"><a class="header-anchor" href="#_2、为什么要用dubbo" aria-hidden="true">#</a> <strong>2、为什么要用Dubbo？</strong></h2><p>因为是阿里开源项目，国内很多互联网公司都在用，已经经过很多线上考验。内部使用了 Netty、Zookeeper，保证了高性能高可用性。</p><p>使用 Dubbo 可以将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，可用于提高业务复用灵活扩展，使前端应用能更快速的响应多变的市场需求。</p><p>下面这张图可以很清楚的诠释，最重要的一点是，分布式架构可以承受更大规模的并发流量。</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image001d20b8124-daa6-45cc-855d-a6741cc0ef26.png" alt="image"></p><p>下面是 Dubbo 的服务治理图。</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image002acc10a61-fb32-4150-9e90-553b210ada5f.png" alt="image"></p><h2 id="_3、dubbo-和-spring-cloud-有什么区别" tabindex="-1"><a class="header-anchor" href="#_3、dubbo-和-spring-cloud-有什么区别" aria-hidden="true">#</a> <strong>3、Dubbo 和 Spring Cloud 有什么区别？</strong></h2><p>两个没关联，如果硬要说区别，有以下几点。</p><p>1）通信方式不同</p><p>Dubbo 使用的是 RPC 通信，而 Spring Cloud 使用的是 HTTP RESTFul 方式。</p><p>2）组成部分不同</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image00322de700d-3b17-4568-8afe-a4d578f3390e.png" alt="image"></p><h2 id="_4、dubbo都支持什么协议-推荐用哪种" tabindex="-1"><a class="header-anchor" href="#_4、dubbo都支持什么协议-推荐用哪种" aria-hidden="true">#</a> <strong>4、dubbo都支持什么协议，推荐用哪种？</strong></h2><p>·dubbo://（推荐）</p><p>·rmi://</p><p>·hessian://</p><p>·http://</p><p>·webservice://</p><p>·thrift://</p><p>·memcached://</p><p>·redis://</p><p>·rest://</p><h2 id="_5、dubbo需要-web-容器吗" tabindex="-1"><a class="header-anchor" href="#_5、dubbo需要-web-容器吗" aria-hidden="true">#</a> <strong>5、Dubbo需要 Web 容器吗？</strong></h2><p>不需要，如果硬要用 Web 容器，只会增加复杂性，也浪费资源。</p><h2 id="_6、dubbo内置了哪几种服务容器" tabindex="-1"><a class="header-anchor" href="#_6、dubbo内置了哪几种服务容器" aria-hidden="true">#</a> <strong>6、Dubbo内置了哪几种服务容器？</strong></h2><p>·Spring Container</p><p>·Jetty Container</p><p>·Log4j Container</p><p>Dubbo 的服务容器只是一个简单的 Main 方法，并加载一个简单的 Spring 容器，用于暴露服务。</p><h2 id="_7、dubbo里面有哪几种节点角色" tabindex="-1"><a class="header-anchor" href="#_7、dubbo里面有哪几种节点角色" aria-hidden="true">#</a> <strong>7、Dubbo里面有哪几种节点角色？</strong></h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image0041bc3dc61-699f-42a2-9e81-545035fe3fb2.png" alt="image"></p><h2 id="_8、画一画服务注册与发现的流程图" tabindex="-1"><a class="header-anchor" href="#_8、画一画服务注册与发现的流程图" aria-hidden="true">#</a> <strong>8、画一画服务注册与发现的流程图</strong></h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image005107ec406-3a81-42be-936a-bc22cf0a9bb5.png" alt="image"></p><p>该图来自 Dubbo 官网，供你参考，如果你说你熟悉 Dubbo, 面试官经常会让你画这个图，记好了。</p><h2 id="_9、dubbo默认使用什么注册中心-还有别的选择吗" tabindex="-1"><a class="header-anchor" href="#_9、dubbo默认使用什么注册中心-还有别的选择吗" aria-hidden="true">#</a> <strong>9、Dubbo默认使用什么注册中心，还有别的选择吗？</strong></h2><p>推荐使用 Zookeeper 作为注册中心，还有 Redis、Multicast、Simple 注册中心，但不推荐。</p><h2 id="_10、dubbo有哪几种配置方式" tabindex="-1"><a class="header-anchor" href="#_10、dubbo有哪几种配置方式" aria-hidden="true">#</a> <strong>10、Dubbo有哪几种配置方式？</strong></h2><p>1）Spring 配置方式 2）Java API 配置方式</p><h2 id="_11、dubbo-核心的配置有哪些" tabindex="-1"><a class="header-anchor" href="#_11、dubbo-核心的配置有哪些" aria-hidden="true">#</a> <strong>11、Dubbo 核心的配置有哪些？</strong></h2><p>我曾经面试就遇到过面试官让你写这些配置，我也是蒙逼。。</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image006b44a61f9-9a0a-4e63-9285-45a48026110b.png" alt="image"></p><p>配置之间的关系见下图。</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image0075d7c7732-c553-45ba-9676-114cc8c09ceb.png" alt="image"></p><h2 id="_12、在-provider-上可以配置的-consumer-端的属性有哪些" tabindex="-1"><a class="header-anchor" href="#_12、在-provider-上可以配置的-consumer-端的属性有哪些" aria-hidden="true">#</a> <strong>12、在 Provider 上可以配置的 Consumer 端的属性有哪些？</strong></h2><p>1）timeout：方法调用超时 2）retries：失败重试次数，默认重试 2 次 3）loadbalance：负载均衡算法，默认随机 4）actives 消费者端，最大并发调用限制</p><h2 id="_13、dubbo启动时如果依赖的服务不可用会怎样" tabindex="-1"><a class="header-anchor" href="#_13、dubbo启动时如果依赖的服务不可用会怎样" aria-hidden="true">#</a> <strong>13、Dubbo启动时如果依赖的服务不可用会怎样？</strong></h2><p>Dubbo 缺省会在启动时检查依赖的服务是否可用，不可用时会抛出异常，阻止 Spring 初始化完成，默认 check=&quot;true&quot;，可以通过 check=&quot;false&quot; 关闭检查。</p><h2 id="_14、dubbo推荐使用什么序列化框架-你知道的还有哪些" tabindex="-1"><a class="header-anchor" href="#_14、dubbo推荐使用什么序列化框架-你知道的还有哪些" aria-hidden="true">#</a> <strong>14、Dubbo推荐使用什么序列化框架，你知道的还有哪些？</strong></h2><p>推荐使用Hessian序列化，还有Duddo、FastJson、Java自带序列化。</p><h2 id="_15、dubbo默认使用的是什么通信框架-还有别的选择吗" tabindex="-1"><a class="header-anchor" href="#_15、dubbo默认使用的是什么通信框架-还有别的选择吗" aria-hidden="true">#</a> <strong>15、Dubbo默认使用的是什么通信框架，还有别的选择吗？</strong></h2><p>Dubbo 默认使用 Netty 框架，也是推荐的选择，另外内容还集成有Mina、Grizzly。</p><h2 id="_16、dubbo有哪几种集群容错方案-默认是哪种" tabindex="-1"><a class="header-anchor" href="#_16、dubbo有哪几种集群容错方案-默认是哪种" aria-hidden="true">#</a> <strong>16、Dubbo有哪几种集群容错方案，默认是哪种？</strong></h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image00806973275-8522-4c3d-9d72-d68f266de289.png" alt="image"></p><h2 id="_17、dubbo有哪几种负载均衡策略-默认是哪种" tabindex="-1"><a class="header-anchor" href="#_17、dubbo有哪几种负载均衡策略-默认是哪种" aria-hidden="true">#</a> <strong>17、Dubbo有哪几种负载均衡策略，默认是哪种？</strong></h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image009ee8d3b8f-1ad4-4ced-8036-7d3850792f5e.png" alt="image"></p><h2 id="_18、注册了多个同一样的服务-如果测试指定的某一个服务呢" tabindex="-1"><a class="header-anchor" href="#_18、注册了多个同一样的服务-如果测试指定的某一个服务呢" aria-hidden="true">#</a> <strong>18、注册了多个同一样的服务，如果测试指定的某一个服务呢？</strong></h2><p>可以配置环境点对点直连，绕过注册中心，将以服务接口为单位，忽略注册中心的提供者列表。</p><h2 id="_19、dubbo支持服务多协议吗" tabindex="-1"><a class="header-anchor" href="#_19、dubbo支持服务多协议吗" aria-hidden="true">#</a> <strong>19、Dubbo支持服务多协议吗？</strong></h2><p>Dubbo 允许配置多协议，在不同服务上支持不同协议或者同一服务上同时支持多种协议。</p><h2 id="_20、当一个服务接口有多种实现时怎么做" tabindex="-1"><a class="header-anchor" href="#_20、当一个服务接口有多种实现时怎么做" aria-hidden="true">#</a> <strong>20、当一个服务接口有多种实现时怎么做？</strong></h2><p>当一个接口有多种实现时，可以用 group 属性来分组，服务提供方和消费方都指定同一个 group 即可。</p><h2 id="_21、服务上线怎么兼容旧版本-灰度发布" tabindex="-1"><a class="header-anchor" href="#_21、服务上线怎么兼容旧版本-灰度发布" aria-hidden="true">#</a> <strong>21、服务上线怎么兼容旧版本？---灰度发布</strong></h2><p>可以用版本号（version）过渡，多个不同版本的服务注册到注册中心，版本号不同的服务相互间不引用。这个和服务分组的概念有一点类似。</p><h2 id="_22、dubbo可以对结果进行缓存吗" tabindex="-1"><a class="header-anchor" href="#_22、dubbo可以对结果进行缓存吗" aria-hidden="true">#</a> <strong>22、Dubbo可以对结果进行缓存吗？</strong></h2><p>可以，Dubbo 提供了声明式缓存，用于加速热门数据的访问速度，以减少用户加缓存的工作量。</p><h2 id="_23、dubbo服务之间的调用是阻塞的吗" tabindex="-1"><a class="header-anchor" href="#_23、dubbo服务之间的调用是阻塞的吗" aria-hidden="true">#</a> <strong>23、Dubbo服务之间的调用是阻塞的吗？</strong></h2><p>默认是同步等待结果阻塞的，支持异步调用。</p><p>Dubbo 是基于 NIO 的非阻塞实现并行调用，客户端不需要启动多线程即可完成并行调用多个远程服务，相对多线程开销较小，异步调用会返回一个 Future 对象。</p><p>异步调用流程图如下。</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image010003b5ab1-65dc-4251-932f-bc2e0374b3a3.png" alt="image"></p><h2 id="_24、dubbo支持分布式事务吗" tabindex="-1"><a class="header-anchor" href="#_24、dubbo支持分布式事务吗" aria-hidden="true">#</a> <strong>24、Dubbo支持分布式事务吗？</strong></h2><p>目前暂时不支持，后续可能采用基于 JTA/XA 规范实现，如以图所示。</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image011e6cf5bc4-93a2-4469-9590-20e3bd710ca4.png" alt="image"></p><h2 id="_26、dubbo支持服务降级吗" tabindex="-1"><a class="header-anchor" href="#_26、dubbo支持服务降级吗" aria-hidden="true">#</a> <strong>26、Dubbo支持服务降级吗？</strong></h2><p>Dubbo 2.2.0 以上版本支持。</p><h2 id="_28、服务提供者能实现失效踢出是什么原理" tabindex="-1"><a class="header-anchor" href="#_28、服务提供者能实现失效踢出是什么原理" aria-hidden="true">#</a> <strong>28、服务提供者能实现失效踢出是什么原理？</strong></h2><p>服务失效踢出基于 Zookeeper 的临时节点原理。</p><h2 id="_29、如何解决服务调用链过长的问题" tabindex="-1"><a class="header-anchor" href="#_29、如何解决服务调用链过长的问题" aria-hidden="true">#</a> <strong>29、如何解决服务调用链过长的问题？</strong></h2><p>Dubbo 可以使用 Pinpoint 和 Apache Skywalking(Incubator) 实现分布式服务追踪，当然还有其他很多方案。</p><h2 id="_30、服务读写推荐的容错策略是怎样的" tabindex="-1"><a class="header-anchor" href="#_30、服务读写推荐的容错策略是怎样的" aria-hidden="true">#</a> <strong>30、服务读写推荐的容错策略是怎样的？</strong></h2><p>读操作建议使用 Failover 失败自动切换，默认重试两次其他服务器。</p><p>写操作建议使用 Failfast 快速失败，发一次调用失败就立即报错。</p><h2 id="_31、dubbo必须依赖的包有哪些" tabindex="-1"><a class="header-anchor" href="#_31、dubbo必须依赖的包有哪些" aria-hidden="true">#</a> <strong>31、Dubbo必须依赖的包有哪些？</strong></h2><p>Dubbo 必须依赖 JDK，其他为可选。</p><h2 id="_32、dubbo的管理控制台能做什么" tabindex="-1"><a class="header-anchor" href="#_32、dubbo的管理控制台能做什么" aria-hidden="true">#</a> <strong>32、Dubbo的管理控制台能做什么？</strong></h2><p>管理控制台主要包含：路由规则，动态配置，服务降级，访问控制，权重调整，负载均衡，等管理功能。</p><h2 id="_33、说说-dubbo-服务暴露的过程。" tabindex="-1"><a class="header-anchor" href="#_33、说说-dubbo-服务暴露的过程。" aria-hidden="true">#</a> <strong>33、说说 Dubbo 服务暴露的过程。</strong></h2><p>Dubbo 会在 Spring 实例化完 bean 之后，在刷新容器最后一步发布 ContextRefreshEvent 事件的时候，通知实现了 ApplicationListener 的 ServiceBean 类进行回调 onApplicationEvent 事件方法，Dubbo 会在这个方法中调用 ServiceBean 父类 ServiceConfig 的 export 方法，而该方法真正实现了服务的（异步或者非异步）发布。</p><h2 id="_34、dubbo-停止维护了吗" tabindex="-1"><a class="header-anchor" href="#_34、dubbo-停止维护了吗" aria-hidden="true">#</a> <strong>34、Dubbo 停止维护了吗？</strong></h2><p>2014 年开始停止维护过几年，17 年开始重新维护，并进入了 Apache 项目。</p><h2 id="_35、dubbo-和-dubbox-有什么区别" tabindex="-1"><a class="header-anchor" href="#_35、dubbo-和-dubbox-有什么区别" aria-hidden="true">#</a> <strong>35、Dubbo 和 Dubbox 有什么区别？</strong></h2><p>Dubbox 是继 Dubbo 停止维护后，当当网基于 Dubbo 做的一个扩展项目，如加了服务可 Restful 调用，更新了开源组件等。</p><h2 id="_36、你还了解别的分布式框架吗" tabindex="-1"><a class="header-anchor" href="#_36、你还了解别的分布式框架吗" aria-hidden="true">#</a> <strong>36、你还了解别的分布式框架吗？</strong></h2><p>别的还有 Spring cloud、Facebook 的 Thrift、Twitter 的 Finagle 等。</p><h2 id="_37、dubbo-能集成-spring-boot-吗" tabindex="-1"><a class="header-anchor" href="#_37、dubbo-能集成-spring-boot-吗" aria-hidden="true">#</a> <strong>37、Dubbo 能集成 Spring Boot 吗？</strong></h2><p>可以的，项目地址如下。</p><p>https://github.com/apache/incubator-dubbo-spring-boot-project</p><h2 id="_38、在使用过程中都遇到了些什么问题" tabindex="-1"><a class="header-anchor" href="#_38、在使用过程中都遇到了些什么问题" aria-hidden="true">#</a> <strong>38、在使用过程中都遇到了些什么问题？</strong></h2><p>Dubbo 的设计目的是为了满足高并发小数据量的 rpc 调用，在大数据量下的性能表现并不好，建议使用 rmi 或 http 协议。</p><h2 id="_40、你觉得用-dubbo-好还是-spring-cloud-好" tabindex="-1"><a class="header-anchor" href="#_40、你觉得用-dubbo-好还是-spring-cloud-好" aria-hidden="true">#</a> <strong>40、你觉得用 Dubbo 好还是 Spring Cloud 好？</strong></h2><p>扩展性的问题，没有好坏，只有适合不适合，不过我好像更倾向于使用 Dubbo, Spring Cloud 版本升级太快，组件更新替换太频繁，配置太繁琐，还有很多我觉得是没有 Dubbo 顺手的地方……</p>',106);function $(Z,K){const s=o("ExternalLinkIcon");return c(),i("div",null,[n("div",u,[r,d,n("p",null,[n("a",k,[a("视频链接"),t(s)]),n("a",g,[a("官方网站"),t(s)])])]),v,n("p",null,[n("a",b,[a("https://www.jianshu.com/p/537b3ee7229d"),t(s)])]),m,h,n("p",null,[a("官网："),n("a",f,[a("http://dubbo.apache.org/"),t(s)])]),x,n("p",null,[n("a",y,[a("http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html"),t(s)])]),q,n("p",null,[n("a",_,[a("http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.4.14/"),t(s)]),n("a",w,[a("zookeeper-3.4.14.tar.gz"),t(s)]),a(" 来下载")]),S,n("p",null,[n("a",I,[a("https://github.com/apache/dubbo-admin/tree/master"),t(s)])]),j,C,A,n("p",null,[n("a",U,[a("http://dubbo.apache.org/zh-cn/docs/admin/introduction.html"),t(s)])]),P,n("p",null,[a("在Winows里面使用"),n("a",z,[a("http://192.168.120.131:7001/"),t(s)]),a("去访问")]),D,n("p",null,[n("a",R,[a("https://hub.docker.com/r/chenchuxin/dubbo-admin"),t(s)])]),L,n("p",null,[n("a",O,[a("https://github.com/apache/dubbo-admin/tree/master"),t(s)])]),E,n("p",null,[n("a",B,[a("http://127.0.0.1:7001/"),t(s)])]),M,n("ol",null,[T,H,F,n("li",null,[a("可以查看github"),n("a",N,[a("https://github.com/apache/dubbo"),t(s)])])]),V,n("p",null,[n("a",X,[a("https://blog.csdn.net/moakun/article/details/82919804"),t(s)])]),J])}const G=p(l,[["render",$],["__file","Dubbo.html.vue"]]);export{G as default};
