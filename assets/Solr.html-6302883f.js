import{_ as e,r as o,o as c,c as i,a as n,b as s,d as t,e as p}from"./app-f078eaf8.js";const l={},u={class:"custom-container tip"},r=n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])],-1),k=n("p",{class:"custom-container-title"},"TIP",-1),d={href:"https://www.bilibili.com/video/BV1k54y1X72q",target:"_blank",rel:"noopener noreferrer"},m=p(`<h1 id="_01【掌握】入门问题" tabindex="-1"><a class="header-anchor" href="#_01【掌握】入门问题" aria-hidden="true">#</a> 01【掌握】入门问题</h1><h2 id="_1-问题概述" tabindex="-1"><a class="header-anchor" href="#_1-问题概述" aria-hidden="true">#</a> 1，问题概述</h2><p>大数据量的查询问题</p><p>假设我们要从商品的表里面查询一个商品</p><p><img src="https://picgo.xingenhi.cn//typora0.32454756066100193.png" alt="image"></p><p>我们的数据库里面肯定有个t_goods的表，我们现在利用商品的名称做模糊查询</p><h3 id="_1-1-对于数据库的查询的" tabindex="-1"><a class="header-anchor" href="#_1-1-对于数据库的查询的" aria-hidden="true">#</a> 1.1 对于数据库的查询的</h3><p>select * from t_goods where goodsName like “%手机%” ;</p><p>问题：</p><p>1，这个查询速度快不快？</p><p>2，对于goodsName 是否添加了索引（假设我们添加了）</p><p>3，对于上面的sql 语句，是否会走索引？</p><p>索引的本质是一颗树，若我们使用（“%手机%” ） 查询时，它无法去比较大小，无法比较，就无法走索引！</p><p>那种场景走索引：最左匹配原则 goodsName like “手机%”，它会走索引。</p><pre><code>                         goodsName like “%手机” 它不会走索引。
</code></pre><p>既然不会走索引，它的查询速度，就需要来一个全表的扫描。它的速度会非常慢！</p><p>假设我们的数据有百万级别的，查询一个商品，可能就需要20s 左右！</p><h3 id="_1-2-使用map-集合来做查询" tabindex="-1"><a class="header-anchor" href="#_1-2-使用map-集合来做查询" aria-hidden="true">#</a> 1.2 使用Map 集合来做查询</h3><p>Map&lt;String,List&gt;</p><p><img src="https://picgo.xingenhi.cn//typora0.46846710733364383.png" alt="image"></p><p>我们在Map 集合的Key 放商品的关键字，value放商品的id的集合。</p><p>到时我们使用关键字查询商品的ids就可以了</p><h3 id="_1-3-怎么得到商品的关键字" tabindex="-1"><a class="header-anchor" href="#_1-3-怎么得到商品的关键字" aria-hidden="true">#</a> 1.3 怎么得到商品的关键字？</h3><p>商品名称Eg:</p><p>【小米10 旗舰新品2月13日14点发布】小米10 骁龙865 5G 抢先预约抽壕礼</p><p>荣耀20S 李现同款 3200万人像超级夜景 4800万超广角AI三摄 麒麟810 全网通版</p><p>荣耀20i 3200万AI自拍 超广角三摄 全网通版6GB+64GB 渐变红 移动联通电信4G</p><p>Redmi 8A 5000mAh 骁龙八核处理器 AI人脸解锁 4GB+64GB 深海蓝 游戏老人手机</p><h3 id="_1-4-老师问你一个问题-请说出包含-明月的古诗" tabindex="-1"><a class="header-anchor" href="#_1-4-老师问你一个问题-请说出包含-明月的古诗" aria-hidden="true">#</a> 1.4，老师问你一个问题：请说出包含 明月的古诗？</h3><p>明月几时有,把酒问青天(苏东坡《水调歌头》)</p><p>海上升明月，天涯共此时（张九龄《望月怀远》）</p><p>暗尘随马去，明月逐人来（苏昧道《正月十五夜》）</p><p>三五明月满，四五蟾兔缺（无名氏《孟冬寒气至》）</p><p>白云还自散，明月落谁家（李白《忆东山二首》）</p><p>明月却多情，随人处处行（张先《菩萨蛮》）</p><p>明月净松林，千峰同一色（欧阳修《自菩提步月归广化寺》）</p><p>明月几时有，把酒问青天（苏轼《水调歌头》）</p><p>明月出天山，茫茫人海间（李白《关山月》）</p><p>明月照高楼，流光正徘徊（曹植《怨歌行》）</p><p>明月隐高树，长河没晓天（陈子昂《春夜别友人》）</p><p>举杯邀明月，对影成三人（李白《月下独酌》）</p><p>举头望明月,低头思故乡(李白《静夜思》)</p><p>深林人不知，明月来相照（王维《竹里馆》）</p><p>明月松间照，清泉石上流（王维《山居秋暝》）</p><p>如果在使用数据库查询，你只能遍历你学过的每一首诗，看看里面有没有《明月》两个字</p><p>如果使用索引</p><p>明月---List&lt;以上所有&gt;</p><p>白云---List&lt;忆东山二首&gt;</p><p>青天---List&lt;水调歌头&gt;</p><hr><h2 id="_2-分词" tabindex="-1"><a class="header-anchor" href="#_2-分词" aria-hidden="true">#</a> 2，分词</h2><p>海上生明月 - 如何分成 -----&gt;海上 | 生 | 明月</p><h3 id="_2-1-新建项目" tabindex="-1"><a class="header-anchor" href="#_2-1-新建项目" aria-hidden="true">#</a> 2.1 新建项目</h3><h4 id="创建空项目" tabindex="-1"><a class="header-anchor" href="#创建空项目" aria-hidden="true">#</a> 创建空项目</h4><p><img src="https://picgo.xingenhi.cn//typora0.8682862539500651.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.05749302157852489.png" alt="image"></p><h4 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h4><p><img src="https://picgo.xingenhi.cn//typora0.9054765285732731.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.33592834554682377.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.27629238849149507.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.1376387832147488.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.03774643386492361.png" alt="image"></p><h3 id="_2-2-jieba分词器-导入依赖" tabindex="-1"><a class="header-anchor" href="#_2-2-jieba分词器-导入依赖" aria-hidden="true">#</a> 2.2 jieba分词器（导入依赖）</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>dependencies<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
        <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>huaban<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>jieba<span class="token operator">-</span>analysis<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.0</span><span class="token number">.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
        <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>projectlombok<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>lombok<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.18</span><span class="token number">.12</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.3 分词测试</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>huaban<span class="token punctuation">.</span>analysis<span class="token punctuation">.</span>jieba<span class="token punctuation">.</span></span><span class="token class-name">JiebaSegmenter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>huaban<span class="token punctuation">.</span>analysis<span class="token punctuation">.</span>jieba<span class="token punctuation">.</span></span><span class="token class-name">SegToken</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * @Description : 分词测试
 * @Author : 辛根
 * @Date : 2020/4/12 18:24
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestJieBa</span> <span class="token punctuation">{</span>

    <span class="token comment">// 声明分词对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">JiebaSegmenter</span> jiebaSegmenter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JiebaSegmenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token string">&quot;锤子(smartisan) 坚果Pro3 8GB+128GB 黑色 骁龙855PLUS 4800万四摄 全网通双卡双待 全面屏游戏手机&quot;</span><span class="token punctuation">;</span>

        <span class="token doc-comment comment">/**
         * 参数1：要分词的内容
         * 参数2：分词模式
         */</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SegToken</span><span class="token punctuation">&gt;</span></span> process <span class="token operator">=</span> jiebaSegmenter<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token class-name">JiebaSegmenter<span class="token punctuation">.</span>SegMode</span><span class="token punctuation">.</span><span class="token constant">SEARCH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SegToken</span> segToken <span class="token operator">:</span> process<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>segToken<span class="token punctuation">.</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;分词完成&quot;</span> <span class="token operator">+</span> process<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3，使用商品搜索案例来展示我们的Map集合</p><h3 id="_3-1-商品的模拟" tabindex="-1"><a class="header-anchor" href="#_3-1-商品的模拟" aria-hidden="true">#</a> 3.1 商品的模拟</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test<span class="token punctuation">.</span>domain</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">AllArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * @Description :
 * @Author : 辛根
 * @Date : 2020/4/12 18:30
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Goods</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 商品ID
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 商品名称
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> goodsname<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 商品价格
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Double</span> goodsPrice<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-数据库的模拟" tabindex="-1"><a class="header-anchor" href="#_3-2-数据库的模拟" aria-hidden="true">#</a> 3.2 数据库的模拟</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Goods</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * @Description :模拟数据库
 * @Author : 辛根
 * @Date : 2020/4/12 18:29
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DBUtils</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">Goods</span> goods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        db<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>goods<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> goods<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Goods</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> db<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">ids</span>
     * @ClassName: DBUtils
     * @Description: 提供一个根据ids的集合查询商品的方法     key---&gt;多个商品ID
     * @Return: java.util.List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.xingen.slor.test.domain.Goods</span><span class="token punctuation">&gt;</span></span>
     * @Author: 辛根 2020/4/12 18:38
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> <span class="token function">getByIds</span><span class="token punctuation">(</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> ids <span class="token operator">||</span> ids<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span> id <span class="token operator">:</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Goods</span> g <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> g<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> list<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-商品服务的接口goodsservice" tabindex="-1"><a class="header-anchor" href="#_3-3-商品服务的接口goodsservice" aria-hidden="true">#</a> 3.3 商品服务的接口GoodsService</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Goods</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * @Description :
 * @Author : 辛根  2020/4/12 18:38
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">GoodsService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * @Description:添加商品
     * @Author:辛根 2020/4/12 18:39
     */</span>
    <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">Goods</span> goods<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * @Description:根据商品名称模糊查询商品
     * @Author:辛根 2020/4/12 18:40
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> <span class="token function">findByGoodsName</span><span class="token punctuation">(</span><span class="token class-name">String</span> goodsName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-商品服务的实现类-goodsserviceimpl" tabindex="-1"><a class="header-anchor" href="#_3-4-商品服务的实现类-goodsserviceimpl" aria-hidden="true">#</a> 3.4 商品服务的实现类（GoodsServiceImpl）</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>huaban<span class="token punctuation">.</span>analysis<span class="token punctuation">.</span>jieba<span class="token punctuation">.</span></span><span class="token class-name">JiebaSegmenter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>huaban<span class="token punctuation">.</span>analysis<span class="token punctuation">.</span>jieba<span class="token punctuation">.</span></span><span class="token class-name">SegToken</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Goods</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">GoodsService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">DBUtils</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * @Description :
 * @Author : 辛根
 * @Date : 2020/4/12 18:40
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GoodsServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">GoodsService</span> <span class="token punctuation">{</span>

    <span class="token comment">// 模拟一个索引库</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> indexs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Set</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">JiebaSegmenter</span> jiebaSegmenter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JiebaSegmenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">Goods</span> goods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * 当插入商品值时，要构造一个Map集合
         * Map&lt;String,List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ID</span><span class="token punctuation">&gt;</span></span>/&gt;
         */</span>
        <span class="token comment">//分词</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keywords <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fenci</span><span class="token punctuation">(</span>goods<span class="token punctuation">.</span><span class="token function">getGoodsname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 插入数据</span>
        <span class="token class-name">DBUtils</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 保存到分词的关键字和ids的映射关系</span>
        <span class="token function">saveKeyWords</span><span class="token punctuation">(</span>keywords<span class="token punctuation">,</span> goods<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">keywords</span>
     * <span class="token keyword">@param</span> <span class="token parameter">id</span>
     * @ClassName: GoodsServiceImpl
     * @Description: 保存分词关键字和id的映射关系
     * @Return: void
     * @Author: 辛根 2020/4/12 18:47
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">saveKeyWords</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keywords<span class="token punctuation">,</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> keywords <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>keywords<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> keyword <span class="token operator">:</span> keywords<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>indexs<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 先看关键字在索引里面是否存在</span>
                    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> integers <span class="token operator">=</span> indexs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 得到这个关键字对应的已存在的id集合</span>
                    integers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 把新插入的id放入</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// 说明这是一个新词，之前的索引库不存在</span>
                    <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ids <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    ids<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    indexs<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>keyword<span class="token punctuation">,</span> ids<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">goodsname</span>
     * @ClassName: GoodsServiceImpl
     * @Description: 完成分词
     * @Return: java.util.List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.lang.String</span><span class="token punctuation">&gt;</span></span>
     * @Author: 辛根 2020/4/12 18:45
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">fenci</span><span class="token punctuation">(</span><span class="token class-name">String</span> goodsname<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SegToken</span><span class="token punctuation">&gt;</span></span> tokens <span class="token operator">=</span> jiebaSegmenter<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>goodsname<span class="token punctuation">,</span> <span class="token class-name">JiebaSegmenter<span class="token punctuation">.</span>SegMode</span><span class="token punctuation">.</span><span class="token constant">SEARCH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keywords <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>tokens<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SegToken</span> token <span class="token operator">:</span> tokens<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            keywords<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>token<span class="token punctuation">.</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> keywords<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">goodsName</span>
     * @ClassName: GoodsServiceImpl
     * @Description: 查询
     * @Return: java.util.List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.xingen.slor.test.domain.Goods</span><span class="token punctuation">&gt;</span></span>
     * @Author: 辛根 2020/4/12 18:57
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> <span class="token function">findByGoodsName</span><span class="token punctuation">(</span><span class="token class-name">String</span> goodsName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 直接从map中取有没有</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>indexs<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>goodsName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 取出有goodsName里面有传过来的goodsName商品的ID</span>
            <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ids <span class="token operator">=</span> indexs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>goodsName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> goods <span class="token operator">=</span> <span class="token class-name">DBUtils</span><span class="token punctuation">.</span><span class="token function">getByIds</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> goods<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-测试类" tabindex="-1"><a class="header-anchor" href="#_3-5-测试类" aria-hidden="true">#</a> 3.5 测试类</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Goods</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">GoodsService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>xingen<span class="token punctuation">.</span>slor<span class="token punctuation">.</span>test<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">GoodsServiceImpl</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * @Description :测试类
 * @Author : 辛根
 * @Date : 2020/4/12 18:57
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestApp</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">GoodsService</span> goodsService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GoodsServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Goods</span> goods <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;苹果手机&quot;</span><span class="token punctuation">,</span> <span class="token number">10.00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Goods</span> goods1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;华为手机&quot;</span><span class="token punctuation">,</span> <span class="token number">11.00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Goods</span> goods2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;红米手机&quot;</span><span class="token punctuation">,</span> <span class="token number">5.00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Goods</span> goods3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;联想手机&quot;</span><span class="token punctuation">,</span> <span class="token number">6.00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        goodsService<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token punctuation">;</span>
        goodsService<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>goods1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        goodsService<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>goods2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        goodsService<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>goods3<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> goodss <span class="token operator">=</span> goodsService<span class="token punctuation">.</span><span class="token function">findByGoodsName</span><span class="token punctuation">(</span><span class="token string">&quot;苹果&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Goods</span> goodsTest <span class="token operator">:</span> goodss<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>goodsTest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-6-我们在搜索苹果手机时-搜索不出来结果" tabindex="-1"><a class="header-anchor" href="#_3-6-我们在搜索苹果手机时-搜索不出来结果" aria-hidden="true">#</a> 3.6 我们在搜索苹果手机时，搜索不出来结果</h3><p><img src="https://picgo.xingenhi.cn//typora0.19486367076455835.png" alt="image"></p><h4 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h4><p>搜索的时候也进行分词</p><h4 id="修改goodsservice" tabindex="-1"><a class="header-anchor" href="#修改goodsservice" aria-hidden="true">#</a> 修改GoodsService</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @Description: 根据商品名称模糊查询商品
 * @Param: [goodsName]
 * <span class="token keyword">@return</span>: java.util.List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.leige.solr.test.domain.Goods</span><span class="token punctuation">&gt;</span></span>
 * @Author: 雷哥
 * @Date: 2020/4/2
 */</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> <span class="token function">findByKeyWord</span><span class="token punctuation">(</span><span class="token class-name">String</span> keyword<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="修改goosserviceimpl" tabindex="-1"><a class="header-anchor" href="#修改goosserviceimpl" aria-hidden="true">#</a> 修改GoosServiceImpl</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> <span class="token function">findByKeyWord</span><span class="token punctuation">(</span><span class="token class-name">String</span> keyword<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">//先分词再查询</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fenci</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> idsSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> kw <span class="token operator">:</span> stringList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//直接从Map里面取有没有</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>indexs<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>kw<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ids <span class="token operator">=</span> indexs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>kw<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//取出有goodsName里面有传过来的goodsName商品的ID</span>
            idsSet<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>idsSet<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">DBUtils</span><span class="token punctuation">.</span><span class="token function">getByIds</span><span class="token punctuation">(</span>idsSet<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="修改testapp测试" tabindex="-1"><a class="header-anchor" href="#修改testapp测试" aria-hidden="true">#</a> 修改TestApp测试</h4><p><img src="https://picgo.xingenhi.cn//typora0.34544623288622284.png" alt="image"></p><p>3.7 搜索速度的提升</p><p>之前：是需要把数据库做一个全表的扫描</p><p>现在：直接通过计算hash值定位 值，在非常理想的情况下。他的速度，只计算一次</p><h3 id="_3-8-新的问题" tabindex="-1"><a class="header-anchor" href="#_3-8-新的问题" aria-hidden="true">#</a> 3.8 新的问题</h3><p>我们的一句话会分出来很多的关键字，都给他建立&lt;K,List&gt; 我们的Map 里面将容纳非常多的元素！</p><p><img src="https://picgo.xingenhi.cn//typora0.9834968168767998.png" alt="image"></p><p>那我们往Map 集合里面放元素时，将有29 个被放进去！若成千上万的商品，那Map 集合非常大！怎么解决Map 集合无限扩大的问题？</p><p>解决方案</p><h4 id="字典树" tabindex="-1"><a class="header-anchor" href="#字典树" aria-hidden="true">#</a> 字典树</h4><p>三点水 --- 清 浮</p><p>单人旁 位 价</p><h5 id="之前没有使用字典树的图" tabindex="-1"><a class="header-anchor" href="#之前没有使用字典树的图" aria-hidden="true">#</a> 之前没有使用字典树的图</h5><p><img src="https://picgo.xingenhi.cn//typora0.7480331470058019.png" alt="image"></p><h5 id="使用字典树的图" tabindex="-1"><a class="header-anchor" href="#使用字典树的图" aria-hidden="true">#</a> 使用字典树的图</h5><p><img src="https://picgo.xingenhi.cn//typora0.1866885991814226.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.5692267851523972.png" alt="image"></p><h1 id="_02【熟悉】倒排索引算法" tabindex="-1"><a class="header-anchor" href="#_02【熟悉】倒排索引算法" aria-hidden="true">#</a> 02【熟悉】倒排索引算法</h1><h2 id="_1-什么是倒排索引" tabindex="-1"><a class="header-anchor" href="#_1-什么是倒排索引" aria-hidden="true">#</a> 1，什么是倒排索引？</h2><p>见其名知其意，有倒排索引，对应肯定，有正向索引。</p><p>正向索引（forward index），反向索引（inverted index）更熟悉的名字是倒排索引。</p><p>在搜索引擎中每个文件都对应一个文件ID，文件内容被表示为一系列关键词的集合（实际上在搜索引擎索引库中，关键词也已经转换为关键词ID）。例如“文档1”经过分词，提取了20个关键词，每个关键词都会记录它在文档中的出现次数和出现位置。</p><p>正向索引的结构如下：</p><pre><code>   “文档1”的ID &gt; 单词1：出现次数，出现位置列表；单词2：出现次数，出现位置列表；…………。

   “文档2”的ID &gt; 此文档出现的关键词列表。
</code></pre><p><img src="https://picgo.xingenhi.cn//typora0.2933874638187334.png" alt="image"></p><p>一般是通过key，去找value。</p><pre><code>当用户在主页上搜索关键词“华为手机”时，假设只存在正向索引（forward index），那么就需要扫描索引库中的所有文档，找出所有包含关键词“华为手机”的文档，再根据打分模型进行打分，排出名次后呈现给用户。因为互联网上收录在搜索引擎中的文档的数目是个天文数字，这样的索引结构根本无法满足实时返回排名结果的要求。

所以，搜索引擎会将正向索引重新构建为倒排索引，即把文件ID对应到关键词的映射转换为关键词到文件ID的映射，每个关键词都对应着一系列的文件，这些文件中都出现这个关键词。
</code></pre><p>倒排索引的结构如下：</p><pre><code>   “关键词1”：“文档1”的ID，“文档2”的ID，…………。

   “关键词2”：带有此关键词的文档ID列表。
</code></pre><p><img src="https://picgo.xingenhi.cn//typora0.14150297468602474.png" alt="image"></p><p>从词的关键字，去找文档。</p><hr><h2 id="_2-单词——文档矩阵" tabindex="-1"><a class="header-anchor" href="#_2-单词——文档矩阵" aria-hidden="true">#</a> 2，单词——文档矩阵</h2><pre><code>  单词-文档矩阵是表达两者之间所具有的一种包含关系的概念模型，如下图的每列代表一个文档，每行代表一个单词，打对勾的位置代表包含关系。
</code></pre><p><img src="https://picgo.xingenhi.cn//typora0.4194246711551843.png" alt="image"></p><pre><code> 从纵向即文档这个维度来看，每列代表文档包含了哪些单词，比如文档1包含了词汇1和词汇4，而不包含其它单词。从横向即单词这个维度来看，每行代表了哪些文档包含了某个单词。比如对于词汇1来说，文档1和文档4中出现过单词1，而其它文档不包含词汇1。矩阵中其它的行列也可作此种解读。

搜索引擎的索引其实就是实现“单词-文档矩阵”的具体数据结构。可以有不同的方式来实现上述概念模型，比如“倒排索引”、“签名文件”、“后缀树”等方式。但是各项实验数据表明，“倒排索引”是实现单词到文档映射关系的最佳实现方式，所以本博文主要介绍“倒排索引”的技术细节。
</code></pre><hr><h2 id="_3-倒排索引基本概念" tabindex="-1"><a class="header-anchor" href="#_3-倒排索引基本概念" aria-hidden="true">#</a> 3，倒排索引基本概念</h2><pre><code>  文档(Document)：一般搜索引擎的处理对象是互联网网页，而文档这个概念要更宽泛些，代表以文本形式存在的存储对象，相比网页来说，涵盖更多种形式，比如Word，PDF，html，XML等不同格式的文件都可以称之为文档。再比如一封邮件，一条短信，一条微博也可以称之为文档。在本书后续内容，很多情况下会使用文档来表征文本信息。

 文档集合(Document Collection)：由若干文档构成的集合称之为文档集合。比如海量的互联网网页或者说大量的电子邮件都是文档集合的具体例子。

 文档编号(Document ID)：在搜索引擎内部，会将文档集合内每个文档赋予一个唯一的内部编号，以此编号来作为这个文档的唯一标识，这样方便内部处理，每个文档的内部编号即称之为“文档编号”，后文有时会用DocID来便捷地代表文档编号。

 单词编号(Word ID)：与文档编号类似，搜索引擎内部以唯一的编号来表征某个单词，单词编号可以作为某个单词的唯一表征。

 倒排索引(Inverted Index)：倒排索引是实现“单词-文档矩阵”的一种具体存储形式，通过倒排索引，可以根据单词快速获取包含这个单词的文档列表。倒排索引主要由两个部分组成：“单词词典”和“倒排文件”。

 单词词典(Lexicon)：搜索引擎的通常索引单位是单词，单词词典是由文档集合中出现过的所有单词构成的字符串集合，单词词典内每条索引项记载单词本身的一些信息以及指向“倒排列表”的指针。

 倒排列表(PostingList)：倒排列表记载了出现过某个单词的所有文档的文档列表及单词在该文档中出现的位置信息，每条记录称为一个倒排项(Posting)。根据倒排列表，即可获知哪些文档包含某个单词。

 倒排文件(Inverted File)：所有单词的倒排列表往往顺序地存储在磁盘的某个文件里，这个文件即被称之为倒排文件，倒排文件是存储倒排索引的物理文件。

 关于这些概念之间的关系，通过图2可以比较清晰的看出来。
</code></pre><p><img src="https://picgo.xingenhi.cn//typora0.24580324753290586.png" alt="image"></p><hr><h2 id="_4-倒排索引简单实例" tabindex="-1"><a class="header-anchor" href="#_4-倒排索引简单实例" aria-hidden="true">#</a> 4，倒排索引简单实例</h2><p>倒排索引从逻辑结构和基本思路上来讲非常简单。下面我们通过具体实例来进行说明，使得读者能够对倒排索引有一个宏观而直接的感受。</p><p>假设文档集合包含五个文档，每个文档内容如图3所示，在图中最左端一栏是每个文档对应的文档编号。我们的任务就是对这个文档集合建立</p><p><img src="https://picgo.xingenhi.cn//typora0.8495683435887849.png" alt="image"></p><p>中文和英文等语言不同，单词之间没有明确分隔符号，所以首先要用分词系统将文档自动切分成单词序列。这样每个文档就转换为由单词序列构成的数据流，为了系统后续处理方便，需要对每个不同的单词赋予唯一的单词编号，同时记录下哪些文档包含这个单词，在如此处理结束后，我们可以得到最简单的倒排索引 如下图，“单词ID”一栏记录了每个单词的单词编号，第二栏是对应的单词，第三栏即每个单词对应的倒排列表。比如单词“谷歌”，其单词编号为1，倒排列表为{1,2,3,4,5}，说明文档集合中每个文档都包含了这个单词。</p><p><img src="https://picgo.xingenhi.cn//typora0.9673087838809521.png" alt="image"></p><p>之所以说上图所示倒排索引是最简单的，是因为这个索引系统只记载了哪些文档包含某个单词，而事实上，索引系统还可以记录除此之外的更多信息。下图是一个相对复杂些的倒排索引，与上图的基本索引系统比，在单词对应的倒排列表中不仅记录了文档编号，还记载了单词频率信息（TF），即这个单词在某个文档中的出现次数，之所以要记录这个信息，是因为词频信息在搜索结果排序时，计算查询和文档相似度是很重要的一个计算因子，所以将其记录在倒排列表中，以方便后续排序时进行分值计算。在图5的例子里，单词“创始人”的单词编号为7，对应的倒排列表内容为：（3:1），其中的3代表文档编号为3的文档包含这个单词，数字1代表词频信息，即这个单词在3号文档中只出现过1次，其它单词对应的倒排列表所代表含义与此相同。</p><p><img src="https://picgo.xingenhi.cn//typora0.05828327821626595.png" alt="image"></p><p>实用的倒排索引还可以记载更多的信息，下图所示索引系统除了记录文档编号和单词频率信息外，额外记载了两类信息，即每个单词对应的“文档频率信息”（对下图的第三栏）以及在倒排列表中记录单词在某个文档出现的位置信息。</p><p><img src="https://picgo.xingenhi.cn//typora0.072060620330237.png" alt="image"></p><p>**“文档频率信息”**代表了在文档集合中有多少个文档包含某个单词，之所以要记录这个信息，其原因与单词频率信息一样，这个信息在搜索结果排序计算中是非常重要的一个因子。而单词在某个文档中出现的位置信息并非索引系统一定要记录的，在实际的索引系统里可以包含，也可以选择不包含这个信息，之所以如此，因为这个信息对于搜索系统来说并非必需的，位置信息只有在支持“短语查询”的时候才能够派上用场。</p><pre><code> 以单词“拉斯”为例，其单词编号为8，文档频率为2，代表整个文档集合中有两个文档包含这个单词，对应的倒排列表为：{(3;1;&lt;4&gt;)，(5;1;&lt;4&gt;)},其含义为在文档3和文档5出现过这个单词，单词频率都为1，单词“拉斯”在两个文档中的出现位置都是4，即文档中第四个单词是“拉斯”。
</code></pre><hr><h2 id="_5-树形结构" tabindex="-1"><a class="header-anchor" href="#_5-树形结构" aria-hidden="true">#</a> 5，树形结构</h2><pre><code>   B树（或者B+树）是另外一种高效查找结构，图8是一个 B树结构示意图。B树与哈希方式查找不同，需要字典项能够按照大小排序（数字或者字符序），而哈希方式则无须数据满足此项要求。

   B树形成了层级查找结构，中间节点用于指出一定顺序范围的词典项目存储在哪个子树中，起到根据词典项比较大小进行导航的作用，最底层的叶子节点存储单词的地址信息，根据这个地址就可以提取出单词字符串。
</code></pre><p><img src="https://picgo.xingenhi.cn//typora0.9393583542441956.png" alt="image"></p><h2 id="_6-总结" tabindex="-1"><a class="header-anchor" href="#_6-总结" aria-hidden="true">#</a> 6，总结</h2><p><img src="https://picgo.xingenhi.cn//typora0.48170067245367987.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.7616930764874694.png" alt="image"></p><p>单词ID：记录每个单词的单词编号；</p><p>单词：对应的单词；</p><p>文档频率：代表文档集合中有多少个文档包含某个单词</p><p>倒排列表：包含单词ID及其他必要信息</p><p>DocId：单词出现的文档id</p><p>TF：单词在某个文档中出现的次数</p><p>POS：单词在文档中出现的位置</p><pre><code> 以单词“加盟”为例，其单词编号为6，文档频率为3，代表整个文档集合中有三个文档包含这个单词，对应的倒排列表为{(2;1;&lt;4&gt;),(3;1;&lt;7&gt;),(5;1;&lt;5&gt;)}，含义是在文档2，3，5出现过这个单词，在每个文档的出现过1次，单词“加盟”在第一个文档的POS是4，即文档的第四个单词是“加盟”，其他的类似。
</code></pre><p>这个倒排索引已经是一个非常完备的索引系统，实际搜索系统的索引结构基本如此。</p><h1 id="_03【熟悉】手写倒排索引" tabindex="-1"><a class="header-anchor" href="#_03【熟悉】手写倒排索引" aria-hidden="true">#</a> 03【熟悉】手写倒排索引</h1><p>之前我们必须对文档进行分词</p><p>trie.insert(&quot;华为&quot;);</p><p>trie.insert(&quot;华为手机&quot;);</p><p>trie.insert(&quot;华为平板&quot;);</p><p>trie.insert(&quot;华为牛逼&quot;);</p><p>trie.insert(&quot;鸿蒙&quot;);</p><p>trie.insert(&quot;华为鸿蒙操作系统&quot;);</p><p>文档---《华为 华为手机 华为平板 华为牛逼 鸿蒙 华为鸿蒙操作系统》</p><p>分词</p><pre><code>   --华为

   --华为手机

   --华为平板

   --华为牛逼

   --鸿蒙

   --华为鸿蒙操作系统
</code></pre><p>针对上面的分词放到字典树之后的结果为</p><p><img src="https://picgo.xingenhi.cn//typora0.7217625512846388.png" alt="image"></p><p>手写倒排</p><p>创建Node</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedList</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Created with IntelliJ IDEA.
 *字典树的节点
 * @Auther: 雷哥
 * @Date: 2020/04/02/17:21
 * @Description:
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">char</span> content<span class="token punctuation">;</span><span class="token comment">//存在当前节点的字</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> isEnd<span class="token punctuation">;</span><span class="token comment">//是否是词的结尾</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span><span class="token comment">//这个词在这个字下面的分支的个数</span>
    <span class="token keyword">private</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> childList<span class="token punctuation">;</span><span class="token comment">//子节点</span>



    <span class="token doc-comment comment">/***
    * @Description: 构造方法 初始化节点使用
    * @Param:
    * <span class="token keyword">@return</span>:
    * @Author: 雷哥
    * @Date: 2020/4/2
    */</span>
    <span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token punctuation">)</span><span class="token punctuation">{</span>
        childList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        isEnd<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
        content<span class="token operator">=</span>c<span class="token punctuation">;</span>
        count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/****
    * @Description: 提供一个遍历node中的linkedList中是否有这个字。有就意味着可以继续查找下去，没有就没有
    * @Param:
    * <span class="token keyword">@return</span>:
    * @Author: 雷哥
    * @Date: 2020/4/2
    */</span>
    <span class="token keyword">public</span> <span class="token class-name">Node</span> <span class="token function">subNode</span><span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">!=</span>childList<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>childList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Node</span> node <span class="token operator">:</span> childList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>content<span class="token operator">==</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">return</span> node<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建TrieTree</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Created with IntelliJ IDEA.
 *字典树
 * @Auther: 雷哥
 * @Date: 2020/04/02/17:30
 * @Description:
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TrieTree</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Node</span> root<span class="token punctuation">;</span><span class="token comment">//根</span>

    <span class="token doc-comment comment">/***
    * @Description: 因为只有一个根
    * @Param: []
    * <span class="token keyword">@return</span>:
    * @Author: 雷哥
    * @Date: 2020/4/2
    */</span>
    <span class="token keyword">public</span> <span class="token class-name">TrieTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        root<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token char">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//构造一个空的根节点</span>
    <span class="token punctuation">}</span>






    <span class="token doc-comment comment">/***
    * @Description: 查询
    * @Param: word 要判断的词
    * <span class="token keyword">@return</span>: 是否存在
    * @Author: 雷哥
    * @Date: 2020/4/2
    */</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token class-name">String</span> word<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//华为</span>
        <span class="token class-name">Node</span> current<span class="token operator">=</span>root<span class="token punctuation">;</span><span class="token comment">//从根节点开始找</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">!=</span>word<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//转成字符数组</span>
            <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> word<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">!=</span>chars<span class="token operator">&amp;&amp;</span>chars<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> chars<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Node</span> node <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">subNode</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">==</span>node<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//如果返回的子节点为空 说明不存在</span>
                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
current<span class="token operator">=</span>current<span class="token punctuation">.</span><span class="token function">subNode</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//判断当前节点是否是结束节点</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span><span class="token function">isEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token doc-comment comment">/***
    * @Description: 插入方法，先判断是否有这个词，(通过上面的写的查询方法) 如果没有，。就一个一个按顺序判断里面的字
     * 如果有这个字，继续判断下一个，当没有字个字的时候，对空上字new Node对象，放到上一个字的LindkedList里面
     *
    * @Param: [word]  要插入的分词
    * <span class="token keyword">@return</span>: void
    * @Author: 雷哥
    * @Date: 2020/4/2
    */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">String</span> word<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//华为电脑</span>
        <span class="token comment">//判断有没有这个词  有就直接说这个词在整个字典数已存在</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//如果不存在 ，就从根节点一个一个找</span>
        <span class="token class-name">Node</span> current<span class="token operator">=</span>root<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">!=</span>word<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> word<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">!=</span>chars<span class="token operator">&amp;&amp;</span>chars<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> chars<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Node</span> child <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">subNode</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">!=</span>child<span class="token punctuation">)</span><span class="token punctuation">{</span>
                        current<span class="token operator">=</span>child<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                        <span class="token comment">//构造新的</span>
                        current<span class="token punctuation">.</span><span class="token function">getChildList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        current<span class="token operator">=</span>current<span class="token punctuation">.</span><span class="token function">subNode</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
current<span class="token punctuation">.</span><span class="token function">setCount</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//出现次数+1</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//循环结束之后把最后一个字变成isEnd是true</span>
                current<span class="token punctuation">.</span><span class="token function">setEnd</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/***
    * @Description: 删除分词
    * @Param: [word] 要删除的分词
    * <span class="token keyword">@return</span>: void
    * @Author: 雷哥
    * @Date: 2020/4/2
    */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteWord</span><span class="token punctuation">(</span><span class="token class-name">String</span> word<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//查询一个词在不在字典树</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Node</span> current <span class="token operator">=</span> root<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> word<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> word<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> chars <span class="token operator">&amp;&amp;</span> chars<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c <span class="token operator">:</span> chars<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Node</span> node <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">subNode</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
current<span class="token punctuation">.</span><span class="token function">getChildList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
current<span class="token punctuation">.</span><span class="token function">setCount</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        current <span class="token operator">=</span> node<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                current<span class="token punctuation">.</span><span class="token function">setEnd</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//isend设置为false代表当前路上的字连起来不是一相词了</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Created with IntelliJ IDEA.
 *
 * @Auther: 雷哥
 * @Date: 2020/04/02/17:50
 * @Description:
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestTrieTree</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> content<span class="token operator">=</span><span class="token string">&quot;华为-华为手机-华为平板-华为牛逼-鸿蒙-华为鸿蒙操作系统&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//模拟分词</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//构造字典树</span>
        <span class="token class-name">TrieTree</span> trie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TrieTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//把分词插入</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> split<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            trie<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>trie<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;华为&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>trie<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;华为手&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        trie<span class="token punctuation">.</span><span class="token function">deleteWord</span><span class="token punctuation">(</span><span class="token string">&quot;华为&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>trie<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;华为&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>trie<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">&quot;华为手机&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_04【熟悉】solr概述" tabindex="-1"><a class="header-anchor" href="#_04【熟悉】solr概述" aria-hidden="true">#</a> 04【熟悉】Solr概述</h1><h2 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1，概述</h2><p>Solr 是一个基于 Apache Lucene 之上的搜索服务器，它是一个开源的、基于 Java 的信息检索库。它旨在驱动功能强大的文档检索应用程序 - 无论您需要根据用户的查询将数据服务到何处，Solr 都可以为您服务。Solr与应用程序的集成以为您服务。</p><p>下面是一个如何将 Solr 集成到应用程序中的示例</p><p><img src="https://picgo.xingenhi.cn//typora0.7052772505794406.png" alt="image"></p><p>在上述情况下，Solr 与其他服务器应用程序并行运行。例如，在线商店应用程序将提供用户界面、购物车以及为最终用户购买的方式；而库存管理应用程序将允许商店员工编辑产品信息。产品元数据将保存在某种数据库以及 Solr 中。</p>`,181),v={href:"http://lucene.apache.org/solr/",target:"_blank",rel:"noopener noreferrer"},g=p(`<hr><h2 id="_2-特点" tabindex="-1"><a class="header-anchor" href="#_2-特点" aria-hidden="true">#</a> 2，特点</h2><p>Solr是一个高性能，采用Java开发，</p><p>基于Lucene的全文搜索服务器。同时对其进行了扩展，提供了比Lucene更为丰富的查询语言，同时实现了可配置、可扩展并对查询性能进行了优化，并且提供了一个完善的功能管理界面，是一款非常优秀的全文搜索引擎。</p><p>在Lucene 主要有个算法被为</p><p>倒排索引：使用关键字去搜索文档</p><p>正排索引：使用文档的Id 去查询文档，对比文档里面有没有该关键字</p><p><strong>倒排索引：就是利用一个****Map</strong> <strong>集合搞定</strong></p><p><strong>Map&lt;String,List&gt;</strong> <strong>这个速度快</strong></p><p><strong>正排索引：扫描全表，做个匹配而已</strong></p><hr><h2 id="_3-工作方式" tabindex="-1"><a class="header-anchor" href="#_3-工作方式" aria-hidden="true">#</a> 3，工作方式</h2><p>文档通过Http利用XML或者json 加到一个搜索集合中。</p><p>查询该集合也是通过http收到一个XML/JSON响应来实现。它的主要特性包括：高效、灵活的缓存功能，垂直搜索功能，高亮显示搜索结果，通过索引复制来提高可用性，提供一套强大Data Schema来定义字段，类型和设置文本分析，提供基于Web的管理界面等</p><hr><h2 id="_4-solrcloud与solr-lucene关系" tabindex="-1"><a class="header-anchor" href="#_4-solrcloud与solr-lucene关系" aria-hidden="true">#</a> 4，SolrCloud与Solr，lucene关系</h2><h3 id="_1-solr与luence的关系" tabindex="-1"><a class="header-anchor" href="#_1-solr与luence的关系" aria-hidden="true">#</a> 1，solr与luence的关系</h3><pre><code>Many people new to Lucene and Solr will ask the obvious question: Should I use Lucene or Solr?
</code></pre><p>The answer is simple: if you&#39;re asking yourself this question, in 99% of situations, what you want to use is Solr.</p><p>A simple way to conceptualize the relationship between Solr and Lucene is that of a car and its engine. You can&#39;t drive an engine, but you can drive a car. Similarly, Lucene is a programmatic library which you can&#39;t use as-is, whereas Solr is a complete application which you can use out-of-box.</p><p>网上有这样的比喻:</p><p>(1) lucene是数据库的话，solr就是jdbc</p><p>(2) lucene是jar，solr就是一个引用这些jar来写的搜索客户端。Solr是一个可以直接用的应用，而lucene只是一些编程用的库。</p><h3 id="_2、-solr与solrcloud" tabindex="-1"><a class="header-anchor" href="#_2、-solr与solrcloud" aria-hidden="true">#</a> 2、 Solr与SolrCloud</h3><p>SolrCloud是Solr4.0版本开发出的具有开创意义的基于Solr和Zookeeper的分布式搜索方案，或者可以说，SolrCloud是Solr的一种部署方式。Solr可以以多种方式部署，例如单机方式，多机Master-Slaver方式，这些方式部署的Solr不具有SolrCloud的特色功能。</p><h1 id="_05【掌握】solr的安装" tabindex="-1"><a class="header-anchor" href="#_05【掌握】solr的安装" aria-hidden="true">#</a> 05【掌握】Solr的安装</h1><h2 id="_1-安装前的概述" tabindex="-1"><a class="header-anchor" href="#_1-安装前的概述" aria-hidden="true">#</a> 1. 安装前的概述</h2><p>1.1，solr是基于lucene而lucene是java写的，所以solr需要jdk----当前安装的solr-7.5需要jdk-1.8及以上版本，下载安装jdk并设置JAVA_HOME即可。</p><p>1.2，下载solr，然后解压即可，windows和linux都可以下.tgz（.tgz本质是.tar.gz）和.zip解压出来都一样的。</p><p>1.3，在solr5以前solr的启动都有tomcat作为容器，但是从solr5以后solr内部集成jetty服务器，可以通过bin目录中脚本直接启动。就是从solr5以后跟solr4最大的区别是被发布成一个独立的应用。</p><p>1.4，在solr5之后solr其实特别容易安装，有安装包，之后在解压，直接启动bin下solr，solr就这样完成的启动了。。</p><h2 id="_2-准备工作" tabindex="-1"><a class="header-anchor" href="#_2-准备工作" aria-hidden="true">#</a> 2. 准备工作</h2><p>1， 安装docker</p><p><img src="https://picgo.xingenhi.cn//typora0.8713465218829344.png" alt="image"></p><p>2， 安装vim</p><p><img src="https://picgo.xingenhi.cn//typora0.9088792079706911.png" alt="image"></p><p>3， 安装jdk</p><p>搜索</p><p><img src="https://picgo.xingenhi.cn//typora0.9940966661228747.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.569304006660858.png" alt="image"></p><p>yum -y install java-1.8.0-openjdk</p><h2 id="_3-安装solr" tabindex="-1"><a class="header-anchor" href="#_3-安装solr" aria-hidden="true">#</a> 3. 安装solr</h2><h3 id="_1-下载solr" tabindex="-1"><a class="header-anchor" href="#_1-下载solr" aria-hidden="true">#</a> 1)下载solr</h3>`,43),b={href:"https://lucene.apache.org/solr/",target:"_blank",rel:"noopener noreferrer"},h=p(`<p><img src="https://picgo.xingenhi.cn//typora0.290004664912706.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.134069677948468.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.5678951466207586.png" alt="image"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>wget https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>tuna<span class="token punctuation">.</span>tsinghua<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>apache<span class="token operator">/</span>lucene<span class="token operator">/</span>solr<span class="token operator">/</span><span class="token number">7.7</span><span class="token number">.2</span><span class="token operator">/</span>solr<span class="token operator">-</span><span class="token number">7.7</span><span class="token number">.2</span><span class="token punctuation">.</span>tgz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typora0.12328773422283353.png" alt="image"></p><h3 id="_2-解压solr并移动到-usr-local" tabindex="-1"><a class="header-anchor" href="#_2-解压solr并移动到-usr-local" aria-hidden="true">#</a> 2)解压solr并移动到/usr/local</h3><p><img src="https://picgo.xingenhi.cn//typora0.17447168231929283.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.7091964571888041.png" alt="image"></p><p>移动</p><p><img src="https://picgo.xingenhi.cn//typora0.09340335299658296.png" alt="image"></p><h3 id="_3-启动solr" tabindex="-1"><a class="header-anchor" href="#_3-启动solr" aria-hidden="true">#</a> 3)启动solr</h3><h4 id="进入solr目录" tabindex="-1"><a class="header-anchor" href="#进入solr目录" aria-hidden="true">#</a> 进入solr目录</h4><p><img src="https://picgo.xingenhi.cn//typora0.7166886562595955.png" alt="image"></p><h4 id="目录分析" tabindex="-1"><a class="header-anchor" href="#目录分析" aria-hidden="true">#</a> 目录分析</h4><p><img src="https://picgo.xingenhi.cn//typora0.5696995118051222.png" alt="image"></p><p>(1)bin：是脚本的启动目录</p><p>(2)contrib：Solr 的contrib目录包含 Solr 专用功能的附加插件目录</p><p>(3)dev-tools：跟开发工具相关的包</p><p>(4)dist：编译打包后存放目录，即构建后的输出产物存放的目录</p><p>(5)docs：solr文档的存放目录</p><p>(6)example：示范例子的存放目录，这里展示了DIH，即数据导入处理的例子</p><p>(7)server:此目录是 Solr 应用程序的核心所在。此目录中的 README 提供了详细的概述，但以下是一些特点：</p><p>Solr 的 Admin UI（server/solr-webapp）</p><p>Jetty 库（server/lib）</p><p>日志文件（server/logs）和日志配置（server/resources）。有关如何自定义 Solr 的默认日志记录的详细信息，请参阅配置日志记录一节。</p><p>示例配置（server/solr/configsets）</p><h4 id="进入bin目录" tabindex="-1"><a class="header-anchor" href="#进入bin目录" aria-hidden="true">#</a> 进入bin目录</h4><p><img src="https://picgo.xingenhi.cn//typora0.46942363070759957.png" alt="image"></p><h4 id="bin目录分析" tabindex="-1"><a class="header-anchor" href="#bin目录分析" aria-hidden="true">#</a> bin目录分析</h4><p>1.1、solr和solr.cmd：</p><p>分别是用于* nix系统和Windows系统，根据所选参数不同而控制solr的启动和停止。</p><p>1.2、solr.in.sh和solr.in.cmd：</p><p>这些是分别用于* nix和Windows系统的属性文件。</p><p>1.3、install_solr_services.sh：</p><p>此脚本用于* nix系统将Solr作为服务安装</p><h4 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h4><p><img src="https://picgo.xingenhi.cn//typora0.8928485237709262.png" alt="image"></p><p>出现以上问题可以修改启动代码</p><p>./solr start -force</p><p><img src="https://picgo.xingenhi.cn//typora0.866357054220113.png" alt="image"></p><p>到此启动成功</p><h3 id="_4-测试访问" tabindex="-1"><a class="header-anchor" href="#_4-测试访问" aria-hidden="true">#</a> 4)测试访问</h3>`,42),y={href:"http://www.leige.plus:8983/solr/",target:"_blank",rel:"noopener noreferrer"},f={href:"http://ip:8983/solr/",target:"_blank",rel:"noopener noreferrer"},q=p(`<p><img src="https://picgo.xingenhi.cn//typora0.541060882611975.png" alt="image"></p><h3 id="_5-安装存在的问题" tabindex="-1"><a class="header-anchor" href="#_5-安装存在的问题" aria-hidden="true">#</a> 5)安装存在的问题</h3><h4 id="无法启动" tabindex="-1"><a class="header-anchor" href="#无法启动" aria-hidden="true">#</a> 无法启动</h4><p><img src="https://picgo.xingenhi.cn//typora0.4301317062155799.png" alt="image"></p><p>如果上面的没有显示pid的值，说是有没有启动成功</p><p>原因：因为你的服务器配置太低，并关闭一个其它暂时用没用到服务</p><h4 id="启动成功之后无法访问" tabindex="-1"><a class="header-anchor" href="#启动成功之后无法访问" aria-hidden="true">#</a> 启动成功之后无法访问</h4><p>1·，阿里云 因为你对外的8983的端口没有开放</p><p><img src="https://picgo.xingenhi.cn//typora0.11585430046902903.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.7641684261532635.png" alt="image"></p><p>2，VM 因为你的虚拟机的防火墙没有关闭</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>查看防火墙状态

firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>state

<span class="token number">1</span>

停止firewall

systemctl stop firewalld<span class="token punctuation">.</span>service

<span class="token number">1</span>

禁止firewall开机启动

systemctl disable firewalld<span class="token punctuation">.</span>service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_06【掌握】solr的名词解释及配置文件说明" tabindex="-1"><a class="header-anchor" href="#_06【掌握】solr的名词解释及配置文件说明" aria-hidden="true">#</a> 06【掌握】Solr的名词解释及配置文件说明</h1><h2 id="_1-名词解释" tabindex="-1"><a class="header-anchor" href="#_1-名词解释" aria-hidden="true">#</a> 1，名词解释</h2><h3 id="_1-1-索引库" tabindex="-1"><a class="header-anchor" href="#_1-1-索引库" aria-hidden="true">#</a> 1.1 索引库</h3><p>我们导入数据，solr 会被它以某种格式保存在索引库里面！</p><p><img src="https://picgo.xingenhi.cn//typora0.4579439520243731.png" alt="image"></p><p>可以看出刚安装的现在没有任何索引库</p><h3 id="_1-2-索引分词" tabindex="-1"><a class="header-anchor" href="#_1-2-索引分词" aria-hidden="true">#</a> 1.2 索引分词</h3><p>Solr在导入数据库时，会对某些语句进行分词</p><h3 id="_1-3-搜索分词" tabindex="-1"><a class="header-anchor" href="#_1-3-搜索分词" aria-hidden="true">#</a> 1.3 搜索分词</h3><p>Solr在搜索数据库时，会对某些语句进行分词</p><h3 id="_1-4-文档" tabindex="-1"><a class="header-anchor" href="#_1-4-文档" aria-hidden="true">#</a> 1.4 文档</h3><p>Solr 里面搜索出来的每个数据，都是以xml 文件或json 来表示，这些数据被称为文档</p><p>Json-&gt;文档</p><p>Xml-&gt;文件</p><h3 id="_1-5-字段" tabindex="-1"><a class="header-anchor" href="#_1-5-字段" aria-hidden="true">#</a> 1.5 字段</h3><p>文档里面可能有很多的字段，就类似于数据库的字段</p><h3 id="_1-6-和mysql的数据库做对比" tabindex="-1"><a class="header-anchor" href="#_1-6-和mysql的数据库做对比" aria-hidden="true">#</a> 1.6 和Mysql的数据库做对比</h3><table><thead><tr><th>mysql</th><th>Solr</th></tr></thead><tbody><tr><td>数据库</td><td>索引库</td></tr><tr><td>表</td><td>Solr里面直接把数据放在索引库，没有表的概念</td></tr><tr><td>行 对象</td><td>文档</td></tr><tr><td>列 对象的属性</td><td>字段</td></tr></tbody></table><hr><h2 id="_2-配置文件说明" tabindex="-1"><a class="header-anchor" href="#_2-配置文件说明" aria-hidden="true">#</a> 2，配置文件说明</h2><p>在 Solr 中有几个配置文件，您将在执行过程中与之交互。</p><p>这些文件中的很多都是 XML 格式的，尽管与配置设置交互的 API 在需要时往往接受 JSON 以进行编程访问。</p><p><img src="https://picgo.xingenhi.cn//typora0.9868608262023318.png" alt="image"></p><h3 id="_2-1-solr-home" tabindex="-1"><a class="header-anchor" href="#_2-1-solr-home" aria-hidden="true">#</a> 2.1，Solr Home</h3><p>在运行 Solr 时，您需要访问主目录。</p><p>当您第一次安装 Solr 时，您的主目录是：server/solr。</p><p><img src="https://picgo.xingenhi.cn//typora0.30390858215918065.png" alt="image"></p><p>Solr 主目录包含重要的配置信息，并且是 Solr 将存储其索引的地方。</p><p>以下示例显示了 Solr 主目录中的关键部分：</p><p>示例-单机模式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span>solr<span class="token operator">-</span>home<span class="token operator">-</span>directory<span class="token operator">&gt;</span><span class="token operator">/</span>
   solr<span class="token punctuation">.</span>xml
   core_name1<span class="token operator">/</span>
      core<span class="token punctuation">.</span>properties
      conf<span class="token operator">/</span>
         solrconfig<span class="token punctuation">.</span>xml
         managed<span class="token operator">-</span>schema
      data<span class="token operator">/</span>
   core_name2<span class="token operator">/</span>
      core<span class="token punctuation">.</span>properties
      conf<span class="token operator">/</span>
         solrconfig<span class="token punctuation">.</span>xml
         managed<span class="token operator">-</span>schema
      data<span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-solr-配置文件" tabindex="-1"><a class="header-anchor" href="#_2-2-solr-配置文件" aria-hidden="true">#</a> 2.2，Solr 配置文件</h3><p>在 Solr 的目录中，你会发现这些文件：</p><p>solr.xml：为您的 Solr 服务器实例指定配置选项。</p><p>每个 Solr core：</p><ul><li>core.properties：为每个核心定义特定的属性，例如其名称、核心所属的集合、模式的位置以及其他参数。</li><li>solrconfig.xml：控制高级行为。例如，您可以为数据目录指定一个备用位置。</li><li>managed-schema（或用 schema.xml 替代）描述您将要求 Solr 索引的文档。模式将文档定义为字段集合。您可以同时定义字段类型和字段本身。字段类型定义功能强大，包含有关 Solr 如何处理传入字段值和查询值的信息。</li><li>data/：包含索引文件的目录。</li></ul><h1 id="_07【掌握】solr索引库说明及创建" tabindex="-1"><a class="header-anchor" href="#_07【掌握】solr索引库说明及创建" aria-hidden="true">#</a> 07【掌握】Solr索引库说明及创建</h1><h2 id="_1-索引库概述" tabindex="-1"><a class="header-anchor" href="#_1-索引库概述" aria-hidden="true">#</a> 1. 索引库概述</h2><p><strong>索引库类似于mysql的数据库，所以如果要使用Solr必须创建一个索引库才能使用</strong></p><h2 id="_2-使用solr管理页面去创建【不推荐】" tabindex="-1"><a class="header-anchor" href="#_2-使用solr管理页面去创建【不推荐】" aria-hidden="true">#</a> 2. 使用solr管理页面去创建【不推荐】</h2><h3 id="_2-1打开solr的管理页面" tabindex="-1"><a class="header-anchor" href="#_2-1打开solr的管理页面" aria-hidden="true">#</a> 2.1打开solr的管理页面</h3><p><img src="https://picgo.xingenhi.cn//typora0.28899829665530047.png" alt="image"></p><h3 id="_2-2点击add-core" tabindex="-1"><a class="header-anchor" href="#_2-2点击add-core" aria-hidden="true">#</a> 2.2点击add Core</h3><p><img src="https://picgo.xingenhi.cn//typora0.7799541409171988.png" alt="image"></p><p>name:自定义名字 建议和instanceDir目录保持一样</p><p>instanceDir:实例名称 一般和name一样</p><p>dataDir:默认的默认数据存储目录 一般data</p><p>config指写配置文件 db1-core/conf/solrconfig.xml</p><p>schema:指定属性的xml 默认为db1-conre/conf/managed-schema文件</p><h3 id="_2-3点击add-core报错" tabindex="-1"><a class="header-anchor" href="#_2-3点击add-core报错" aria-hidden="true">#</a> 2.3点击add Core报错</h3><p><img src="https://picgo.xingenhi.cn//typora0.320441295082761.png" alt="image"></p><p>查看usr/local/server/solr/</p><p><img src="https://picgo.xingenhi.cn//typora0.25008116085947135.png" alt="image"></p><h3 id="_2-4解决上面报错的问题" tabindex="-1"><a class="header-anchor" href="#_2-4解决上面报错的问题" aria-hidden="true">#</a> 2.4解决上面报错的问题</h3><p>进入db1-core这个目录发现里面啥都没有</p><p><img src="https://picgo.xingenhi.cn//typora0.4074824955120535.png" alt="image"></p><p>执行下面的命令解决默认配置问题不存在的问题</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>cp <span class="token operator">-</span>r <span class="token punctuation">.</span><span class="token punctuation">.</span>/configsets<span class="token operator">/</span>sample_techproducts_configs<span class="token comment">/* ./
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typora0.05607407394764405.png" alt="image"></p><p>回到solr管理台</p><p><img src="https://picgo.xingenhi.cn//typora0.46211513264866977.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.041064168007534575.png" alt="image"></p><h2 id="_3-使用命令创建【推荐】" tabindex="-1"><a class="header-anchor" href="#_3-使用命令创建【推荐】" aria-hidden="true">#</a> 3. 使用命令创建【推荐】</h2><h3 id="_3-1-进入solr的-bin目录" tabindex="-1"><a class="header-anchor" href="#_3-1-进入solr的-bin目录" aria-hidden="true">#</a> 3.1，进入solr的/bin目录</h3><p><img src="https://picgo.xingenhi.cn//typora0.7804519027826823.png" alt="image"></p><h3 id="_3-2-执行创建命令" tabindex="-1"><a class="header-anchor" href="#_3-2-执行创建命令" aria-hidden="true">#</a> 3.2，执行创建命令</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">.</span>/solr create_core <span class="token operator">-</span>c db2_core <span class="token operator">-</span>force
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typora0.757533323829163.png" alt="image"></p><p>修改创建命令</p><p><img src="https://picgo.xingenhi.cn//typora0.5149653675478755.png" alt="image"></p><p>查看server/solr/</p><p><img src="https://picgo.xingenhi.cn//typora0.36081757517738006.png" alt="image"></p><p>页面查看</p><p><img src="https://picgo.xingenhi.cn//typora0.841427204213301.png" alt="image"></p><h1 id="_08【熟悉】solr控制台说明-主面板" tabindex="-1"><a class="header-anchor" href="#_08【熟悉】solr控制台说明-主面板" aria-hidden="true">#</a> 08【熟悉】Solr控制台说明-主面板</h1><h2 id="_1-dashboard-仪表盘" tabindex="-1"><a class="header-anchor" href="#_1-dashboard-仪表盘" aria-hidden="true">#</a> 1,Dashboard(仪表盘)</h2>`,88),w={href:"http://www.leige.plus:8983/solr",target:"_blank",rel:"noopener noreferrer"},S=p(`<p>这里的图片描述</p><p><img src="https://picgo.xingenhi.cn//typora0.4512884512737753.png" alt="image"></p><h2 id="_2-logging-日志" tabindex="-1"><a class="header-anchor" href="#_2-logging-日志" aria-hidden="true">#</a> 2.Logging(日志)</h2><p>显示solr运行出现的异常或错误</p><p><img src="https://picgo.xingenhi.cn//typora0.18807921780992418.png" alt="image"></p><h2 id="_3-core-admin-core管理" tabindex="-1"><a class="header-anchor" href="#_3-core-admin-core管理" aria-hidden="true">#</a> 3.Core Admin (core管理)</h2><p>主要有Add Core(添加核心)， Unload（卸载核心），Rename（重命名核心），Reload(重新加载核心)，Optimize（优化索引库）</p><p>Add Core是添加core：主要是在instanceDir对应的文件夹里生成一个core.properties文件</p><p>name：给core起的名字；</p><p>instanceDir：与我们在配置solr到tomcat里时的solr_home里新建的core文件夹名一致；</p><p>dataDir:确认Add Core时，会在new_core目录下生成名为data的文件夹</p><p>config：new_core下的conf下的config配置文件(solrconfig.xml)</p><p>schema: new_core下的conf下的schema文件(schema.xml)</p><p><img src="https://picgo.xingenhi.cn//typora0.5885832560151827.png" alt="image"></p><p>确认Add Core时，会在new_core下生成data文件夹，与core.properties文件。core.properties文件里内容如下：</p><p>前面已说过</p><h2 id="_4-java-properties" tabindex="-1"><a class="header-anchor" href="#_4-java-properties" aria-hidden="true">#</a> 4.Java Properties</h2><p>可查看到Java相关的一些属性的信息</p><p><img src="https://picgo.xingenhi.cn//typora0.9496877659182503.png" alt="image"></p><h1 id="_09【熟悉】solr控制台-core操作说明" tabindex="-1"><a class="header-anchor" href="#_09【熟悉】solr控制台-core操作说明" aria-hidden="true">#</a> 09【熟悉】Solr控制台-core操作说明</h1><h2 id="core-selecter-core选择器" tabindex="-1"><a class="header-anchor" href="#core-selecter-core选择器" aria-hidden="true">#</a> Core Selecter(core选择器)</h2><p>需要在Core Admin里添加了core后才有可选项，这里以已经添加好的ims_advertiser_core为例。</p><p><img src="https://picgo.xingenhi.cn//typora0.15080566227757372.png" alt="image"></p><h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h2><p><img src="https://picgo.xingenhi.cn//typora0.9121730224900033.png" alt="image"></p><h2 id="analysis-分析器" tabindex="-1"><a class="header-anchor" href="#analysis-分析器" aria-hidden="true">#</a> Analysis（分析器）</h2><p><img src="https://picgo.xingenhi.cn//typora0.6077453120831902.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.7918305932944006.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.44513614849794414.png" alt="image"></p><h2 id="schema【-solr-db2-core-conf-】" tabindex="-1"><a class="header-anchor" href="#schema【-solr-db2-core-conf-】" aria-hidden="true">#</a> Schema【---solr/db2-core/conf/】</h2><p><img src="https://picgo.xingenhi.cn//typora0.31881917855848724.png" alt="image"></p><h3 id="添加一个field" tabindex="-1"><a class="header-anchor" href="#添加一个field" aria-hidden="true">#</a> 添加一个field</h3><p><img src="https://picgo.xingenhi.cn//typora0.2849316278674309.png" alt="image"></p><p>添加完成之后查managed-schma多一个属性</p><p>相当于给数据库里面的某一个表添加了一个叫goods_name和字段</p><p><img src="https://picgo.xingenhi.cn//typora0.2785289460646179.png" alt="image"></p><h3 id="添加一个动态的field" tabindex="-1"><a class="header-anchor" href="#添加一个动态的field" aria-hidden="true">#</a> 添加一个动态的field</h3><p><img src="https://picgo.xingenhi.cn//typora0.45656198630838496.png" alt="image"></p><p>添加完成之后查managed-schma多一个属性</p><p><img src="https://picgo.xingenhi.cn//typora0.7105357099390304.png" alt="image"></p><h3 id="添加一个动态的copyfield" tabindex="-1"><a class="header-anchor" href="#添加一个动态的copyfield" aria-hidden="true">#</a> 添加一个动态的copyfield</h3><p>添加一个goods_keywords</p><p><img src="https://picgo.xingenhi.cn//typora0.9721917834158949.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.22202320804518438.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.586652422741857.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.8687310228764699.png" alt="image"></p><h2 id="document和query" tabindex="-1"><a class="header-anchor" href="#document和query" aria-hidden="true">#</a> Document和Query</h2><p>因为上面添加了goods_name 和goods_remark的属性现地相当于有一个solr的数据库里面有一个表叫db2-core 这个表里面现在自己加了goods_name和goods_remark的两个字段</p><h3 id="向库里面增加数据" tabindex="-1"><a class="header-anchor" href="#向库里面增加数据" aria-hidden="true">#</a> 向库里面增加数据</h3><p><img src="https://picgo.xingenhi.cn//typora0.8696037814688927.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.5936423847933903.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.9995157413750735.png" alt="image"></p><h3 id="向库里面修改数据" tabindex="-1"><a class="header-anchor" href="#向库里面修改数据" aria-hidden="true">#</a> 向库里面修改数据</h3><p><img src="https://picgo.xingenhi.cn//typora0.6991162502418986.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.6623443372669342.png" alt="image"></p><h3 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据" aria-hidden="true">#</a> 删除数据</h3><h4 id="根据id删除" tabindex="-1"><a class="header-anchor" href="#根据id删除" aria-hidden="true">#</a> 根据ID删除</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>delete<span class="token punctuation">&gt;</span></span><span class="token generics"><span class="token punctuation">&lt;</span>query<span class="token punctuation">&gt;</span></span>id<span class="token operator">:</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>query<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>delete<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>commit<span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typora0.6921262838662112.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.8774861735970252.png" alt="image"></p><h4 id="全删除" tabindex="-1"><a class="header-anchor" href="#全删除" aria-hidden="true">#</a> 全删除</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>query</span><span class="token punctuation">&gt;</span></span>*:*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>query</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>commit</span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typora0.42367924410004026.png" alt="image"></p><h3 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据" aria-hidden="true">#</a> 查询数据</h3><p><img src="https://picgo.xingenhi.cn//typora0.7141267187100482.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.9715359356004677.png" alt="image"></p><p>Request-Handler(qt):</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>q<span class="token operator">:</span> 查询字符串（必须的）。<span class="token operator">:</span>表示查询所有；keyword<span class="token operator">:</span>吕布 表示按关键字“吕布”查询

fq<span class="token operator">:</span> filter query 过滤查询。使用<span class="token class-name">Filter</span> <span class="token class-name">Query</span>可以充分利用<span class="token class-name">Filter</span> <span class="token class-name">Query</span> <span class="token class-name">Cache</span>，提高检索性能。作用：在q查询符合结果中同时是fq查询符合的<span class="token punctuation">(</span>类似求交集<span class="token punctuation">)</span>，例如：q<span class="token operator">=</span>mm<span class="token operator">&amp;</span>fq<span class="token operator">=</span>date_time<span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">20081001</span> <span class="token constant">TO</span> <span class="token number">20091031</span><span class="token punctuation">]</span>，找关键字mm，并且date_time是<span class="token number">20081001</span>到<span class="token number">20091031</span>之间的。 

sort<span class="token operator">:</span> 排序。格式如下：字段名 排序方式；如advertiserId desc 表示按id字段降序排列查询结果。

start<span class="token punctuation">,</span>rows<span class="token operator">:</span>表示查回结果从第几条数据开始显示，共显示多少条。

fl<span class="token operator">:</span> field list。指定查询结果返回哪些字段。多个时以空格“ ”或逗号“<span class="token punctuation">,</span>”分隔。不指定时，默认全返回。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typora0.356083843420933.png" alt="image"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// df: default field默认的查询字段，一般默认指定。</span>

<span class="token comment">// Raw Query Parameters:</span>



wt<span class="token operator">:</span> write type。指定查询输出结果格式，我们常用的有json格式与xml格式。在solrconfig<span class="token punctuation">.</span>xml中定义了查询输出格式：xml、json、<span class="token class-name">Python</span>、ruby、<span class="token constant">PHP</span>、phps、custom。 

indent<span class="token operator">:</span> 返回的结果是否缩进，默认关闭，用 indent<span class="token operator">=</span><span class="token boolean">true</span> <span class="token operator">|</span> on 开启，一般调试json<span class="token punctuation">,</span>php<span class="token punctuation">,</span>phps<span class="token punctuation">,</span>ruby输出才有必要用这个参数。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typora0.09602132956122982.png" alt="image"></p><p><s>debugQuery: 设置返回结果是否显示Debug信息。</s></p><p><s>dismax:</s></p><p><s>edismax:</s></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>hl<span class="token operator">:</span> high light 高亮。hl<span class="token operator">=</span><span class="token boolean">true</span>表示启用高亮

hl<span class="token punctuation">.</span>fl ： 用空格或逗号隔开的字段列表（指定高亮的字段）。要启用某个字段的highlight功能，就得保证该字段在schema中是stored。如果该参数未被给出，那么就会高 亮默认字段 standard handler会用df参数，dismax字段用qf参数。你可以使用星号去方便的高亮所有字段。如果你使用了通配符，那么要考虑启用 hl<span class="token punctuation">.</span>requiredFieldMatch选项。

hl<span class="token punctuation">.</span>simple<span class="token punctuation">.</span>pre：

hl<span class="token punctuation">.</span>requireFieldMatch<span class="token operator">:</span> 如果置为<span class="token boolean">true</span>，除非该字段的查询结果不为空才会被高亮。它的默认值是<span class="token boolean">false</span>，意味 着它可能匹配某个字段却高亮一个不同的字段。如果hl<span class="token punctuation">.</span>fl使用了通配符，那么就要启用该参数。尽管如此，如果你的查询是all字段（可能是使用 copy<span class="token operator">-</span>field 指令），那么还是把它设为<span class="token boolean">false</span>，这样搜索结果能表明哪个字段的查询文本未被找到 

hl<span class="token punctuation">.</span>usePhraseHighlighter：如果一个查询中含有短语（引号框起来的）那么会保证一定要完全匹配短语的才会被高亮。

hl<span class="token punctuation">.</span>highlightMultiTerm：如果使用通配符和模糊搜索，那么会确保与通配符匹配的term会高亮。默认为<span class="token boolean">false</span>，同时hl<span class="token punctuation">.</span>usePhraseHighlighter要为<span class="token boolean">true</span>。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typora0.5836923830647706.png" alt="image"></p><h2 id="files" tabindex="-1"><a class="header-anchor" href="#files" aria-hidden="true">#</a> Files</h2><p><img src="https://picgo.xingenhi.cn//typora0.10114803767829729.png" alt="image"></p><h2 id="ping" tabindex="-1"><a class="header-anchor" href="#ping" aria-hidden="true">#</a> Ping</h2><p>延时</p><p><img src="https://picgo.xingenhi.cn//typora0.47665764041593855.png" alt="image"></p><h2 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> Plugins</h2><p><img src="https://picgo.xingenhi.cn//typora0.4642732272320729.png" alt="image"></p><h2 id="replication" tabindex="-1"><a class="header-anchor" href="#replication" aria-hidden="true">#</a> Replication</h2><p>复制</p><h2 id="dataimport" tabindex="-1"><a class="header-anchor" href="#dataimport" aria-hidden="true">#</a> Dataimport</h2><p>数据全量和增量导入</p><p><img src="https://picgo.xingenhi.cn//typora0.5595112889532957.png" alt="image"></p><h1 id="_10【掌握】solr的分词及ik库的使用" tabindex="-1"><a class="header-anchor" href="#_10【掌握】solr的分词及ik库的使用" aria-hidden="true">#</a> 10【掌握】Solr的分词及IK库的使用</h1><h2 id="_1-什么是分词" tabindex="-1"><a class="header-anchor" href="#_1-什么是分词" aria-hidden="true">#</a> 1，什么是分词</h2><p>分词：雷哥的理解是，输入的一句话，按照它自己定义的规则分为常用词语。</p><p>首先，Solr有自己基本的类型，string、int、date、long等等。</p><p>对于string类型，比如在你的core/conf/manage-schema文件中，配置一个字段类型为string类型，如果查询符合“我是中国人”的数据，它就认为“我是中国人”是一个词语。</p><p>但是如果你将该字段设置成了分词，即配置成了text_ik类型，就可能匹配“我”、“中国人”、“中国”、“中”、“人”带有这些字的该字段数据都可能被查询到。这就是分词带来的结果。具体要按照各自的业务来配置是否分词，分词对于大文本字段设置是合理的，但是对于小字段，设置分词是没必要的，甚至有相反的结果。比如你的某一个叫姓名的字段设置了分词，还不如设置string,查询时模糊匹配效果最好，（模糊匹配就是查询条件两边加上*），当然也要看自己业务需求是什么。</p><h2 id="_2-配置目地" tabindex="-1"><a class="header-anchor" href="#_2-配置目地" aria-hidden="true">#</a> 2，配置目地</h2><p>就是让solr能对中文进行分词</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image00248c127f7-7513-4ede-bdb4-1aeedfb92cd9.jpg" alt="image"></p><h2 id="_3-分词器的选择" tabindex="-1"><a class="header-anchor" href="#_3-分词器的选择" aria-hidden="true">#</a> 3，分词器的选择</h2><p>之前我们使用jieba分词，效果不是很好。</p><p>现在有个非常牛逼的分词器，IK 分词器，效果非常好，如果你一直使用solr 那么以后将一直使用IK分词器。</p><p><strong>为什么使用IK？？</strong></p><p>·中文分词在solr里面是没有默认开启的，需要自己配置一个中文分词器。</p><p>·目前可用的分词器有smartcn，IK，Jeasy，庖丁。其实主要是两种，一种是基于中科院ICTCLAS的隐式马尔科夫HMM算法的中文分词器，如smartcn，ictclas4j，优点是分词准确度高，缺点是不能使用用户自定义词库；另一种是基于最大匹配的分词器，如IK ，Jeasy，庖丁，优点是可以自定义词库，增加新词，缺点是分出来的垃圾词较多。各有优缺点。</p><p>·主流还是ik,可以扩展自己的词库，非常方便，加入一些热搜词，主题词，对于搜索而言，非常方便</p><h2 id="_4-分词器的的配置" tabindex="-1"><a class="header-anchor" href="#_4-分词器的的配置" aria-hidden="true">#</a> 4，分词器的的配置</h2><h3 id="_4-1-下载" tabindex="-1"><a class="header-anchor" href="#_4-1-下载" aria-hidden="true">#</a> 4.1，下载</h3>`,106),x={href:"http://files.cnblogs.com/files/zhangweizhong/ikanalyzer-solr5.zip",target:"_blank",rel:"noopener noreferrer"},_=p(`<p><img src="https://picgo.xingenhi.cn//typoraclip_image00475c4eefe-9554-4021-936c-04a20475f714.jpg" alt="image"></p><h3 id="_4-2-解压文件及说明" tabindex="-1"><a class="header-anchor" href="#_4-2-解压文件及说明" aria-hidden="true">#</a> 4.2，解压文件及说明</h3><p><img src="https://picgo.xingenhi.cn//typoraclip_image0065331411a-acac-41e1-9bb7-296e55f4ca53.jpg" alt="image"></p><p>ext.dic<strong>自定义词</strong> 如沙雕 在汉语里面不是一个词 ，它只是一个网络用语，可以配置到这里面让它成为一个词</p><p>stopword.dic <strong>停止字典</strong> 如 啊 吧 唉 不作分词</p><p>IKAnalyzer.cfg.xml<strong>配置ik的配置文件</strong> 不用改</p><p>Jar：如果要使用ik分词要导入的<strong>jar包</strong></p><h3 id="_4-3-修改managed-sahma" tabindex="-1"><a class="header-anchor" href="#_4-3-修改managed-sahma" aria-hidden="true">#</a> 4.3，修改managed-sahma</h3><p>UseSmart 和分词的粒度相关：</p><p>False: 分词的粒度大，一句话里面分的词语少</p><p>True:分词的粒度细,一句话里面分的词语多</p><p>那我们在导入时需要的关键字多吗？让索引的数据量少一点。我们的粒度大：False</p><p>我们在搜索时需要的关键字多吗？我们想尽可能的覆盖所有的范围，我们的粒度要细：True</p><p>4.4，把修改managed-sahma覆盖到solr</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image008123e1c09-8300-4f17-a780-c883c0e8bc7d.jpg" alt="image"></p><h3 id="_4-5-重启solr" tabindex="-1"><a class="header-anchor" href="#_4-5-重启solr" aria-hidden="true">#</a> 4.5，重启solr</h3><p><img src="https://picgo.xingenhi.cn//typoraclip_image010d0c672f8-564d-4ebe-8b4d-ddab553c21ad.jpg" alt="image"></p><h3 id="_4-6-查看分析出现错" tabindex="-1"><a class="header-anchor" href="#_4-6-查看分析出现错" aria-hidden="true">#</a> 4.6，查看分析出现错</h3><p><img src="https://picgo.xingenhi.cn//typoraclip_image01221c22aff-f2a5-4867-9231-afd70fd22979.jpg" alt="image"></p><p>产生原因是因为我们只添加发分词</p><p>但是ik想要运行必须要加入相关的配置</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image0141aa17dad-fc2b-4445-bb84-ba4ba855b223.jpg" alt="image"></p><p>上面的配置没有加入</p><h3 id="_4-7-把ik的配置入到solr" tabindex="-1"><a class="header-anchor" href="#_4-7-把ik的配置入到solr" aria-hidden="true">#</a> 4.7，把IK的配置入到solr</h3><h4 id="_4-7-1-放入jar包" tabindex="-1"><a class="header-anchor" href="#_4-7-1-放入jar包" aria-hidden="true">#</a> 4.7.1，放入jar包</h4><p><img src="https://picgo.xingenhi.cn//typoraclip_image0167efe2dcc-6f4a-4826-900d-06274c444178.jpg" alt="image"></p><h4 id="_4-7-2-放配置" tabindex="-1"><a class="header-anchor" href="#_4-7-2-放配置" aria-hidden="true">#</a> 4.7.2，放配置</h4><p>在/usr/local/solr-7.7.2/server/solr-webapp/webapp/WEB-INF创建一个classes</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image0188eb48147-3b6f-4452-be4f-ba4c08a6e033.jpg" alt="image"></p><h3 id="_4-8-重启solr分析" tabindex="-1"><a class="header-anchor" href="#_4-8-重启solr分析" aria-hidden="true">#</a> 4.8，重启solr分析</h3><p><img src="https://picgo.xingenhi.cn//typoraclip_image0205038548c-4214-4e1c-9b25-020dae53c5e6.jpg" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typoraclip_image0221b9651e2-6546-4608-bf16-5689d25834a2.jpg" alt="image"></p><h3 id="_4-9存在问题" tabindex="-1"><a class="header-anchor" href="#_4-9存在问题" aria-hidden="true">#</a> 4.9存在问题</h3><p><img src="https://picgo.xingenhi.cn//typoraclip_image0242b9594eb-a756-4445-93e7-1a96df23dcf2.jpg" alt="image"></p><p>要索引时要遵循一个原因</p><p>1， 索引时分词的要尽量少</p><p>2， 搜索时分词尽量多</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image0266d7a057a-97b6-43eb-91c1-e6d3f31d2998.jpg" alt="image"></p><p>改完重新覆盖</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image0284258f00a-6343-4acc-bcd9-0d8bc82a9d8c.jpg" alt="image"></p><p>重启测试</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image0305dbc8dbb-fa73-4b1b-9431-6720dccdaef7.jpg" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typoraclip_image032fc1d379b-e510-4e2f-adb6-b33bf04e065e.jpg" alt="image"></p><h3 id="_4-10如何使用到属性上" tabindex="-1"><a class="header-anchor" href="#_4-10如何使用到属性上" aria-hidden="true">#</a> 4.10如何使用到属性上</h3><h5 id="添加一个属性" tabindex="-1"><a class="header-anchor" href="#添加一个属性" aria-hidden="true">#</a> 添加一个属性</h5><p><img src="https://picgo.xingenhi.cn//typoraclip_image034a8675c1f-a224-4f5a-9451-f6fda7e11d85.jpg" alt="image"></p><h5 id="添加数据测试下" tabindex="-1"><a class="header-anchor" href="#添加数据测试下" aria-hidden="true">#</a> 添加数据测试下</h5><h6 id="添加数据" tabindex="-1"><a class="header-anchor" href="#添加数据" aria-hidden="true">#</a> 添加数据</h6><p><img src="https://picgo.xingenhi.cn//typoraclip_image036c26eb44d-55ff-47f4-9e96-26c4fc658b1a.jpg" alt="image"></p><h6 id="查看分词" tabindex="-1"><a class="header-anchor" href="#查看分词" aria-hidden="true">#</a> 查看分词</h6><p><img src="https://picgo.xingenhi.cn//typoraclip_image038128076bc-9602-40df-aae3-ad9ecca5a175.jpg" alt="image"></p><h6 id="查询测试" tabindex="-1"><a class="header-anchor" href="#查询测试" aria-hidden="true">#</a> 查询测试</h6><p><img src="https://picgo.xingenhi.cn//typoraclip_image040e054f7cd-1c4a-42df-9370-1406bdbea9d1.jpg" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typoraclip_image04293cd06a4-403b-4572-9049-571914660a9d.jpg" alt="image"></p><p>为什么pro3有 pro没有 因为ik分词时认为pro3是一个词 而pro不是词</p><h3 id="_4-11-ext-dic的说明" tabindex="-1"><a class="header-anchor" href="#_4-11-ext-dic的说明" aria-hidden="true">#</a> 4.11 ext.dic的说明</h3><p>在ext.dic里添加一个自定义的词 沙雕</p><p>覆盖 查询</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image0449a1e0e67-3ae1-4ed6-8bb4-0fde06dc55f0.jpg" alt="image"></p><p>重启测试</p><p><img src="https://picgo.xingenhi.cn//typoraclip_image046e47802ad-8e9b-48f9-8df9-f0943ffcf26f.jpg" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typoraclip_image0486541e2cb-0640-4f44-bab7-efb89576f61e.jpg" alt="image"></p><p>发现现在solr认为 沙雕就是一个词</p><h1 id="_11【掌握】solr的javaapi讲解solrj" tabindex="-1"><a class="header-anchor" href="#_11【掌握】solr的javaapi讲解solrj" aria-hidden="true">#</a> 11【掌握】Solr的javaAPI讲解solrj</h1><h2 id="_1、solr项目pom依赖" tabindex="-1"><a class="header-anchor" href="#_1、solr项目pom依赖" aria-hidden="true">#</a> 1、solr项目pom依赖</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>properties<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>solrj<span class="token punctuation">.</span>version<span class="token punctuation">&gt;</span></span><span class="token number">7.7</span><span class="token number">.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>solrj<span class="token punctuation">.</span>version<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>properties<span class="token operator">&gt;</span>
<span class="token generics"><span class="token punctuation">&lt;</span>dependencies<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
        <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>solr<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>solr<span class="token operator">-</span>solrj<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{</span>solrj<span class="token punctuation">.</span>version<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
        <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>projectlombok<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>lombok<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.18</span><span class="token number">.12</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、添加数据" tabindex="-1"><a class="header-anchor" href="#_2、添加数据" aria-hidden="true">#</a> 2、添加数据</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @Description :添加简单数据
 * @Author : 辛根
 * @Date : 2020/4/22 18:14
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test02AddData</span> <span class="token punctuation">{</span>

    <span class="token comment">// 声明一个连接solr的地址(ip:port/solr/库名)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SOLR_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://129.211.39.189:8983/solr/db2_core&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// 声明一个连接solr的对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpSolrClient</span> httpSolrClient<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        httpSolrClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpSolrClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token constant">SOLR_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">SolrServerException</span> <span class="token punctuation">{</span>

        <span class="token comment">// 一个一个添加</span>
<span class="token comment">//        SolrInputDocument doc = new SolrInputDocument();</span>
<span class="token comment">//        doc.addField(&quot;goods_name&quot;,&quot;小青柑普洱茶 正宗生晒新会小青柑100g 茶叶品尝装 小青桔陈皮云南宫廷普洱茶熟茶&quot;);</span>
<span class="token comment">//        doc.addField(&quot;goods_remark&quot;,&quot;该商品购买1-100件时享受单件价￥9.90，超出数量以结算价为准，仅限购买一次&quot;);</span>
<span class="token comment">//        httpSolrClient.add(doc);</span>
<span class="token comment">//        httpSolrClient.commit();</span>
<span class="token comment">//        httpSolrClient.close();</span>
<span class="token comment">//        System.out.println(&quot;添加成功&quot;);</span>

        <span class="token comment">// 一个集合一个集合的添加</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SolrInputDocument</span><span class="token punctuation">&gt;</span></span> docs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SolrInputDocument</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">SolrInputDocument</span> dox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SolrInputDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            dox<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;goods_name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;锤子手机&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            dox<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;goods_remark&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;坚果Pro3----&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            docs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>dox<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;添加成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 参数说明：第一个指的是库名，第二个指的是传入的SolrInputDocument对象</span>
        <span class="token comment">// httpSolrClient.add(&quot;db1-core&quot;,docs);</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、删除数据" tabindex="-1"><a class="header-anchor" href="#_3、删除数据" aria-hidden="true">#</a> 3、删除数据</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * @Description :添加简单数据
 * @Author : 辛根
 * @Date : 2020/4/22 18:14
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test03DeleteData</span> <span class="token punctuation">{</span>

    <span class="token comment">// 声明一个连接solr的地址(ip:port/solr/库名)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SOLR_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://129.211.39.189:8983/solr/db2_core&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// 声明一个连接solr的对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpSolrClient</span> httpSolrClient<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        httpSolrClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpSolrClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token constant">SOLR_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">SolrServerException</span> <span class="token punctuation">{</span>

        <span class="token comment">// 根据id删除</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span><span class="token string">&quot;8d64e944-bebf-47ce-87c0-c715d8fbcada&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 根据ids删除</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;aeecc2e8-e4aa-4b5f-bb34-513426aaee87&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;d48b51ac-ccb2-4b7c-83f5-b3d5e9efb11e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 根据id删除指定库的数据</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span><span class="token string">&quot;db1-core&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 全删除</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">deleteByQuery</span><span class="token punctuation">(</span><span class="token string">&quot;*:*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        httpSolrClient<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、按照对象格式添加" tabindex="-1"><a class="header-anchor" href="#_4、按照对象格式添加" aria-hidden="true">#</a> 4、按照对象格式添加</h2><p>（1）普通方式：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test04AddCustData</span> <span class="token punctuation">{</span>

    <span class="token comment">// 声明一个连接solr的地址(ip:port/solr/库名)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SOLR_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://129.211.39.189:8983/solr/db2_core&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// 声明一个连接solr的对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpSolrClient</span> httpSolrClient<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        httpSolrClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpSolrClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token constant">SOLR_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">SolrServerException</span> <span class="token punctuation">{</span>

        <span class="token comment">//一个集合一个集合的添加</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SolrInputDocument</span><span class="token punctuation">&gt;</span></span> persons <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SolrInputDocument</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
        <span class="token class-name">SolrInputDocument</span> lvbu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SolrInputDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lvbu<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lvbu<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;吕布&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lvbu<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lvbu<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lvbu<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;salary&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;8888.88&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lvbu<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;人中吕布,马中赤兔&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SolrInputDocument</span> zhaoyun <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SolrInputDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhaoyun<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhaoyun<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;赵云&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhaoyun<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhaoyun<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhaoyun<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;salary&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;8888.88&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhaoyun<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;七进七出&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SolrInputDocument</span> guanyu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SolrInputDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        guanyu<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        guanyu<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;关羽&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        guanyu<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        guanyu<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        guanyu<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;salary&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;9999.88&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        guanyu<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;忠肝义胆&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SolrInputDocument</span> zhangfei <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SolrInputDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhangfei<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhangfei<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;张飞&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhangfei<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhangfei<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhangfei<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;salary&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;8888.88&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhangfei<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;莽夫一个&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SolrInputDocument</span> liubei <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SolrInputDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        liubei<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        liubei<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;刘备&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        liubei<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        liubei<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        liubei<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;salary&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;99999.88&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        liubei<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;心机婊&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>lvbu<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>zhaoyun<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>guanyu<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>zhangfei<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>liubei<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）注解的方式：在实体类属性上添加注解@Field</p><p>Person实体类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xg<span class="token punctuation">.</span>solr</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">AllArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>solr<span class="token punctuation">.</span>client<span class="token punctuation">.</span>solrj<span class="token punctuation">.</span>beans<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * @Description :
 * @Author : 辛根
 * @Date : 2020/4/22 19:01
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> sex<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span><span class="token string">&quot;salary&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Double</span> salary<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> remark<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test05AddCustData</span> <span class="token punctuation">{</span>



    <span class="token comment">// 声明一个连接solr的地址(ip:port/solr/库名)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SOLR_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://129.211.39.189:8983/solr/db2_core&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// 声明一个连接solr的对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpSolrClient</span> httpSolrClient<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        httpSolrClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpSolrClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token constant">SOLR_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">SolrServerException</span> <span class="token punctuation">{</span>

        <span class="token comment">//一个集合一个集合的添加</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> persons <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
        persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;吕布&quot;</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token number">8888.88</span><span class="token punctuation">,</span><span class="token string">&quot;人中吕布&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;赵云&quot;</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token number">9888.88</span><span class="token punctuation">,</span><span class="token string">&quot;七进七出&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;关羽&quot;</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token number">10888.88</span><span class="token punctuation">,</span><span class="token string">&quot;忠肝义胆&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&quot;张飞&quot;</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token number">11888.88</span><span class="token punctuation">,</span><span class="token string">&quot;莽夫一个&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&quot;刘备&quot;</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token number">12888.88</span><span class="token punctuation">,</span><span class="token string">&quot;心机婊&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">addBeans</span><span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpSolrClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、全查询" tabindex="-1"><a class="header-anchor" href="#_5、全查询" aria-hidden="true">#</a> 5、全查询</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test06QueryAll</span> <span class="token punctuation">{</span>


    <span class="token comment">// 声明一个连接solr的地址(ip:port/solr/库名)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SOLR_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://129.211.39.189:8983/solr/db2_core&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// 声明一个连接solr的对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpSolrClient</span> httpSolrClient<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        httpSolrClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpSolrClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token constant">SOLR_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">SolrServerException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> keywords <span class="token operator">=</span> <span class="token string">&quot;*:*&quot;</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个全查询条件对象</span>
        <span class="token class-name">SolrQuery</span> solrQuery <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SolrQuery</span><span class="token punctuation">(</span>keywords<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 查询</span>
        <span class="token class-name">QueryResponse</span> query <span class="token operator">=</span> httpSolrClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>solrQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 取出结果</span>
        <span class="token class-name">SolrDocumentList</span> results <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;总条数&quot;</span><span class="token operator">+</span>results<span class="token punctuation">.</span><span class="token function">getNumFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SolrDocument</span> result <span class="token operator">:</span> results<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、分页查询" tabindex="-1"><a class="header-anchor" href="#_6、分页查询" aria-hidden="true">#</a> 6、分页查询</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test07QueryForPage</span> <span class="token punctuation">{</span>


    <span class="token comment">// 声明一个连接solr的地址(ip:port/solr/库名)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SOLR_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://129.211.39.189:8983/solr/db2_core&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// 声明一个连接solr的对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpSolrClient</span> httpSolrClient<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        httpSolrClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpSolrClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token constant">SOLR_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">SolrServerException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> keywords <span class="token operator">=</span> <span class="token string">&quot;*:*&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> page <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> limit <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建一个全查询条件对象</span>
        <span class="token class-name">SolrQuery</span> solrQuery <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SolrQuery</span><span class="token punctuation">(</span>keywords<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置从哪里开始查，不查页码</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setStart</span><span class="token punctuation">(</span><span class="token punctuation">(</span>page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> limit<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置每页显示多少条</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setRows</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 查询</span>
        <span class="token class-name">QueryResponse</span> query <span class="token operator">=</span> httpSolrClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>solrQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 取出结果</span>
        <span class="token class-name">SolrDocumentList</span> results <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;总条数&quot;</span> <span class="token operator">+</span> results<span class="token punctuation">.</span><span class="token function">getNumFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SolrDocument</span> result <span class="token operator">:</span> results<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、排序查询" tabindex="-1"><a class="header-anchor" href="#_7、排序查询" aria-hidden="true">#</a> 7、排序查询</h2><p><img src="https://picgo.xingenhi.cn//typora0.14573205242468515.png" alt="image"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test08QuerySort</span> <span class="token punctuation">{</span>
    <span class="token comment">//声明一个连接solr的地址  ip:port/solr/库名</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SOLR_URL</span><span class="token operator">=</span><span class="token string">&quot;http://www.leige.plus:8983/solr/db2-core&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//声明一个连接solr的对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpSolrClient</span> httpSolrClient<span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        httpSolrClient<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HttpSolrClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token constant">SOLR_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">SolrServerException</span> <span class="token punctuation">{</span>
       <span class="token class-name">String</span> keywords<span class="token operator">=</span><span class="token string">&quot;*:*&quot;</span><span class="token punctuation">;</span>
       <span class="token comment">//创建一个查询条件对象</span>
        <span class="token class-name">SolrQuery</span> solrQuery<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SolrQuery</span><span class="token punctuation">(</span>keywords<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//        solrQuery.setSort(&quot;id&quot;,SolrQuery.ORDER.desc); //只能根据一个属性进行排序</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setSort</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span><span class="token class-name">SolrQuery</span><span class="token punctuation">.</span><span class="token constant">ORDER</span><span class="token punctuation">.</span>asc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//查询</span>
        <span class="token class-name">QueryResponse</span> query <span class="token operator">=</span> httpSolrClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>solrQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//取出结果</span>
        <span class="token class-name">SolrDocumentList</span> results <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;总条数:&quot;</span><span class="token operator">+</span>results<span class="token punctuation">.</span><span class="token function">getNumFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SolrDocument</span> result <span class="token operator">:</span> results<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-高亮查询" tabindex="-1"><a class="header-anchor" href="#_9-高亮查询" aria-hidden="true">#</a> 9，高亮查询</h2><p><img src="https://picgo.xingenhi.cn//typora0.3756219225102981.png" alt="image"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test09QueryHeightLight</span> <span class="token punctuation">{</span>
    <span class="token comment">//声明一个连接solr的地址  ip:port/solr/库名</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SOLR_URL</span><span class="token operator">=</span><span class="token string">&quot;http://www.leige.plus:8983/solr/db2-core&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//声明一个连接solr的对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpSolrClient</span> httpSolrClient<span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        httpSolrClient<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HttpSolrClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token constant">SOLR_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">SolrServerException</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> personList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">String</span> keywords<span class="token operator">=</span><span class="token string">&quot;name:吕布&quot;</span><span class="token punctuation">;</span>
       <span class="token comment">//创建一个查询条件对象</span>
        <span class="token class-name">SolrQuery</span> solrQuery<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SolrQuery</span><span class="token punctuation">(</span>keywords<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//开户高亮</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setHighlight</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置要进行高亮的属性</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">addHighlightField</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">addHighlightField</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置高亮的前后缀</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setHighlightSimplePre</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;font color=red&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setHighlightSimplePost</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/font&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//查询</span>
        <span class="token class-name">QueryResponse</span> query <span class="token operator">=</span> httpSolrClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>solrQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//取出结果</span>
        <span class="token class-name">SolrDocumentList</span> results <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//取出高亮的结果</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> highlighting <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getHighlighting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;总条数:&quot;</span><span class="token operator">+</span>results<span class="token punctuation">.</span><span class="token function">getNumFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SolrDocument</span> result <span class="token operator">:</span> results<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//搜索处理的每个文档，进文档里面的内容进行高亮</span>
            <span class="token class-name">Person</span> person<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            person<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            person<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            person<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            person<span class="token punctuation">.</span><span class="token function">setSex</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            person<span class="token punctuation">.</span><span class="token function">setSalary</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;salary&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            person<span class="token punctuation">.</span><span class="token function">setRemark</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//            System.out.println(result);</span>
            <span class="token class-name">String</span> id<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> listMap <span class="token operator">=</span> highlighting<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">!=</span>listMap<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>listMap<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> name <span class="token operator">=</span> listMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> remark <span class="token operator">=</span> listMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//                System.out.println(name.get(0)+&quot;  &quot;+remark.get(0));</span>
              <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                  person<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>remark<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                  person<span class="token punctuation">.</span><span class="token function">setRemark</span><span class="token punctuation">(</span>remark<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            personList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Person</span> person <span class="token operator">:</span> personList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10、范围查询" tabindex="-1"><a class="header-anchor" href="#_10、范围查询" aria-hidden="true">#</a> 10、范围查询</h2><p><img src="https://picgo.xingenhi.cn//typora0.7770157358962019.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.15707409221800855.png" alt="image"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test10QueryRange</span> <span class="token punctuation">{</span>
    <span class="token comment">//声明一个连接solr的地址  ip:port/solr/库名</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SOLR_URL</span><span class="token operator">=</span><span class="token string">&quot;http://www.leige.plus:8983/solr/db2-core&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//声明一个连接solr的对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpSolrClient</span> httpSolrClient<span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        httpSolrClient<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HttpSolrClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token constant">SOLR_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">SolrServerException</span> <span class="token punctuation">{</span>
        <span class="token comment">//创建条件</span>
        <span class="token class-name">SolrQuery</span> solrQuery<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SolrQuery</span><span class="token punctuation">(</span><span class="token string">&quot;*:*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//限定范围 20-40岁之间的</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setFilterQueries</span><span class="token punctuation">(</span><span class="token string">&quot;age:[20 TO 40]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">QueryResponse</span> query <span class="token operator">=</span> httpSolrClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>solrQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//取出结果</span>
        <span class="token class-name">SolrDocumentList</span> results <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;总条数:&quot;</span><span class="token operator">+</span>results<span class="token punctuation">.</span><span class="token function">getNumFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SolrDocument</span> result <span class="token operator">:</span> results<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11、过滤查询" tabindex="-1"><a class="header-anchor" href="#_11、过滤查询" aria-hidden="true">#</a> 11、过滤查询</h2><p><img src="https://picgo.xingenhi.cn//typora0.24895115078406596.png" alt="image"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test11QueryFilter</span> <span class="token punctuation">{</span>
    <span class="token comment">//声明一个连接solr的地址  ip:port/solr/库名</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SOLR_URL</span><span class="token operator">=</span><span class="token string">&quot;http://www.leige.plus:8983/solr/db2-core&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//声明一个连接solr的对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpSolrClient</span> httpSolrClient<span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        httpSolrClient<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HttpSolrClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token constant">SOLR_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">SolrServerException</span> <span class="token punctuation">{</span>
        <span class="token comment">//创建条件</span>
        <span class="token class-name">SolrQuery</span> solrQuery<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SolrQuery</span><span class="token punctuation">(</span><span class="token string">&quot;*:*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//限定条件 年龄=33</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setFilterQueries</span><span class="token punctuation">(</span><span class="token string">&quot;age:33&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">QueryResponse</span> query <span class="token operator">=</span> httpSolrClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>solrQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//取出结果</span>
        <span class="token class-name">SolrDocumentList</span> results <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;总条数:&quot;</span><span class="token operator">+</span>results<span class="token punctuation">.</span><span class="token function">getNumFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SolrDocument</span> result <span class="token operator">:</span> results<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_12、合并域查询" tabindex="-1"><a class="header-anchor" href="#_12、合并域查询" aria-hidden="true">#</a> 12、合并域查询</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test12QueryArea</span> <span class="token punctuation">{</span>
    <span class="token comment">//声明一个连接solr的地址  ip:port/solr/库名</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SOLR_URL</span><span class="token operator">=</span><span class="token string">&quot;http://www.leige.plus:8983/solr/db2-core&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//声明一个连接solr的对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpSolrClient</span> httpSolrClient<span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        httpSolrClient<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HttpSolrClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token constant">SOLR_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">SolrServerException</span> <span class="token punctuation">{</span>
        <span class="token comment">//创建条件</span>
        <span class="token class-name">SolrQuery</span> solrQuery<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SolrQuery</span><span class="token punctuation">(</span><span class="token string">&quot;keywords:吕布&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">QueryResponse</span> query <span class="token operator">=</span> httpSolrClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>solrQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//取出结果</span>
        <span class="token class-name">SolrDocumentList</span> results <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;总条数:&quot;</span><span class="token operator">+</span>results<span class="token punctuation">.</span><span class="token function">getNumFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SolrDocument</span> result <span class="token operator">:</span> results<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_13、综合查询-后面还会说" tabindex="-1"><a class="header-anchor" href="#_13、综合查询-后面还会说" aria-hidden="true">#</a> 13、综合查询[后面还会说]</h2><p>把上面所有的查询全部来一次</p><p><img src="https://picgo.xingenhi.cn//typora0.08438253096172584.png" alt="image"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test08QueryZhongHe</span> <span class="token punctuation">{</span>

    <span class="token comment">// 声明一个连接solr的地址(ip:port/solr/库名)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SOLR_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://129.211.39.189:8983/solr/db2_core&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// 声明一个连接solr的对象</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpSolrClient</span> httpSolrClient<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        httpSolrClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpSolrClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token constant">SOLR_URL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">SolrServerException</span> <span class="token punctuation">{</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> filter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        filter<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;33&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token function">queryAll</span><span class="token punctuation">(</span><span class="token string">&quot;吕布&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;20-40&quot;</span><span class="token punctuation">,</span> filter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">keywords</span> 关键字
     * <span class="token keyword">@param</span> <span class="token parameter">page</span>     页码
     * <span class="token keyword">@param</span> <span class="token parameter">limit</span>    每页长度
     * <span class="token keyword">@param</span> <span class="token parameter">ageSort</span>  年龄排序规则【1升序0降序】
     * <span class="token keyword">@param</span> <span class="token parameter">ageRange</span> 年龄的范围
     * <span class="token keyword">@param</span> <span class="token parameter">filter</span>   过滤条件
     * @ClassName: Test08QueryZhongHe
     * @Description:
     * @Return: java.util.List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.util.Map</span> <span class="token attr-name">&lt;</span> <span class="token attr-name">java.lang.String,</span> <span class="token attr-name">java.lang.Object</span><span class="token punctuation">&gt;</span></span>&gt;
     * @Author: 辛根 2020/4/23 19:57
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryAll</span><span class="token punctuation">(</span><span class="token class-name">String</span> keywords<span class="token punctuation">,</span> <span class="token keyword">int</span> page<span class="token punctuation">,</span> <span class="token keyword">int</span> limit<span class="token punctuation">,</span> <span class="token keyword">int</span> ageSort<span class="token punctuation">,</span> <span class="token class-name">String</span> ageRange<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> filter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 条件构造</span>
        <span class="token class-name">SolrQuery</span> solrQuery <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SolrQuery</span><span class="token punctuation">(</span><span class="token string">&quot;key:&quot;</span> <span class="token operator">+</span> keywords<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 分页处理</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setStart</span><span class="token punctuation">(</span><span class="token punctuation">(</span>page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> limit<span class="token punctuation">)</span><span class="token punctuation">;</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setRows</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 排序</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>ageSort<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
                solrQuery<span class="token punctuation">.</span><span class="token function">addSort</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token class-name">SolrQuery</span><span class="token punctuation">.</span><span class="token constant">ORDER</span><span class="token punctuation">.</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
                solrQuery<span class="token punctuation">.</span><span class="token function">addSort</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token class-name">SolrQuery</span><span class="token punctuation">.</span><span class="token constant">ORDER</span><span class="token punctuation">.</span>asc<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 范围处理和过滤条件处理</span>
        <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> fqList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>ageRange<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ageRange<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;年龄范围参数不合格&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> ageRange<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            fqList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;age:[&quot;</span> <span class="token operator">+</span> split<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot; TO &quot;</span> <span class="token operator">+</span> split<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>filter <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>filter<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            filter<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                fqList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fqList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            solrQuery<span class="token punctuation">.</span><span class="token function">setFilterQueries</span><span class="token punctuation">(</span>fqList<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 高亮处理</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">addHighlightField</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">addHighlightField</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setHighlightSimplePre</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;font color=red&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setHighlightSimplePost</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/font&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> listMaps <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">QueryResponse</span> query <span class="token operator">=</span> httpSolrClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>solrQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SolrDocumentList</span> results <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> highlighting <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getHighlighting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;总条数：&quot;</span> <span class="token operator">+</span> results<span class="token punctuation">.</span><span class="token function">getNumFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SolrDocument</span> result <span class="token operator">:</span> results<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;salary&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;salary&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> listMap <span class="token operator">=</span> highlighting<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> listMap <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>listMap<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> name <span class="token operator">=</span> listMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">String</span> remark <span class="token operator">=</span> listMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">,</span> remark<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                listMaps<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> listMaps<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_12【案例】使用solr完成对jd案例的实现" tabindex="-1"><a class="header-anchor" href="#_12【案例】使用solr完成对jd案例的实现" aria-hidden="true">#</a> 12【案例】使用Solr完成对jd案例的实现</h1><p><img src="https://picgo.xingenhi.cn//typora0.3815567240894633.png" alt="image"></p><h2 id="_1-solr搜索实现三步走实现" tabindex="-1"><a class="header-anchor" href="#_1-solr搜索实现三步走实现" aria-hidden="true">#</a> 1，solr搜索实现三步走实现</h2><p>1，需要把商品的数据导入到Solr 里面</p><p>2，根据条件编写各种代码实现搜索</p><p>3，使用定时任务定时同步数据库和solr的数据【当然应该提供手动同步】</p><h2 id="_2-solr搜索的说明" tabindex="-1"><a class="header-anchor" href="#_2-solr搜索的说明" aria-hidden="true">#</a> 2，solr搜索的说明</h2><h3 id="_2-1-关键字搜索-copyfield-数组-去完成" tabindex="-1"><a class="header-anchor" href="#_2-1-关键字搜索-copyfield-数组-去完成" aria-hidden="true">#</a> 2.1，关键字搜索 copyField[数组]去完成</h3><p><img src="https://picgo.xingenhi.cn//typora0.5154271674520462.png" alt="image"></p><h3 id="_2-2-分页" tabindex="-1"><a class="header-anchor" href="#_2-2-分页" aria-hidden="true">#</a> 2.2，分页</h3><p><img src="https://picgo.xingenhi.cn//typora0.06155643352180468.png" alt="image"></p><h3 id="_2-3-过滤条件" tabindex="-1"><a class="header-anchor" href="#_2-3-过滤条件" aria-hidden="true">#</a> 2.3，过滤条件</h3><p><img src="https://picgo.xingenhi.cn//typora0.7178405369965892.png" alt="image"></p><h3 id="_2-4-排序" tabindex="-1"><a class="header-anchor" href="#_2-4-排序" aria-hidden="true">#</a> 2.4，排序</h3><p><img src="https://picgo.xingenhi.cn//typora0.3112505518237103.png" alt="image"></p><h3 id="_2-5-高亮" tabindex="-1"><a class="header-anchor" href="#_2-5-高亮" aria-hidden="true">#</a> 2.5，高亮</h3><p><img src="https://picgo.xingenhi.cn//typora0.9206862693425137.png" alt="image"></p><h3 id="_2-6-价格区间" tabindex="-1"><a class="header-anchor" href="#_2-6-价格区间" aria-hidden="true">#</a> 2.6，价格区间</h3><p><img src="https://picgo.xingenhi.cn//typora0.2850846425235611.png" alt="image"></p><h2 id="_3-准备数据库" tabindex="-1"><a class="header-anchor" href="#_3-准备数据库" aria-hidden="true">#</a> 3，准备数据库</h2><h3 id="_3-1-创建数据库" tabindex="-1"><a class="header-anchor" href="#_3-1-创建数据库" aria-hidden="true">#</a> 3.1，创建数据库</h3><p><img src="https://picgo.xingenhi.cn//typora0.8578210301163256.png" alt="image"></p><h3 id="_3-1-导入数据" tabindex="-1"><a class="header-anchor" href="#_3-1-导入数据" aria-hidden="true">#</a> 3.1，导入数据</h3><p><img src="https://picgo.xingenhi.cn//typora0.3153810909731009.png" alt="image"></p><p>注意点:updatetime 是最后做增加更新时使用</p><p><img src="https://picgo.xingenhi.cn//typora0.3214682700719739.png" alt="image"></p><h2 id="_4-创建项目并修改pom-xml" tabindex="-1"><a class="header-anchor" href="#_4-创建项目并修改pom-xml" aria-hidden="true">#</a> 4，创建项目并修改pom.xml</h2><h3 id="_4-1创建项目" tabindex="-1"><a class="header-anchor" href="#_4-1创建项目" aria-hidden="true">#</a> 4.1创建项目</h3><p><img src="https://picgo.xingenhi.cn//typora0.6792945676645509.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.25685552606426476.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.29208764668671044.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.44273520939096217.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.2680513740717359.png" alt="image"></p><h3 id="_4-2修改pom-xml添加druid和mybatisplus的依赖" tabindex="-1"><a class="header-anchor" href="#_4-2修改pom-xml添加druid和mybatisplus的依赖" aria-hidden="true">#</a> 4.2修改pom.xml添加Druid和mybatisplus的依赖</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>baomidou<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>mybatis<span class="token operator">-</span>plus<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.3</span><span class="token number">.1</span><span class="token punctuation">.</span>tmp<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>

<span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>alibaba<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>druid<span class="token operator">-</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
 <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.1</span><span class="token number">.21</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-配置yml" tabindex="-1"><a class="header-anchor" href="#_5-配置yml" aria-hidden="true">#</a> 5，配置yml</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>#端口
server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8080</span>
spring<span class="token operator">:</span>
  #数据源的配置
  datasource<span class="token operator">:</span>
    url<span class="token operator">:</span> jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>jd<span class="token operator">-</span>shop<span class="token operator">?</span>serverTimezone<span class="token operator">=</span><span class="token constant">UTC</span>
    username<span class="token operator">:</span> root
    password<span class="token operator">:</span> <span class="token number">123456</span>
    driver<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>name<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span>
  application<span class="token operator">:</span>
    name<span class="token operator">:</span> jd<span class="token operator">-</span>search
  data<span class="token operator">:</span>
    solr<span class="token operator">:</span>
      host<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>leige<span class="token punctuation">.</span>plus<span class="token operator">:</span><span class="token number">8983</span><span class="token operator">/</span>solr<span class="token operator">/</span>jd<span class="token operator">-</span>shop
#配置mybatisplus
mybatis<span class="token operator">-</span>plus<span class="token operator">:</span>
  configuration<span class="token operator">:</span>
    log<span class="token operator">-</span>impl<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span></span>StdOutImpl</span>
  mapper<span class="token operator">-</span>locations<span class="token operator">:</span> classpath<span class="token operator">:</span>mapper<span class="token comment">/*.xml
  global-config:
    db-config:
      id-type: auto
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-使用插件生成goods和goodsmapper" tabindex="-1"><a class="header-anchor" href="#_6-使用插件生成goods和goodsmapper" aria-hidden="true">#</a> 6，使用插件生成Goods和GoodsMapper</h2><h3 id="_6-1-准备工作" tabindex="-1"><a class="header-anchor" href="#_6-1-准备工作" aria-hidden="true">#</a> 6.1，准备工作</h3><p><img src="https://picgo.xingenhi.cn//typora0.4615616028539115.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.22902105020566862.png" alt="image"></p><h3 id="_6-2-安装插件" tabindex="-1"><a class="header-anchor" href="#_6-2-安装插件" aria-hidden="true">#</a> 6.2，安装插件</h3><p><img src="https://picgo.xingenhi.cn//typora0.08720462063897896.png" alt="image"></p>`,143),j={href:"https://zhile.io/2019/04/23/mybatis-code-helper-pro-crack.html",target:"_blank",rel:"noopener noreferrer"},D=p(`<p><img src="https://picgo.xingenhi.cn//typora0.5312431839721673.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.10128070882514775.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.5363636616629928.png" alt="image"></p><p>OK之后重启IDEA</p><h3 id="_6-3-生成goods" tabindex="-1"><a class="header-anchor" href="#_6-3-生成goods" aria-hidden="true">#</a> 6.3，生成Goods</h3><p><img src="https://picgo.xingenhi.cn//typora0.6535805370962026.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.8438442450429274.png" alt="image"></p><h3 id="_6-4-生成goodsmapper" tabindex="-1"><a class="header-anchor" href="#_6-4-生成goodsmapper" aria-hidden="true">#</a> 6.4，生成GoodsMapper</h3><p><img src="https://picgo.xingenhi.cn//typora0.6316157092404536.png" alt="image"></p><h3 id="_6-5-生成goodsmapper-xml" tabindex="-1"><a class="header-anchor" href="#_6-5-生成goodsmapper-xml" aria-hidden="true">#</a> 6.5，生成GoodsMapper.xml</h3><p><img src="https://picgo.xingenhi.cn//typora0.6203508626141587.png" alt="image"></p><h3 id="_6-6-修改主启类" tabindex="-1"><a class="header-anchor" href="#_6-6-修改主启类" aria-hidden="true">#</a> 6.6，修改主启类</h3><p><img src="https://picgo.xingenhi.cn//typora0.14687948162891631.png" alt="image"></p><h2 id="_7-测试mybatisplus和solr是否可用" tabindex="-1"><a class="header-anchor" href="#_7-测试mybatisplus和solr是否可用" aria-hidden="true">#</a> 7，测试mybatisplus和solr是否可用</h2><p><img src="https://picgo.xingenhi.cn//typora0.8688170684502046.png" alt="image"></p><h2 id="_8-在solr里面创建jd-shop的core并配置好属性" tabindex="-1"><a class="header-anchor" href="#_8-在solr里面创建jd-shop的core并配置好属性" aria-hidden="true">#</a> 8，在solr里面创建jd-shop的core并配置好属性</h2><h4 id="_8-1-创建jd-shop" tabindex="-1"><a class="header-anchor" href="#_8-1-创建jd-shop" aria-hidden="true">#</a> 8.1,创建jd-shop</h4><p><img src="https://picgo.xingenhi.cn//typora0.4207671188654532.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.5882612189167237.png" alt="image"></p><h4 id="_8-2-配置分词和属性" tabindex="-1"><a class="header-anchor" href="#_8-2-配置分词和属性" aria-hidden="true">#</a> 8.2,配置分词和属性</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;id&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;string&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> required<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;name&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;text_cn&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> required<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;shopid&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;plong&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;oriprice&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;pdouble&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;price&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;pdouble&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;remark&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;text_cn&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;content&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;text_cn&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;picture&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;string&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;categoryid&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;plong&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;salenum&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;pint&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;totalstocks&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;pint&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;is_jd_express&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;pint&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;is_second-hand&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;pint&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;is_new&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;pint&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;is_to_pay&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;pint&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;false&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>field name<span class="token operator">=</span><span class="token string">&quot;keywords&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;text_cn&quot;</span> indexed<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> stored<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> multiValued<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>copyField source<span class="token operator">=</span><span class="token string">&quot;name&quot;</span> dest<span class="token operator">=</span><span class="token string">&quot;keywords&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>copyField source<span class="token operator">=</span><span class="token string">&quot;remark&quot;</span> dest<span class="token operator">=</span><span class="token string">&quot;keywords&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>添加一个中文分词器<span class="token constant">IK</span><span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>fieldType name<span class="token operator">=</span><span class="token string">&quot;text_cn&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;solr.TextField&quot;</span> positionIncrementGap<span class="token operator">=</span><span class="token string">&quot;100&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>analyzer type<span class="token operator">=</span><span class="token string">&quot;index&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>tokenizer <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;org.apache.lucene.analysis.ik.IKTokenizerFactory&quot;</span> useSmart<span class="token operator">=</span><span class="token string">&quot;true&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>analyzer<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>analyzer type<span class="token operator">=</span><span class="token string">&quot;query&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>tokenizer <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;org.apache.lucene.analysis.ik.IKTokenizerFactory&quot;</span> useSmart<span class="token operator">=</span><span class="token string">&quot;false&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>analyzer<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>fieldType<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>8.3,覆盖到solr并重启</p><p><img src="https://picgo.xingenhi.cn//typora0.18696868687313487.png" alt="image"></p><h2 id="_9-编写代码实现全量和增量导入" tabindex="-1"><a class="header-anchor" href="#_9-编写代码实现全量和增量导入" aria-hidden="true">#</a> 9，编写代码实现全量和增量导入</h2><h3 id="_9-1-全量导入" tabindex="-1"><a class="header-anchor" href="#_9-1-全量导入" aria-hidden="true">#</a> 9.1，全量导入</h3><h4 id="创建importservice" tabindex="-1"><a class="header-anchor" href="#创建importservice" aria-hidden="true">#</a> 创建ImportService</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Created with IntelliJ IDEA.
 *
 * @Auther: 雷哥
 * @Date: 2020/04/04/12:22
 * @Description:
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ImportService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/***
    * @Description:
    * @Param: 全量导入
    * <span class="token keyword">@return</span>:
    * @Author: 雷哥
    * @Date: 2020/4/4
    */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">importAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token doc-comment comment">/***
    * @Description:
    * @Param: 增量导入
    * <span class="token keyword">@return</span>:
    * @Author: 雷哥
    * @Date: 2020/4/4
    */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">importUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="导入fastjson" tabindex="-1"><a class="header-anchor" href="#导入fastjson" aria-hidden="true">#</a> 导入fastjson</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>alibaba<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>fastjson<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.2</span><span class="token number">.62</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建importserviceimpl" tabindex="-1"><a class="header-anchor" href="#创建importserviceimpl" aria-hidden="true">#</a> 创建ImportServiceImpl</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Created with IntelliJ IDEA.
 *
 * @Auther: 雷哥
 * @Date: 2020/04/04/12:24
 * @Description:
 */</span>
<span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@Transactional</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImportServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ImportService</span> <span class="token punctuation">{</span>


    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">GoodsMapper</span> goodsMapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">SolrClient</span> solrClient<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@PostConstruct</span>  <span class="token comment">//只要IOC容器加载就运行</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">importAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//查询出所有上架的商品</span>
        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> qw<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        qw<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> goodsList <span class="token operator">=</span> goodsMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>qw<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SolrInputDocument</span><span class="token punctuation">&gt;</span></span> docs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createDoc</span><span class="token punctuation">(</span>goodsList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            solrClient<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            solrClient<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//提交</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;数据全量同步成功:&quot;</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/***
    * @Description: 构造文档集合
    * @Param: [goodsList]
    * <span class="token keyword">@return</span>: java.util.List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>org.apache.solr.common.SolrInputDocument</span><span class="token punctuation">&gt;</span></span>
    * @Author: 雷哥
    * @Date: 2020/4/4
    */</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SolrInputDocument</span><span class="token punctuation">&gt;</span></span> <span class="token function">createDoc</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> goodsList<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SolrInputDocument</span><span class="token punctuation">&gt;</span></span> docs<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>goodsList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Goods</span> g <span class="token operator">:</span> goodsList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">SolrInputDocument</span> doc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SolrInputDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;shopid&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getShopid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;oriprice&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getOriprice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;picture&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getPicture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;categoryid&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getCategoryid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;salenum&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getSalenum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;totalstocks&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getTotalstocks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">getFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;is_jd_express&quot;</span><span class="token punctuation">,</span>jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;is_jd_express&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;is_second_hand&quot;</span><span class="token punctuation">,</span>jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;is_second_hand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;is_new&quot;</span><span class="token punctuation">,</span>jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;is_new&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;is_to_pay&quot;</span><span class="token punctuation">,</span>jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;is_to_pay&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            docs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> docs<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">importUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据</p><p><img src="https://picgo.xingenhi.cn//typora0.3816389562496719.png" alt="image"></p><h3 id="_9-2-增量导入" tabindex="-1"><a class="header-anchor" href="#_9-2-增量导入" aria-hidden="true">#</a> 9.2，增量导入</h3><h4 id="修改importserviceimpl" tabindex="-1"><a class="header-anchor" href="#修改importserviceimpl" aria-hidden="true">#</a> 修改ImportServiceImpl</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Created with IntelliJ IDEA.
 *
 * @Auther: 雷哥
 * @Date: 2020/04/04/12:24
 * @Description:
 */</span>
<span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@Log4j2</span>
<span class="token annotation punctuation">@Transactional</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImportServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ImportService</span> <span class="token punctuation">{</span>


    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">GoodsMapper</span> goodsMapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">SolrClient</span> solrClient<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@PostConstruct</span>  <span class="token comment">//只要IOC容器加载就运行</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">importAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//查询出所有上架的商品</span>
        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> qw<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        qw<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> goodsList <span class="token operator">=</span> goodsMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>qw<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SolrInputDocument</span><span class="token punctuation">&gt;</span></span> docs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createDoc</span><span class="token punctuation">(</span>goodsList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            solrClient<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            solrClient<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//提交</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;数据全量同步成功:&quot;</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;数据全量同步失败,{}&quot;</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lastSycnDate<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/***
    * @Description: 构造文档集合
    * @Param: [goodsList]
    * <span class="token keyword">@return</span>: java.util.List<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>org.apache.solr.common.SolrInputDocument</span><span class="token punctuation">&gt;</span></span>
    * @Author: 雷哥
    * @Date: 2020/4/4
    */</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SolrInputDocument</span><span class="token punctuation">&gt;</span></span> <span class="token function">createDoc</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> goodsList<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SolrInputDocument</span><span class="token punctuation">&gt;</span></span> docs<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>goodsList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Goods</span> g <span class="token operator">:</span> goodsList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">SolrInputDocument</span> doc<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SolrInputDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;shopid&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getShopid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;oriprice&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getOriprice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getRemark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;picture&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getPicture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;categoryid&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getCategoryid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;salenum&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getSalenum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;totalstocks&quot;</span><span class="token punctuation">,</span>g<span class="token punctuation">.</span><span class="token function">getTotalstocks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">getFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;is_jd_express&quot;</span><span class="token punctuation">,</span>jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;is_jd_express&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;is_second-hand&quot;</span><span class="token punctuation">,</span>jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;is_second-hand&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;is_new&quot;</span><span class="token punctuation">,</span>jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;is_new&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            doc<span class="token punctuation">.</span><span class="token function">addField</span><span class="token punctuation">(</span><span class="token string">&quot;is_to_pay&quot;</span><span class="token punctuation">,</span>jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;is_to_pay&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            docs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> docs<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//声明一个最后一次的导入时间</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> lastSycnDate<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>initialDelay <span class="token operator">=</span> <span class="token number">5</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">,</span>fixedRate <span class="token operator">=</span> <span class="token number">5</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span>  <span class="token comment">//延时5秒执行 5秒循环一次</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">importUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">//查询出所有上架的商品</span>
        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> qw<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        qw<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
qw<span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span><span class="token string">&quot;updatetime&quot;</span><span class="token punctuation">,</span>lastSycnDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> goodsList <span class="token operator">=</span> goodsMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>qw<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SolrInputDocument</span><span class="token punctuation">&gt;</span></span> docs<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createDoc</span><span class="token punctuation">(</span>goodsList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            solrClient<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            solrClient<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//提交</span>
            lastSycnDate<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;数据增量导入成功:&quot;</span><span class="token operator">+</span>lastSycnDate<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;数据增量导入失败{}&quot;</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改主启动类开启定时任务</p><p><img src="https://picgo.xingenhi.cn//typora0.7674605693939028.png" alt="image"></p><h2 id="_10-编写代码实现搜索" tabindex="-1"><a class="header-anchor" href="#_10-编写代码实现搜索" aria-hidden="true">#</a> 10，编写代码实现搜索</h2><h3 id="创建datagridview" tabindex="-1"><a class="header-anchor" href="#创建datagridview" aria-hidden="true">#</a> 创建DataGridView</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Created with IntelliJ IDEA.
 *
 * @Auther: 雷哥
 * @Date: 2020/04/04/14:50
 * @Description:
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataGridView</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> code<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> msg<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> count<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Object</span> data<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建searchservice" tabindex="-1"><a class="header-anchor" href="#创建searchservice" aria-hidden="true">#</a> 创建SearchService</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Created with IntelliJ IDEA.
 * 对外的搜索服务接口
 * @Auther: 雷哥
 * @Date: 2020/04/04/14:48
 * @Description:
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">SearchService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/***
    * @Description:
    * @Param: [keywords, 关键字
     * page,  页码
     * limit,  每页显示条数
     * sort,  排序字段  1  价格 2 销量
     * priceScope,  价格区间200-300
     * filters]  &quot;is_jd_express&quot;:1,
     *         &quot;is_second-hand&quot;:1,
     *         &quot;is_new&quot;:1,
     *         &quot;is_to_pay&quot;:1,
    * <span class="token keyword">@return</span>: DataGridView
    * @Author: 雷哥
    * @Date: 2020/4/4
    */</span>
    <span class="token class-name">DataGridView</span> <span class="token function">searchGoods</span><span class="token punctuation">(</span><span class="token class-name">String</span> keywords<span class="token punctuation">,</span> <span class="token class-name">Integer</span> page<span class="token punctuation">,</span> <span class="token class-name">Integer</span> limit<span class="token punctuation">,</span> <span class="token class-name">Integer</span> sort<span class="token punctuation">,</span> <span class="token class-name">String</span> priceScope<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> filters<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建searchserviceimpl" tabindex="-1"><a class="header-anchor" href="#创建searchserviceimpl" aria-hidden="true">#</a> 创建SearchServiceImpl</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Created with IntelliJ IDEA.
 *
 * @Auther: 雷哥
 * @Date: 2020/04/04/14:54
 * @Description:
 */</span>
<span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@Log4j2</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SearchServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">SearchService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">SolrClient</span> solrClient<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/***
     * @Description:
     * @Param: [keywords, 关键字
     * page,  页码
     * limit,  每页显示条数
     * sort,  排序字段  1  价格升  2 价格降3 销量升    4  销量降
     * priceScope,  价格区间200-300
     * filters]  &quot;is_jd_express&quot;:1,
     *         &quot;is_second_hand&quot;:1,
     *         &quot;is_new&quot;:1,
     *         &quot;is_to_pay&quot;:1,
     * <span class="token keyword">@return</span>: DataGridView
     * @Author: 雷哥
     * @Date: 2020/4/4
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">DataGridView</span> <span class="token function">searchGoods</span><span class="token punctuation">(</span><span class="token class-name">String</span> keywords<span class="token punctuation">,</span> <span class="token class-name">Integer</span> page<span class="token punctuation">,</span> <span class="token class-name">Integer</span> limit<span class="token punctuation">,</span>
                                    <span class="token class-name">Integer</span> sort<span class="token punctuation">,</span> <span class="token class-name">String</span> priceScope<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> filters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//关键字</span>
        <span class="token class-name">SolrQuery</span> solrQuery<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>keywords<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            solrQuery<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SolrQuery</span><span class="token punctuation">(</span><span class="token string">&quot;*:*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            solrQuery<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">SolrQuery</span><span class="token punctuation">(</span><span class="token string">&quot;keywords:&quot;</span><span class="token operator">+</span>keywords<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//分页处理</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setStart</span><span class="token punctuation">(</span><span class="token punctuation">(</span>page<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>limit<span class="token punctuation">)</span><span class="token punctuation">;</span>
        solrQuery<span class="token punctuation">.</span><span class="token function">setRows</span><span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//处理排序</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>sort<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>按价格升
                solrQuery<span class="token punctuation">.</span><span class="token function">addSort</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">,</span><span class="token class-name">SolrQuery</span><span class="token punctuation">.</span><span class="token constant">ORDER</span><span class="token punctuation">.</span>asc<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>按价格降
                solrQuery<span class="token punctuation">.</span><span class="token function">addSort</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">,</span><span class="token class-name">SolrQuery</span><span class="token punctuation">.</span><span class="token constant">ORDER</span><span class="token punctuation">.</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>按销量升
                solrQuery<span class="token punctuation">.</span><span class="token function">addSort</span><span class="token punctuation">(</span><span class="token string">&quot;salenum&quot;</span><span class="token punctuation">,</span><span class="token class-name">SolrQuery</span><span class="token punctuation">.</span><span class="token constant">ORDER</span><span class="token punctuation">.</span>asc<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>按销量降
                solrQuery<span class="token punctuation">.</span><span class="token function">addSort</span><span class="token punctuation">(</span><span class="token string">&quot;salenum&quot;</span><span class="token punctuation">,</span><span class="token class-name">SolrQuery</span><span class="token punctuation">.</span><span class="token constant">ORDER</span><span class="token punctuation">.</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//处理价格过滤</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> filterList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>priceScope<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> priceScope<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>split<span class="token punctuation">.</span>length<span class="token operator">!=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">throw</span>  <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;传入的价格范围参数不合法&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            filterList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;price:[&quot;</span><span class="token operator">+</span>split<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot; TO &quot;</span><span class="token operator">+</span>split<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//处理其它过滤&quot;is_jd_express&quot;:1,</span>
        <span class="token comment">//     *&quot;is_second_hand&quot;:1,</span>
        <span class="token comment">//     *&quot;is_new&quot;:1,</span>
        <span class="token comment">//     *&quot;is_to_pay&quot;:1,</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>filters<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> filters<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                filterList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;:&quot;</span><span class="token operator">+</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//添加过滤条件</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>filterList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
solrQuery<span class="token punctuation">.</span><span class="token function">addFilterQuery</span><span class="token punctuation">(</span>filterList<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//只要关键字不为空才设置高亮</span>
       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>keywords<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
           solrQuery<span class="token punctuation">.</span><span class="token function">setHighlight</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           solrQuery<span class="token punctuation">.</span><span class="token function">addHighlightField</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           solrQuery<span class="token punctuation">.</span><span class="token function">addHighlightField</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           solrQuery<span class="token punctuation">.</span><span class="token function">setHighlightSimplePre</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;font color=red&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           solrQuery<span class="token punctuation">.</span><span class="token function">setHighlightSimplePost</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/font&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>



        <span class="token class-name">DataGridView</span> dataGridView<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">DataGridView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> goods<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">try</span>
       <span class="token punctuation">{</span>
           <span class="token class-name">QueryResponse</span> query <span class="token operator">=</span> solrClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>solrQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token class-name">SolrDocumentList</span> results <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">getResults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           dataGridView<span class="token punctuation">.</span><span class="token function">setCount</span><span class="token punctuation">(</span>results<span class="token punctuation">.</span><span class="token function">getNumFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置总条数</span>
           <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> highlighting <span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
           <span class="token keyword">if</span><span class="token punctuation">(</span>solrQuery<span class="token punctuation">.</span><span class="token function">getHighlight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//如果开户高亮，就高亮查询</span>
               highlighting<span class="token operator">=</span>query<span class="token punctuation">.</span><span class="token function">getHighlighting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
           <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SolrDocument</span> result <span class="token operator">:</span> results<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token class-name">Goods</span> g<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Goods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               g<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               g<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               g<span class="token punctuation">.</span><span class="token function">setShopid</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;shopid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               g<span class="token punctuation">.</span><span class="token function">setOriprice</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;oriprice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               g<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               g<span class="token punctuation">.</span><span class="token function">setRemark</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               g<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               g<span class="token punctuation">.</span><span class="token function">setPicture</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;picture&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               g<span class="token punctuation">.</span><span class="token function">setCategoryid</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;categoryid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               g<span class="token punctuation">.</span><span class="token function">setSalenum</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;salenum&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               g<span class="token punctuation">.</span><span class="token function">setTotalstocks</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token string">&quot;totalstocks&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token comment">//处理高亮</span>
               <span class="token keyword">if</span><span class="token punctuation">(</span>solrQuery<span class="token punctuation">.</span><span class="token function">getHighlight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">!=</span>highlighting<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>highlighting<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> highlighting<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token class-name">String</span> key <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> value <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                                <span class="token class-name">String</span> hlName<span class="token operator">=</span>value<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                g<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>hlName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                            <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                                <span class="token class-name">String</span> hlRemark<span class="token operator">=</span>value<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                g<span class="token punctuation">.</span><span class="token function">setRemark</span><span class="token punctuation">(</span>hlRemark<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>

                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
               <span class="token punctuation">}</span>
               goods<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
           log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;查询失败{}&quot;</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
        dataGridView<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> dataGridView<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">class</span> <span class="token class-name">SolrSpringbootJdApplicationTests</span> <span class="token punctuation">{</span>


    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">SearchService</span> searchService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">contextLoads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> filters<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        filters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;is_jd_express&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//要求京东快递</span>
        <span class="token class-name">DataGridView</span> searchGoods <span class="token operator">=</span> searchService<span class="token punctuation">.</span><span class="token function">searchGoods</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;70-500&quot;</span><span class="token punctuation">,</span> filters<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Goods</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> searchGoods<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Goods</span> datum <span class="token operator">:</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>datum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typora0.18274126569477048.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.7300122104058988.png" alt="image"></p><h1 id="_13【掌握】solr控制台全量和增量导入配置" tabindex="-1"><a class="header-anchor" href="#_13【掌握】solr控制台全量和增量导入配置" aria-hidden="true">#</a> 13【掌握】Solr控制台全量和增量导入配置</h1><h2 id="_1-概念说明" tabindex="-1"><a class="header-anchor" href="#_1-概念说明" aria-hidden="true">#</a> 1. 概念说明</h2><p>全量导入:一次性全导入。</p><p>增量导入：数据库中，新增的，修改的数据导入==&gt;所以数据库中必须有一列,用来记录最后修改时间，做增量时</p><p><img src="https://picgo.xingenhi.cn//typora0.9702801877486611.png" alt="image"></p><h2 id="_2-清空solr里面的数据" tabindex="-1"><a class="header-anchor" href="#_2-清空solr里面的数据" aria-hidden="true">#</a> 2. 清空solr里面的数据</h2><p><img src="https://picgo.xingenhi.cn//typora0.4828022978387941.png" alt="image"></p><h2 id="_3-导包" tabindex="-1"><a class="header-anchor" href="#_3-导包" aria-hidden="true">#</a> 3. 导包</h2><h3 id="_3-1-在solr安装目录下dist目录下有两个solr-dataimport-。-jar3-2-引入mysql的驱动包" tabindex="-1"><a class="header-anchor" href="#_3-1-在solr安装目录下dist目录下有两个solr-dataimport-。-jar3-2-引入mysql的驱动包" aria-hidden="true">#</a> 3.1，在solr安装目录下dist目录下有两个solr-dataimport**。.jar3.2，引入mysql的驱动包</h3><p><img src="https://picgo.xingenhi.cn//typora0.44258837035480764.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.7103208879424247.png" alt="image"></p><h2 id="_4-全量导入的配置" tabindex="-1"><a class="header-anchor" href="#_4-全量导入的配置" aria-hidden="true">#</a> 4. 全量导入的配置</h2><h3 id="_4-1-修改server-solr-jd-shop-conf-solrconfig-xml" tabindex="-1"><a class="header-anchor" href="#_4-1-修改server-solr-jd-shop-conf-solrconfig-xml" aria-hidden="true">#</a> 4.1，修改server/solr/jd-shop/conf/solrconfig.xml</h3><p><img src="https://picgo.xingenhi.cn//typora0.1294901843246738.png" alt="image"></p><h3 id="_4-2-创建server-solr-jd-shop-conf-data-conf-xml的文件" tabindex="-1"><a class="header-anchor" href="#_4-2-创建server-solr-jd-shop-conf-data-conf-xml的文件" aria-hidden="true">#</a> 4.2，创建server/solr/jd-shop/conf/data-conf.xml的文件</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span> <span class="token operator">?</span><span class="token operator">&gt;</span>
<span class="token generics"><span class="token punctuation">&lt;</span>dataConfig<span class="token punctuation">&gt;</span></span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>配置数据源<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>dataSource type<span class="token operator">=</span><span class="token string">&quot;JdbcDataSource&quot;</span>
driver<span class="token operator">=</span><span class="token string">&quot;com.mysql.jdbc.Driver&quot;</span>
url<span class="token operator">=</span><span class="token string">&quot;jdbc:mysql://127.0.0.1:3310/jd-shop?serverTimezone=UTC&quot;</span>
user<span class="token operator">=</span><span class="token string">&quot;root&quot;</span>
 password<span class="token operator">=</span><span class="token string">&quot;123456&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>document<span class="token punctuation">&gt;</span></span>
        <span class="token operator">&lt;</span>entity name<span class="token operator">=</span><span class="token string">&quot;goods&quot;</span>
          query<span class="token operator">=</span>&quot;select id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>shopid<span class="token punctuation">,</span>oriprice<span class="token punctuation">,</span>price<span class="token punctuation">,</span>remark<span class="token punctuation">,</span>content<span class="token punctuation">,</span>picture<span class="token punctuation">,</span>categoryid<span class="token punctuation">,</span>salenum<span class="token punctuation">,</span>totalstocks<span class="token punctuation">,</span>
                <span class="token keyword">case</span>  <span class="token function">JSON_EXTRACT</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> &#39;$<span class="token punctuation">.</span>is_jd_express&#39;<span class="token punctuation">)</span> <span class="token constant">WHEN</span> <span class="token boolean">true</span> <span class="token constant">THEN</span> <span class="token number">1</span> <span class="token constant">ELSE</span> <span class="token number">0</span>  <span class="token constant">END</span> <span class="token class-name">AS</span> is_jd_express<span class="token punctuation">,</span>
                <span class="token keyword">case</span>  <span class="token function">JSON_EXTRACT</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> &#39;$<span class="token punctuation">.</span>is_second_hand&#39;<span class="token punctuation">)</span> <span class="token constant">WHEN</span> <span class="token boolean">true</span> <span class="token constant">THEN</span> <span class="token number">1</span> <span class="token constant">ELSE</span> <span class="token number">0</span>  <span class="token constant">END</span> <span class="token class-name">AS</span> is_second_hand<span class="token punctuation">,</span>
                <span class="token keyword">case</span>  <span class="token function">JSON_EXTRACT</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> &#39;$<span class="token punctuation">.</span>is_new&#39;<span class="token punctuation">)</span> <span class="token constant">WHEN</span> <span class="token boolean">true</span> <span class="token constant">THEN</span> <span class="token number">1</span> <span class="token constant">ELSE</span> <span class="token number">0</span>  <span class="token constant">END</span> <span class="token class-name">AS</span> is_new<span class="token punctuation">,</span>
                <span class="token keyword">case</span>  <span class="token function">JSON_EXTRACT</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> &#39;$<span class="token punctuation">.</span>is_to_pay&#39;<span class="token punctuation">)</span> <span class="token constant">WHEN</span> <span class="token boolean">true</span> <span class="token constant">THEN</span> <span class="token number">1</span> <span class="token constant">ELSE</span> <span class="token number">0</span>  <span class="token constant">END</span> <span class="token constant">AS</span> is_to_pay
                <span class="token constant">FROM</span> goods where status<span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>&quot; <span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>查询的数据和数据库索引意义对应column 是查询的字段name 是solr索引对应的字段
              <span class="token operator">&lt;</span>field column<span class="token operator">=</span><span class="token string">&quot;fid&quot;</span> name<span class="token operator">=</span><span class="token string">&quot;fid&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>  因为已经使用<span class="token class-name">As</span>映射好了 不用加了<span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>entity<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>document<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dataConfig<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-在阿里云上使用docker运行一个mysql" tabindex="-1"><a class="header-anchor" href="#_4-3-在阿里云上使用docker运行一个mysql" aria-hidden="true">#</a> 4.3，在阿里云上使用docker运行一个mysql</h3><h4 id="启动docker" tabindex="-1"><a class="header-anchor" href="#启动docker" aria-hidden="true">#</a> 启动docker</h4><p><img src="https://picgo.xingenhi.cn//typora0.25741231052491187.png" alt="image"></p><h4 id="使用docker运行mysql" tabindex="-1"><a class="header-anchor" href="#使用docker运行mysql" aria-hidden="true">#</a> 使用docker运行mysql</h4><p>docker run --name mysql -p 3310:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</p><p><img src="https://picgo.xingenhi.cn//typora0.5938867801245907.png" alt="image"></p><h3 id="_4-4-nvcat连接再把本地的库上传到阿里云" tabindex="-1"><a class="header-anchor" href="#_4-4-nvcat连接再把本地的库上传到阿里云" aria-hidden="true">#</a> 4.4，nvcat连接再把本地的库上传到阿里云</h3><p><img src="https://picgo.xingenhi.cn//typora0.11645738825693303.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.6408092963656624.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.8807578433380618.png" alt="image"></p><h3 id="_4-5-把刚才修改和创建的两配置文件覆盖到solr配置" tabindex="-1"><a class="header-anchor" href="#_4-5-把刚才修改和创建的两配置文件覆盖到solr配置" aria-hidden="true">#</a> 4.5，把刚才修改和创建的两配置文件覆盖到solr配置</h3><p><img src="https://picgo.xingenhi.cn//typora0.9065778617889679.png" alt="image"></p><h3 id="_4-6-重启solr" tabindex="-1"><a class="header-anchor" href="#_4-6-重启solr" aria-hidden="true">#</a> 4.6，重启solr</h3><p><img src="https://picgo.xingenhi.cn//typora0.7232169145902692.png" alt="image"></p><h3 id="_4-7-查看控制台" tabindex="-1"><a class="header-anchor" href="#_4-7-查看控制台" aria-hidden="true">#</a> 4.7，查看控制台</h3><p><img src="https://picgo.xingenhi.cn//typora0.3822741562426581.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.16120116604171916.png" alt="image"></p><p>执行之后再查看数据</p><p><img src="https://picgo.xingenhi.cn//typora0.9164000779038961.png" alt="image"></p><h2 id="_5-增量导入的配置" tabindex="-1"><a class="header-anchor" href="#_5-增量导入的配置" aria-hidden="true">#</a> 5. 增量导入的配置</h2><h3 id="_5-1-entity几个属性说明" tabindex="-1"><a class="header-anchor" href="#_5-1-entity几个属性说明" aria-hidden="true">#</a> 5.1，entity几个属性说明</h3><p>注意这个只能返回ID字段</p><p>注意这个只能返回ID字段</p><h3 id="_5-2-修改data-config-xml并覆盖" tabindex="-1"><a class="header-anchor" href="#_5-2-修改data-config-xml并覆盖" aria-hidden="true">#</a> 5.2，修改data-config.xml并覆盖</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span> <span class="token operator">?</span><span class="token operator">&gt;</span>
<span class="token generics"><span class="token punctuation">&lt;</span>dataConfig<span class="token punctuation">&gt;</span></span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>配置数据源<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>dataSource type<span class="token operator">=</span><span class="token string">&quot;JdbcDataSource&quot;</span>
driver<span class="token operator">=</span><span class="token string">&quot;com.mysql.jdbc.Driver&quot;</span>
url<span class="token operator">=</span><span class="token string">&quot;jdbc:mysql://127.0.0.1:3310/jd-shop?serverTimezone=UTC&quot;</span>
user<span class="token operator">=</span><span class="token string">&quot;root&quot;</span>
password<span class="token operator">=</span><span class="token string">&quot;123456&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>document<span class="token punctuation">&gt;</span></span>
        <span class="token operator">&lt;</span>entity name<span class="token operator">=</span><span class="token string">&quot;goods&quot;</span>
          query<span class="token operator">=</span>&quot;select id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>shopid<span class="token punctuation">,</span>oriprice<span class="token punctuation">,</span>price<span class="token punctuation">,</span>remark<span class="token punctuation">,</span>content<span class="token punctuation">,</span>picture<span class="token punctuation">,</span>categoryid<span class="token punctuation">,</span>salenum<span class="token punctuation">,</span>totalstocks<span class="token punctuation">,</span>
                <span class="token keyword">case</span>  <span class="token function">JSON_EXTRACT</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> &#39;$<span class="token punctuation">.</span>is_jd_express&#39;<span class="token punctuation">)</span> <span class="token constant">WHEN</span> <span class="token boolean">true</span> <span class="token constant">THEN</span> <span class="token number">1</span> <span class="token constant">ELSE</span> <span class="token number">0</span>  <span class="token constant">END</span> <span class="token class-name">AS</span> is_jd_express<span class="token punctuation">,</span>
                <span class="token keyword">case</span>  <span class="token function">JSON_EXTRACT</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> &#39;$<span class="token punctuation">.</span>is_second_hand&#39;<span class="token punctuation">)</span> <span class="token constant">WHEN</span> <span class="token boolean">true</span> <span class="token constant">THEN</span> <span class="token number">1</span> <span class="token constant">ELSE</span> <span class="token number">0</span>  <span class="token constant">END</span> <span class="token class-name">AS</span> is_second_hand<span class="token punctuation">,</span>
                <span class="token keyword">case</span>  <span class="token function">JSON_EXTRACT</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> &#39;$<span class="token punctuation">.</span>is_new&#39;<span class="token punctuation">)</span> <span class="token constant">WHEN</span> <span class="token boolean">true</span> <span class="token constant">THEN</span> <span class="token number">1</span> <span class="token constant">ELSE</span> <span class="token number">0</span>  <span class="token constant">END</span> <span class="token class-name">AS</span> is_new<span class="token punctuation">,</span>
                <span class="token keyword">case</span>  <span class="token function">JSON_EXTRACT</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> &#39;$<span class="token punctuation">.</span>is_to_pay&#39;<span class="token punctuation">)</span> <span class="token constant">WHEN</span> <span class="token boolean">true</span> <span class="token constant">THEN</span> <span class="token number">1</span> <span class="token constant">ELSE</span> <span class="token number">0</span>  <span class="token constant">END</span> <span class="token constant">AS</span> is_to_pay
                <span class="token constant">FROM</span> goods where status<span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>&quot;
          deltaQuery <span class="token operator">=</span> <span class="token string">&quot;SELECT  id  FROM goods WHERE updatetime &gt; &#39;\${dataimporter.last_index_time}&#39; and status=1 &quot;</span>
          deletedPkQuery <span class="token operator">=</span> <span class="token string">&quot;SELECT id  FROM goods WHERE  status=0 &quot;</span>
          deltaImportQuery<span class="token operator">=</span>&quot;select id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>shopid<span class="token punctuation">,</span>oriprice<span class="token punctuation">,</span>price<span class="token punctuation">,</span>remark<span class="token punctuation">,</span>content<span class="token punctuation">,</span>picture<span class="token punctuation">,</span>categoryid<span class="token punctuation">,</span>salenum<span class="token punctuation">,</span>totalstocks<span class="token punctuation">,</span>
                <span class="token keyword">case</span>  <span class="token function">JSON_EXTRACT</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> &#39;$<span class="token punctuation">.</span>is_jd_express&#39;<span class="token punctuation">)</span> <span class="token constant">WHEN</span> <span class="token boolean">true</span> <span class="token constant">THEN</span> <span class="token number">1</span> <span class="token constant">ELSE</span> <span class="token number">0</span>  <span class="token constant">END</span> <span class="token class-name">AS</span> is_jd_express<span class="token punctuation">,</span>
                <span class="token keyword">case</span>  <span class="token function">JSON_EXTRACT</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> &#39;$<span class="token punctuation">.</span>is_second_hand&#39;<span class="token punctuation">)</span> <span class="token constant">WHEN</span> <span class="token boolean">true</span> <span class="token constant">THEN</span> <span class="token number">1</span> <span class="token constant">ELSE</span> <span class="token number">0</span>  <span class="token constant">END</span> <span class="token class-name">AS</span> is_second_hand<span class="token punctuation">,</span>
                <span class="token keyword">case</span>  <span class="token function">JSON_EXTRACT</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> &#39;$<span class="token punctuation">.</span>is_new&#39;<span class="token punctuation">)</span> <span class="token constant">WHEN</span> <span class="token boolean">true</span> <span class="token constant">THEN</span> <span class="token number">1</span> <span class="token constant">ELSE</span> <span class="token number">0</span>  <span class="token constant">END</span> <span class="token class-name">AS</span> is_new<span class="token punctuation">,</span>
                <span class="token keyword">case</span>  <span class="token function">JSON_EXTRACT</span><span class="token punctuation">(</span>filters<span class="token punctuation">,</span> &#39;$<span class="token punctuation">.</span>is_to_pay&#39;<span class="token punctuation">)</span> <span class="token constant">WHEN</span> <span class="token boolean">true</span> <span class="token constant">THEN</span> <span class="token number">1</span> <span class="token constant">ELSE</span> <span class="token number">0</span>  <span class="token constant">END</span> <span class="token constant">AS</span> is_to_pay
                <span class="token constant">FROM</span> goods where id <span class="token operator">=</span>&#39;$<span class="token punctuation">{</span>dataimporter<span class="token punctuation">.</span>delta<span class="token punctuation">.</span>id<span class="token punctuation">}</span>&#39;&quot;
                <span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>查询的数据和数据库索引意义对应column 是查询的字段name 是solr索引对应的字段
              <span class="token operator">&lt;</span>field column<span class="token operator">=</span><span class="token string">&quot;fid&quot;</span> name<span class="token operator">=</span><span class="token string">&quot;fid&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>  因为已经使用<span class="token class-name">As</span>映射好了 不用加了<span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>entity<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>document<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dataConfig<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://picgo.xingenhi.cn//typora0.47995827452942813.png" alt="image"></p><h3 id="_5-3-重启solr" tabindex="-1"><a class="header-anchor" href="#_5-3-重启solr" aria-hidden="true">#</a> 5.3，重启solr</h3><p><img src="https://picgo.xingenhi.cn//typora0.5412922051412586.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.8526067252630362.png" alt="image"></p><h1 id="_14【掌握】solrcloud概述" tabindex="-1"><a class="header-anchor" href="#_14【掌握】solrcloud概述" aria-hidden="true">#</a> 14【掌握】SolrCloud概述</h1><h2 id="_1-为什么要使用solr集群" tabindex="-1"><a class="header-anchor" href="#_1-为什么要使用solr集群" aria-hidden="true">#</a> 1，为什么要使用Solr集群</h2><p>Solr 在数据非常大的时候，它的搜索速度会变慢（读）</p><p>Solr在并发特别大的时间，它的导入速度会变慢（写）</p><p>Solr 集群将解决solr 在高并发，大数据量的 读和写的问题！</p><h3 id="_1-1-数据库的数据大-并发高使用什么优化" tabindex="-1"><a class="header-anchor" href="#_1-1-数据库的数据大-并发高使用什么优化" aria-hidden="true">#</a> 1.1，数据库的数据大，并发高使用什么优化</h3><p>读：使用缓存优化，分库分表</p><p>写：使用分库分表</p><h3 id="_1-2-redis的数据量大-并发高使用什么优化" tabindex="-1"><a class="header-anchor" href="#_1-2-redis的数据量大-并发高使用什么优化" aria-hidden="true">#</a> 1.2，Redis的数据量大，并发高使用什么优化</h3><p>Redis-Cluster redis 的集群</p><h3 id="_1-3-solr-数据量大-并发高使用什么优化" tabindex="-1"><a class="header-anchor" href="#_1-3-solr-数据量大-并发高使用什么优化" aria-hidden="true">#</a> 1.3，Solr 数据量大，并发高使用什么优化</h3><p>使用Solr-Cloud 优化，solr 集群</p><hr><h2 id="_2-什么是solrcloud" tabindex="-1"><a class="header-anchor" href="#_2-什么是solrcloud" aria-hidden="true">#</a> 2，什么是SolrCloud</h2><pre><code>    SolrCloud(solr 云)是Solr提供的分布式搜索方案，当你需要大规模，容错，分布式索引和检索能力时使用 SolrCloud。当一个系统的索引数据量少的时候是不需要使用SolrCloud的，当索引量很大，搜索请求并发很高，这时需要使用SolrCloud来满足这些需求。
</code></pre><p>SolrCloud是基于Solr和Zookeeper的分布式搜索方案，它的主要思想是使用Zookeeper作为集群的配置信息中心。</p><p>它有几个特色功能：</p><p>1）集中式的配置信息</p><p>2）自动容错</p><p>3）近实时搜索</p><p>4）查询时自动负载均衡</p><hr><h2 id="_3-solr-集群的架构图" tabindex="-1"><a class="header-anchor" href="#_3-solr-集群的架构图" aria-hidden="true">#</a> 3，Solr 集群的架构图</h2><p><img src="https://picgo.xingenhi.cn//typora0.32034178083656245.png" alt="image"></p><h3 id="_3-1-逻辑架构" tabindex="-1"><a class="header-anchor" href="#_3-1-逻辑架构" aria-hidden="true">#</a> 3.1，逻辑架构</h3><p><img src="https://picgo.xingenhi.cn//typora0.5443050822065342.png" alt="image"></p><p>1 在solr-cloud 把索引库库(图中sxt)称为集合Collection</p><p>2 Solr-1到solr-4 里面的机器里面都将存储sxt 的一部分数据</p><p>3 对于一个分片的机器，它们的数据都是相同的</p><h3 id="_3-2-物理的架构" tabindex="-1"><a class="header-anchor" href="#_3-2-物理的架构" aria-hidden="true">#</a> 3.2，物理的架构</h3><p><img src="https://picgo.xingenhi.cn//typora0.1726498050629673.png" alt="image"></p><h3 id="_3-3-在solr-集群里面需要解决的问题" tabindex="-1"><a class="header-anchor" href="#_3-3-在solr-集群里面需要解决的问题" aria-hidden="true">#</a> 3.3，在solr 集群里面需要解决的问题</h3><p>因为每个solr服务器的库，存储的都是sxt 的一部分。</p><p>那每个solr 服务器的core 里面的配置文件都必须相同，怎么保证配置文件都是相同的</p><p>Zookeeper：起到了什么作用？</p><p>Zookeeper 可以在集群里面共享配置文件</p><p><img src="https://picgo.xingenhi.cn//typora0.06027195054225755.png" alt="image"></p><h1 id="_15【掌握】solrcloud搭建" tabindex="-1"><a class="header-anchor" href="#_15【掌握】solrcloud搭建" aria-hidden="true">#</a> 15【掌握】SolrCloud搭建</h1><p>实际方案</p><p>Zookeeper集群+solr集群去搭建</p><p>现在选择方案</p><p>单机的zookeeper+solr去搭建</p><h2 id="_1-准备一个zk" tabindex="-1"><a class="header-anchor" href="#_1-准备一个zk" aria-hidden="true">#</a> 1，准备一个zk</h2><p><img src="https://picgo.xingenhi.cn//typora0.9504124011384315.png" alt="image"></p><p>连接测试</p><p><img src="https://picgo.xingenhi.cn//typora0.12134621006451751.png" alt="image"></p><h2 id="_2-做为一基础版本的solr安装包" tabindex="-1"><a class="header-anchor" href="#_2-做为一基础版本的solr安装包" aria-hidden="true">#</a> 2，做为一基础版本的solr安装包</h2><p>1， 配置好分词配置文件</p><p>2， 配置好分词jar包</p><p>3， 配置好控制台的数据全量和增量导入的jar包</p><h3 id="创建-user-local-solr-cloud并进入" tabindex="-1"><a class="header-anchor" href="#创建-user-local-solr-cloud并进入" aria-hidden="true">#</a> 创建/user/local/solr-cloud并进入</h3><p><img src="https://picgo.xingenhi.cn//typora0.11742823708335992.png" alt="image"></p><h3 id="把-root-software-solr-7-7-2-gz包加压到-usr-local-solr-cloud" tabindex="-1"><a class="header-anchor" href="#把-root-software-solr-7-7-2-gz包加压到-usr-local-solr-cloud" aria-hidden="true">#</a> 把/root/software/solr-7.7.2.gz包加压到/usr/local/solr-cloud</h3><p><img src="https://picgo.xingenhi.cn//typora0.3875212205527664.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.46746034471016396.png" alt="image"></p><h3 id="把solr-7-7-2改名" tabindex="-1"><a class="header-anchor" href="#把solr-7-7-2改名" aria-hidden="true">#</a> 把solr-7.7.2改名</h3><p><img src="https://picgo.xingenhi.cn//typora0.9076463375968418.png" alt="image"></p><h3 id="导入ik相关的包和配置文件" tabindex="-1"><a class="header-anchor" href="#导入ik相关的包和配置文件" aria-hidden="true">#</a> 导入ik相关的包和配置文件</h3><p><img src="https://picgo.xingenhi.cn//typora0.7536164933786951.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.7602059062064985.png" alt="image"></p><h3 id="导入控制数据导入的相关的包" tabindex="-1"><a class="header-anchor" href="#导入控制数据导入的相关的包" aria-hidden="true">#</a> 导入控制数据导入的相关的包</h3><p><img src="https://picgo.xingenhi.cn//typora0.9838335964297176.png" alt="image"></p><h2 id="_3-端口配置选择" tabindex="-1"><a class="header-anchor" href="#_3-端口配置选择" aria-hidden="true">#</a> 3，端口配置选择</h2><table><thead><tr><th>机器的编号</th><th>文件夹的名称</th><th>端口</th></tr></thead><tbody><tr><td>1</td><td>solr-1</td><td>8984</td></tr><tr><td>2</td><td>solr-2</td><td>8985</td></tr><tr><td>3</td><td>solr-3</td><td>8986</td></tr><tr><td>4</td><td>solr-4</td><td>8987</td></tr></tbody></table><h2 id="_4-进行solr-cloud的一个配置" tabindex="-1"><a class="header-anchor" href="#_4-进行solr-cloud的一个配置" aria-hidden="true">#</a> 4，进行solr-cloud的一个配置</h2><p><img src="https://picgo.xingenhi.cn//typora0.6864945973387543.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.3212603318408328.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.18901578007339723.png" alt="image"></p><h2 id="_5-把solr-1复制3个" tabindex="-1"><a class="header-anchor" href="#_5-把solr-1复制3个" aria-hidden="true">#</a> 5，把solr-1复制3个</h2><p>cp -r solr-1 solr-2</p><p>cp -r solr-1 solr-3</p><p>cp -r solr-1 solr-4</p><p><img src="https://picgo.xingenhi.cn//typora0.6621364826194965.png" alt="image"></p><h2 id="_6-分别以集群的方式启动4台solr" tabindex="-1"><a class="header-anchor" href="#_6-分别以集群的方式启动4台solr" aria-hidden="true">#</a> 6，分别以集群的方式启动4台solr</h2><p>单机版本的zk./solr start -p 8984 -force -c -m 256m -z localhost:2181</p><p>集群版本的zk</p><p>./solr start -p 8984 -force -c -m 256m -z localhost:2181,localhost:2182,localhost:2183</p><p>-p 端口 solr</p><p>-c 代表集群</p><p>-m 代表当前solr服务器默认的内存大小</p><p>-z 指定zookeeper的地址</p><p><img src="https://picgo.xingenhi.cn//typora0.44556017391673153.png" alt="image"></p><p>Cd /usr/local/solr-cloud</p><p>./solr-1/bin/solr -p 8984 -force -c -m 256m -z localhost:2181</p><p>./solr-2/bin/solr -p 8985 -force -c -m 256m -z localhost:2181</p><p>./solr-3/bin/solr -p 8986 -force -c -m 256m -z localhost:2181</p><p>./solr-4/bin/solr -p 8987 -force -c -m 256m -z localhost:2181</p><h2 id="_7-分别访问4台solr" tabindex="-1"><a class="header-anchor" href="#_7-分别访问4台solr" aria-hidden="true">#</a> 7，分别访问4台solr</h2><p><img src="https://picgo.xingenhi.cn//typora0.14978857025285236.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.08257878702207083.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.9561155261928573.png" alt="image"></p><h2 id="_8-查看zk" tabindex="-1"><a class="header-anchor" href="#_8-查看zk" aria-hidden="true">#</a> 8，查看zk</h2><p><img src="https://picgo.xingenhi.cn//typora0.445851085421481.png" alt="image"></p><h2 id="_9-创建collection-逻辑库" tabindex="-1"><a class="header-anchor" href="#_9-创建collection-逻辑库" aria-hidden="true">#</a> 9，创建collection[逻辑库]</h2><p><img src="https://picgo.xingenhi.cn//typora0.9876362392444038.png" alt="image"></p><p>Name：集群里面的集合名称</p><p>Config 当前库使用的配置文件</p><p>numShards:设置该库有多个分片</p><p>replicationFact 每一个片有2个机器</p><p>点击添加帮忙现如下警告 直接刷新页面</p><p><img src="https://picgo.xingenhi.cn//typora0.729333677691612.png" alt="image"></p><p>F5</p><h2 id="_10-查看分片图" tabindex="-1"><a class="header-anchor" href="#_10-查看分片图" aria-hidden="true">#</a> 10，查看分片图</h2><p><img src="https://picgo.xingenhi.cn//typora0.9826327474941022.png" alt="image"></p><h2 id="_11-关闭一个主机如上面的8986" tabindex="-1"><a class="header-anchor" href="#_11-关闭一个主机如上面的8986" aria-hidden="true">#</a> 11，关闭一个主机如上面的8986</h2><p><img src="https://picgo.xingenhi.cn//typora0.9909548621827344.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.7967932614523704.png" alt="image"></p><p>如果8986再回来，当小弟</p><p><img src="https://picgo.xingenhi.cn//typora0.6583266021948314.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.9496399400270519.png" alt="image"></p><h2 id="_12-选择collection" tabindex="-1"><a class="header-anchor" href="#_12-选择collection" aria-hidden="true">#</a> 12，选择collection</h2><p>集群—操作collection</p><p><img src="https://picgo.xingenhi.cn//typora0.5484468440653688.png" alt="image"></p><p>单机—操作core</p><p><img src="https://picgo.xingenhi.cn//typora0.42580256674999906.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.5591208107726572.png" alt="image"></p><h2 id="_13-查看分片" tabindex="-1"><a class="header-anchor" href="#_13-查看分片" aria-hidden="true">#</a> 13，查看分片</h2><p><img src="https://picgo.xingenhi.cn//typora0.28821730192816214.png" alt="image"></p><h1 id="_16【掌握】zookeeper管理配置文件" tabindex="-1"><a class="header-anchor" href="#_16【掌握】zookeeper管理配置文件" aria-hidden="true">#</a> 16【掌握】zookeeper管理配置文件</h1><h2 id="_1-准备一个配置好了的配置文件" tabindex="-1"><a class="header-anchor" href="#_1-准备一个配置好了的配置文件" aria-hidden="true">#</a> 1，准备一个配置好了的配置文件</h2><p>在之前的单机版本里面有一个好的</p><p><img src="https://picgo.xingenhi.cn//typora0.7082872952328354.png" alt="image"></p><h2 id="_2-使用solr准备好的zk工具包上传" tabindex="-1"><a class="header-anchor" href="#_2-使用solr准备好的zk工具包上传" aria-hidden="true">#</a> 2，使用solr准备好的zk工具包上传</h2><p><img src="https://picgo.xingenhi.cn//typora0.10197056296527157.png" alt="image"></p>`,218),C={href:"https://lucene.apache.org/solr/guide/7_7/command-line-utilities.html",target:"_blank",rel:"noopener noreferrer"},L=p(`<p><img src="https://picgo.xingenhi.cn//typora0.7526550683505248.png" alt="image"></p><p>语法</p><p>./server/scripts/cloud-scripts/zkcli.sh -zkhost 127.0.0.1:9983 -cmd upconfig -confname my_new_config -confdir server/solr/configsets/_default/conf</p><p>最后我们的语法</p><p>cd /usr/local/solr-7.7.2/server/scripts/cloud-scripts</p><p>./zkcli.sh -zkhost localhost:2181 -cmd upconfig -confname jd-shop -confdir /usr/local/solr-7.7.2/server/solr/jd-shop/conf</p><p><img src="https://picgo.xingenhi.cn//typora0.01836460198887554.png" alt="image"></p><p>查看zk</p><p><img src="https://picgo.xingenhi.cn//typora0.42824436065449595.png" alt="image"></p><h2 id="_3-创建新的collection选择jd-shop这个配置文件" tabindex="-1"><a class="header-anchor" href="#_3-创建新的collection选择jd-shop这个配置文件" aria-hidden="true">#</a> 3，创建新的collection选择jd-shop这个配置文件</h2><p><img src="https://picgo.xingenhi.cn//typora0.6085929470215257.png" alt="image"></p><h2 id="_4-分词测试" tabindex="-1"><a class="header-anchor" href="#_4-分词测试" aria-hidden="true">#</a> 4，分词测试</h2><p><img src="https://picgo.xingenhi.cn//typora0.21463609620139787.png" alt="image"></p><h2 id="_5-使用控制台导入数据" tabindex="-1"><a class="header-anchor" href="#_5-使用控制台导入数据" aria-hidden="true">#</a> 5，使用控制台导入数据</h2><p><img src="https://picgo.xingenhi.cn//typora0.9807079905597528.png" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora0.5264624368358412.png" alt="image"></p><h1 id="_17【掌握】solr集群的使用" tabindex="-1"><a class="header-anchor" href="#_17【掌握】solr集群的使用" aria-hidden="true">#</a> 17【掌握】Solr集群的使用</h1><h2 id="使用java连接solr" tabindex="-1"><a class="header-anchor" href="#使用java连接solr" aria-hidden="true">#</a> 使用java连接solr</h2><p><img src="https://picgo.xingenhi.cn//typora0.8330399014145287.png" alt="image"></p><p>出现异常</p><p>原因：因为solr-cloud使用时必须指定一个逻辑库</p><h3 id="写法1【不推荐】" tabindex="-1"><a class="header-anchor" href="#写法1【不推荐】" aria-hidden="true">#</a> 写法1【不推荐】</h3><div class="language-Plain line-numbers-mode" data-ext="Plain"><pre class="language-Plain"><code>*/  public class Test14SolrCloudQueryAll {
    //声明一个连接solr的地址  ip:port/solr/库名
    public static final String _SOLR_URL_=&quot;http://www.leige.plus:8984/solr/db2-collection&quot;;
    //声明一个连接solr的对象
    private static CloudSolrClient cloudSolrClient;
    static {
        List solrUrls=new ArrayList&lt;&gt;();
        solrUrls.add(&quot;http://www.leige.plus:8984/solr&quot;);
        solrUrls.add(&quot;http://www.leige.plus:8985/solr&quot;);
        solrUrls.add(&quot;http://www.leige.plus:8986/solr&quot;);
        solrUrls.add(&quot;http://www.leige.plus:8987/solr&quot;);
        _cloudSolrClient_=new CloudSolrClient.Builder(solrUrls).build();
        cloudSolrClient.setDefaultCollection(&quot;db2-collection&quot;);
  //        cloudSolrClient.setZkClientTimeout(5000);
//        cloudSolrClient.setZkConnectTimeout(5000);
    }
    public static void main(String[] args) throws IOException, SolrServerException {
       String keywords=&quot;*:*&quot;;
       //创建一个查询条件对象
        SolrQuery solrQuery=new SolrQuery(keywords);
        //查询
        QueryResponse query = cloudSolrClient.query(solrQuery);
        //取出结果
        SolrDocumentList results = query.getResults();
        System.out.println(&quot;总条数:&quot;+results.getNumFound());
        for (SolrDocument result : results) {
            System.out.println(result);
        }
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="写法2【推荐】找zk" tabindex="-1"><a class="header-anchor" href="#写法2【推荐】找zk" aria-hidden="true">#</a> 写法2【推荐】找zk</h3><div class="language-Plain line-numbers-mode" data-ext="Plain"><pre class="language-Plain"><code>_/** * Created with IntelliJ IDEA.
 *__全查询_ * @Auther:_ 雷哥 _* @Date: 2020/04/03/18:53* * @Description: */*  public class Test15SolrCloudQueryAll {
    //声明一个连接solr的地址  ip:port/solr/库名
    public static final String _SOLR_URL_=&quot;http://www.leige.plus:8984/solr/db2-collection&quot;;
    //声明一个连接solr的对象
    private static CloudSolrClient cloudSolrClient;
    static {
        List zkHosts=new ArrayList&lt;&gt;();
        zkHosts.add(&quot;www.leige.plus:2181&quot;);
        _cloudSolrClient_=new CloudSolrClient.Builder(zkHosts, Optional.empty()).build();
        cloudSolrClient.setDefaultCollection(&quot;db2-collection&quot;);
        cloudSolrClient.setZkClientTimeout(5000);
        cloudSolrClient.setZkConnectTimeout(5000);
    }
    public static void main(String[] args) throws IOException, SolrServerException {
       String keywords=&quot;*:*&quot;;
       //创建一个查询条件对象
        SolrQuery solrQuery=new SolrQuery(keywords);
        //查询
        QueryResponse query = cloudSolrClient.query(solrQuery);
        //取出结果
        SolrDocumentList results = query.getResults();
        System.out.println(&quot;总条数:&quot;+results.getNumFound());
        for (SolrDocument result : results) {
            System.out.println(result);
        }
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用boot连接solr" tabindex="-1"><a class="header-anchor" href="#使用boot连接solr" aria-hidden="true">#</a> 使用boot连接solr</h2><h3 id="只改yml就行了" tabindex="-1"><a class="header-anchor" href="#只改yml就行了" aria-hidden="true">#</a> 只改yml就行了</h3><p><img src="https://picgo.xingenhi.cn//typora0.16275611183569658.png" alt="image"></p><h3 id="为什么" tabindex="-1"><a class="header-anchor" href="#为什么" aria-hidden="true">#</a> 为什么</h3><div class="language-Plain line-numbers-mode" data-ext="Plain"><pre class="language-Plain"><code>@Configuration(
    proxyBeanMethods = false
  )
@ConditionalOnClass({HttpSolrClient.class, CloudSolrClient.class})
@EnableConfigurationProperties({SolrProperties.class})
  public class SolrAutoConfiguration {
    public SolrAutoConfiguration() {
    }

    @Bean
    @ConditionalOnMissingBean
    public SolrClient solrClient(SolrProperties properties) {
        return (SolrClient)(StringUtils.hasText(properties.getZkHost()) ? (new Builder(Arrays.asList(properties.getZkHost()), Optional.empty())).build() : (new org.apache.solr.client.solrj.impl.HttpSolrClient.Builder(properties.getHost())).build());
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面的代码可以看出如果配置了zkHost那么就从zookeeper里面取solr节点创建对象</p><p>否则就根据solr:host去创建对象</p><h3 id="查询报错【原因-没有设置默认库】" tabindex="-1"><a class="header-anchor" href="#查询报错【原因-没有设置默认库】" aria-hidden="true">#</a> 查询报错【原因，没有设置默认库】</h3><p><img src="https://picgo.xingenhi.cn//typora0.9159579657130066.png" alt="image"></p><h3 id="创建solrconfig设置默认库" tabindex="-1"><a class="header-anchor" href="#创建solrconfig设置默认库" aria-hidden="true">#</a> 创建SolrConfig设置默认库</h3><div class="language-Plain line-numbers-mode" data-ext="Plain"><pre class="language-Plain"><code>/*** * Created with IntelliJ IDEA. * * @Auther: 雷哥_ _* @Date: 2020/04/04/23:18*
* * @Description: */*  @Configuration
  public class SolrConfig {
    @Autowired
    private SolrClient solrClient;
    @PostConstruct
    public void setDefaultCore(){
        if(solrClient instanceof CloudSolrClient){
            CloudSolrClient cloudSolrClient= (CloudSolrClient) solrClient;
            cloudSolrClient.setDefaultCollection(&quot;db2-collection&quot;);
        }
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="再测试" tabindex="-1"><a class="header-anchor" href="#再测试" aria-hidden="true">#</a> 再测试</h3><p><img src="https://picgo.xingenhi.cn//typora0.12917103930292445.png" alt="image"></p><h1 id="_18【掌握】最后两个问题" tabindex="-1"><a class="header-anchor" href="#_18【掌握】最后两个问题" aria-hidden="true">#</a> 18【掌握】最后两个问题</h1><h2 id="_1-为什么只要一个zk地址就可以连接到solr集群并写数据" tabindex="-1"><a class="header-anchor" href="#_1-为什么只要一个zk地址就可以连接到solr集群并写数据" aria-hidden="true">#</a> 1，为什么只要一个zk地址就可以连接到solr集群并写数据</h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image002c85de2ef-b526-441e-b650-343ea752a3e9.jpg" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typoraclip_image004eca0e2fd-cdfa-4569-9c10-43ace162aa0b.jpg" alt="image"></p><h2 id="_2-我们在搭建solr集群时能不能去使用局域网的地址" tabindex="-1"><a class="header-anchor" href="#_2-我们在搭建solr集群时能不能去使用局域网的地址" aria-hidden="true">#</a> 2，我们在搭建solr集群时能不能去使用局域网的地址</h2><p><img src="https://picgo.xingenhi.cn//typoraclip_image006b6cba7d7-3d1d-4cfe-a457-2afe1b1a13aa.jpg" alt="image"></p><p>在solr.xml 里面我们使用的公网的地址，现在没有任何问题？为什么不使用局域网的地址？</p><p>我们知道，我们可以从zk上面获取solr的地址。Solr 是把自己的那个地址写在zk 上面！</p><p>Solr 会把自己配置文件solr.xml 里面的host地址写在zk 上面！</p><p>假设我们写的局域网的地址：那在zk 上面就是局域网的地址-&gt;app 从zk 上面获取的就是局域网的地址-&gt; 你的app 能不能通过局域网的地址来连接solr</p><p>原因就是上面的</p><p>那什么时候就能使用局域网！</p><p>我们若把app 和solr 部署在一个局域网内部！就可以了。在工作时，需要把程序和solr 部署在局域网里面</p>`,51);function I(E,A){const a=o("ExternalLinkIcon");return c(),i("div",null,[n("div",u,[r,k,n("p",null,[n("a",d,[s("课程视频"),t(a)])])]),m,n("p",null,[s("Solr的官网： "),n("a",v,[s("http://lucene.apache.org/solr/"),t(a)])]),g,n("p",null,[n("a",b,[s("https://lucene.apache.org/solr/"),t(a)])]),h,n("p",null,[n("a",y,[s("http://www.leige.plus:8983/solr/"),t(a)])]),n("p",null,[n("a",f,[s("http://ip:8983/solr/"),t(a)])]),q,n("p",null,[s("访问 "),n("a",w,[s("http://www.leige.plus:8983/solr"),t(a)]),s("时，出现该主页面，可查看到solr运行时间、solr版本，系统内存、虚拟机内存的使用情况")]),S,n("p",null,[s("下载ik (5及以上版本通用) "),n("a",x,[s("http://files.cnblogs.com/files/zhangweizhong/ikanalyzer-solr5.zip"),t(a)])]),_,n("p",null,[n("a",j,[s("https://zhile.io/2019/04/23/mybatis-code-helper-pro-crack.html"),t(a)])]),D,n("p",null,[n("a",C,[s("https://lucene.apache.org/solr/guide/7_7/command-line-utilities.html"),t(a)])]),L])}const R=e(l,[["render",I],["__file","Solr.html.vue"]]);export{R as default};
