import{_ as e,r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-f078eaf8.js";const i={},u={class:"custom-container tip"},r=n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])],-1),k=n("p",{class:"custom-container-title"},"TIP",-1),d={href:"https://www.bilibili.com/video/BV1sb411v7zq",target:"_blank",rel:"noopener noreferrer"},m=p(`<h1 id="_01【掌握】springmvc概述" tabindex="-1"><a class="header-anchor" href="#_01【掌握】springmvc概述" aria-hidden="true">#</a> 01【掌握】springMVC概述</h1><h2 id="一-概述" tabindex="-1"><a class="header-anchor" href="#一-概述" aria-hidden="true">#</a> 一，概述</h2><p>Spring MVC是Spring提供的一个强大而灵活的web框架。借助于注解，Spring MVC提供了几乎是POJO的开发模式，使得控制器的开发和测试更加简单。这些控制器一般不直接处理请求，而是将其委托给Spring上下文中的其他bean，通过Spring的依赖注入功能，这些bean被注入到控制器中。</p><p>Spring MVC主要由DispatcherServlet、处理器映射、处理器(控制器)、视图解析器、视图组成。他的两个核心是两个核心：</p><p>处理器映射：选择使用哪个控制器来处理请求</p><p>视图解析器：选择结果应该如何渲染</p><p>通过以上两点，Spring MVC保证了如何选择控制处理请求和如何选择视图展现输出之间的松耦合。</p><p><img src="https://picgo.xingenhi.cn//typorab60ce096-638c-4eb4-93f3-4201b0580ab9.jpg" alt="image"></p><h2 id="二-springmvc的原理图" tabindex="-1"><a class="header-anchor" href="#二-springmvc的原理图" aria-hidden="true">#</a> 二，springmvc的原理图</h2><p><img src="https://picgo.xingenhi.cn//typora0.637330979196812.png" alt="image"></p><p>1， 前端处理器</p><p>2， 控制器映射器</p><p>3， 控制器适配器</p><p>4，控制器</p><p>5， 视图处理器</p><h2 id="三-springmvc接口解释" tabindex="-1"><a class="header-anchor" href="#三-springmvc接口解释" aria-hidden="true">#</a> 三，SpringMVC接口解释</h2><p>（1）DispatcherServlet接口：</p><p>Spring提供的前端控制器，所有的请求都有经过它来统一分发。在DispatcherServlet将请求分发给Spring Controller之前，需要借助于Spring提供的HandlerMapping定位到具体的Controller。</p><p>（2）HandlerMapping接口：</p><p>能够完成客户请求到Controller映射。</p><p>（2）HandlerAdapter接口：</p><p>根据映射器返回的结果寻找哪一种适配器调用相关的Controller。</p><p>（3）Controller接口：</p><p>需要为并发用户处理上述请求，因此实现Controller接口时，必须保证线程安全并且可重用。</p><p>Controller将处理用户请求，这和Struts Action扮演的角色是一致的。一旦Controller处理完用户请求，则返回ModelAndView对象给DispatcherServlet前端控制器，ModelAndView中包含了模型（Model）和视图（View）。</p><p>从宏观角度考虑，DispatcherServlet是整个Web应用的控制器；从微观考虑，Controller是单个Http请求处理过程中的控制器，而ModelAndView是Http请求过程中返回的模型（Model）和视图（View）。</p><p>（4）ViewResolver接口：</p><p>Spring提供的视图解析器（ViewResolver）在Web应用中查找View对象，从而将相应结果渲染给客户。</p><hr><h2 id="四-springmvc下载" tabindex="-1"><a class="header-anchor" href="#四-springmvc下载" aria-hidden="true">#</a> 四，SpringMVC下载</h2><p>在spring包里面就有</p><h1 id="_02【掌握】springmvc的入门配置" tabindex="-1"><a class="header-anchor" href="#_02【掌握】springmvc的入门配置" aria-hidden="true">#</a> 02【掌握】springMVC的入门配置</h1><h2 id="一-环境准备" tabindex="-1"><a class="header-anchor" href="#一-环境准备" aria-hidden="true">#</a> 一，环境准备</h2><p>1，java环境</p><p>2，myeclipse</p><p>3，springmvc版本 4.3</p><p>需要spring的所有jar包（一定要有spring-webmvc-4.3.7.RELEASE.jar）</p><p><img src="https://picgo.xingenhi.cn//typorae84fbeab-20dd-41d2-b507-36c994ce428d.png" alt="image"></p><h3 id="二-创建项目导入jar包" tabindex="-1"><a class="header-anchor" href="#二-创建项目导入jar包" aria-hidden="true">#</a> 二，创建项目导入jar包</h3><p><img src="https://picgo.xingenhi.cn//typorac0c5ce88-bedb-4825-a6d7-b46d2dcbe68f.png" alt="image"></p><h2 id="三-创建spring的核心配置文件" tabindex="-1"><a class="header-anchor" href="#三-创建spring的核心配置文件" aria-hidden="true">#</a> 三，创建spring的核心配置文件</h2><p><img src="https://picgo.xingenhi.cn//typora2740369b-1a46-4ab0-8f31-66bbe6d8ccfd.png" alt="image"></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/context<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/mvc<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四-配置前端控制器" tabindex="-1"><a class="header-anchor" href="#四-配置前端控制器" aria-hidden="true">#</a> 四，配置前端控制器</h2><h2 id="五-创建handler【controller】" tabindex="-1"><a class="header-anchor" href="#五-创建handler【controller】" aria-hidden="true">#</a> 五，创建Handler【Controller】</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User1Controller</span> <span class="token keyword">implements</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
            <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">&quot;武汉&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">&quot;北京&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token string">&quot;深圳&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;赵六&quot;</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token string">&quot;上海&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&quot;孙七&quot;</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token string">&quot;杭州&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ModelAndView</span> view<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ModelAndView</span><span class="token punctuation">(</span><span class="token string">&quot;/WEB-INF/jsp/user/list.jsp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六-创建视图" tabindex="-1"><a class="header-anchor" href="#六-创建视图" aria-hidden="true">#</a> 六，创建视图</h2><p><img src="https://picgo.xingenhi.cn//typoraeb5d093d-3b7f-4868-9497-149dfc0fb6d6.png" alt="image"></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>90%<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>编号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">c:</span>forEach</span> <span class="token attr-name">items</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${list }<span class="token punctuation">&quot;</span></span> <span class="token attr-name">var</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>\${sn.uid }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>\${sn.uname }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>\${sn.uage }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>\${sn.uaddress }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">c:</span>forEach</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="七-在springmvc-xml里面配置controller" tabindex="-1"><a class="header-anchor" href="#七-在springmvc-xml里面配置controller" aria-hidden="true">#</a> 七，在springmvc.xml里面配置Controller</h2><h2 id="八-配置处理器适配器" tabindex="-1"><a class="header-anchor" href="#八-配置处理器适配器" aria-hidden="true">#</a> 八，配置处理器适配器</h2><h2 id="九-配置处理器映射器" tabindex="-1"><a class="header-anchor" href="#九-配置处理器映射器" aria-hidden="true">#</a> 九，配置处理器映射器</h2><h2 id="十-配置视图解析器" tabindex="-1"><a class="header-anchor" href="#十-配置视图解析器" aria-hidden="true">#</a> 十，配置视图解析器</h2><h2 id="十一-发布测试" tabindex="-1"><a class="header-anchor" href="#十一-发布测试" aria-hidden="true">#</a> 十一，发布测试</h2>`,54),v={href:"http://127.0.0.1:8080/bjsxt/user1Controller.action",target:"_blank",rel:"noopener noreferrer"},g=p(`<p><img src="https://picgo.xingenhi.cn//typora8d092281-04f0-41e9-a3e2-14418495f97b.png" alt="image"></p><h1 id="_03【掌握】springmvc-xml详解" tabindex="-1"><a class="header-anchor" href="#_03【掌握】springmvc-xml详解" aria-hidden="true">#</a> 03【掌握】springmvc.xml详解</h1><h2 id="一-非注解映射器" tabindex="-1"><a class="header-anchor" href="#一-非注解映射器" aria-hidden="true">#</a> 一，非注解映射器</h2><p>1，org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping</p><pre><code>    |--将bean的name作为url进行查找 ，需要在配置Handler时指定beanname（就是url）  

    配置方法  
</code></pre><p><img src="https://picgo.xingenhi.cn//typorab5a5bb4f-74de-4d24-93f9-0ded369b269d.png" alt="image"></p><p>2，org.springframework.web.servlet.handler.SimpleUrlHandlerMapping</p><pre><code>    |--可以配置多个url  

    配置方法  
</code></pre><p><img src="https://picgo.xingenhi.cn//typora37c27cf1-ac1e-4311-b009-78616592ca23.png" alt="image"></p><p>注意，以上两种映射器是可以共存的哦</p><hr><h2 id="二-非注解处理器适配器" tabindex="-1"><a class="header-anchor" href="#二-非注解处理器适配器" aria-hidden="true">#</a> 二，非注解处理器适配器</h2><p>1，org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter</p><pre><code>    |--使用它的话那么创建的Controller必须实现Controller接口  
</code></pre><p><img src="https://picgo.xingenhi.cn//typora8ff5db90-0a06-4bd8-9878-0bd846624fdd.png" alt="image"></p><p>2，org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter</p><pre><code>    |--使用它的话那么创建的Controller必须实现HttpReqeustHandler接口  
</code></pre><p><img src="https://picgo.xingenhi.cn//typorac7d7b13a-518d-4d6f-948c-b4257fe19caa.png" alt="image"></p><hr><h2 id="三-注解映射器和注解适配器的配置" tabindex="-1"><a class="header-anchor" href="#三-注解映射器和注解适配器的配置" aria-hidden="true">#</a> 三，注解映射器和注解适配器的配置</h2><p>在spring3.1之前使用org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping注解映射器。</p><p>在spring3.1之后使用org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping注解映射器。</p><p>在spring3.1之前使用org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter注解适配器。</p><p>在spring3.1之后使用org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter注解适配器。</p><p>配置方法</p><p><img src="https://picgo.xingenhi.cn//typorac046abf2-90ac-4583-8949-897768720ebc.png" alt="image"></p><p>打开注解扫描</p><p><img src="https://picgo.xingenhi.cn//typoraa04cc88c-f772-420e-b97b-4eeabc1ac858.png" alt="image"></p><p>创建注解的Controller</p><p><img src="https://picgo.xingenhi.cn//typoraf50d3dc1-8a56-4dae-859c-47de5956cf90.png" alt="image"></p><p>发布测试</p>`,31),b={href:"http://127.0.0.1:8080/bjsxt/user3.action",target:"_blank",rel:"noopener noreferrer"},h=p(`<h1 id="_04【掌握】dispatcherservlet-properties说明" tabindex="-1"><a class="header-anchor" href="#_04【掌握】dispatcherservlet-properties说明" aria-hidden="true">#</a> 04【掌握】DispatcherServlet.properties说明</h1><p><img src="https://picgo.xingenhi.cn//typora5a28b058-3197-447e-a8dd-ef20b51ca653.png" alt="image"></p><p>前端控制器从上边的文件中加载处理映射器、适配器、视图解析器等组件，如果不在springmvc.xml中配置，使用默认加载的。</p><p><img src="https://picgo.xingenhi.cn//typora3e974915-e51e-4e79-a010-5a3d3dc8dcad.png" alt="image"></p><h1 id="_05【掌握】入门程序总结" tabindex="-1"><a class="header-anchor" href="#_05【掌握】入门程序总结" aria-hidden="true">#</a> 05【掌握】入门程序总结</h1><p>通过入门程序理解springmvc前端控制器、处理器映射器、处理器适配器、视图解析器用法。</p><p>前端控制器配置：</p><p>第一种：*.action，访问以.action结尾 由DispatcherServlet进行解析</p><p>第二种：/，所以访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析</p><p>使用此种方式可以实现 RESTful风格的url</p><p>处理器映射器：</p><p>非注解处理器映射器（了解）</p><p><strong>注解的处理器映射器（掌握）</strong></p><pre><code>     对标记@Controller类中标识有@RequestMapping的方法进行映射。在@RequestMapping里边定义映射的url。使用注解的映射器不用在xml中配置url和Handler的映射关系。
</code></pre><p>处理器适配器：</p><p>非注解处理器适配器（了解）</p><p><strong>注解的处理器适配器（掌握）</strong></p><pre><code>     注解处理器适配器和注解的处理器映射器是配对使用。理解为不能使用非注解映射器进行映射。
</code></pre><p><a href="mvc:annotation-driven">mvc:annotation-driven</a>&lt;/mvc:annotation-driven&gt;可以代替下边的配置：</p><div class="language-Plain line-numbers-mode" data-ext="Plain"><pre class="language-Plain"><code>   &lt;!--注解映射器 --&gt;
   &lt;bean class=&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping&quot;/&gt;

   &lt;!--注解适配器 --&gt;
   &lt;bean class=&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter&quot;/&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实际开发使用：mvc:annotation-driven</p><hr><h1 id="_06【掌握】controller中参数绑定" tabindex="-1"><a class="header-anchor" href="#_06【掌握】controller中参数绑定" aria-hidden="true">#</a> 06【掌握】Controller中参数绑定</h1><h2 id="一-简单类型参数绑定" tabindex="-1"><a class="header-anchor" href="#一-简单类型参数绑定" aria-hidden="true">#</a> 一，简单类型参数绑定</h2><p>1，创建index.jsp</p><p><img src="https://picgo.xingenhi.cn//typorae09e076e-ac53-4b0e-b558-1af912fb1f01.png" alt="image"></p><p>2，创建UserController</p><p><img src="https://picgo.xingenhi.cn//typora7c53137e-a07e-4f55-9e17-39c950e820cc.png" alt="image"></p><hr><h2 id="二-集合类型参数绑定" tabindex="-1"><a class="header-anchor" href="#二-集合类型参数绑定" aria-hidden="true">#</a> 二，集合类型参数绑定</h2><p>1，index,jsp</p><p><img src="https://picgo.xingenhi.cn//typora3d929212-e409-4dda-94ea-46f1c9be41bd.png" alt="image"></p><p>2，UserController添加一个方法</p><p><img src="https://picgo.xingenhi.cn//typoracc1a06ed-2050-4a12-9cb8-0bac4bb75acd.png" alt="image"></p><hr><h2 id="三-对象类型参数绑定【重点】" tabindex="-1"><a class="header-anchor" href="#三-对象类型参数绑定【重点】" aria-hidden="true">#</a> 三，对象类型参数绑定【重点】</h2><p>1，创建UserVo</p><p><img src="https://picgo.xingenhi.cn//typoraa4e42b42-bca5-4cc2-b5ae-c867f0efbb87.png" alt="image"></p><p>2，编写视图</p><p><img src="https://picgo.xingenhi.cn//typoraee97ab41-bf31-48f8-aa50-e54c668019fd.png" alt="image"></p><p>2，在UserController中添加方法</p><p><img src="https://picgo.xingenhi.cn//typorab97e30e1-c82a-4290-af40-24a3b01b3bf3.png" alt="image"></p><hr><h2 id="四-默认参数绑定" tabindex="-1"><a class="header-anchor" href="#四-默认参数绑定" aria-hidden="true">#</a> 四，默认参数绑定</h2><p><img src="https://picgo.xingenhi.cn//typora81d20082-afd6-42ea-97e2-96ba1bb38b7e.png" alt="image"></p><p>Model</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>model.addAttribute(&quot;users&quot;, users); 等价于request.setAttribute(); 等价于modelAndView.addObject();

modelAndView.setViewName(&quot;跳转地址&quot;); 等价于request.getRequestDispacther(&quot;跳转地址&quot;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、其他web参数类型的绑定" tabindex="-1"><a class="header-anchor" href="#五、其他web参数类型的绑定" aria-hidden="true">#</a> 五、其他Web参数类型的绑定</h2><p>HttpServletRequest、HttpServletResponse、HttpSession</p><p>第一种方法【使用形参的方式绑定】</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    @RequestMapping(&quot;queryWeb&quot;)
    public String queryWeb(HttpServletRequest request, HttpServletResponse response, HttpSession session) {
        System.out.println(request);
        System.out.println(response);
        System.out.println(session);
        // 从request中取出session
        System.out.println(request.getSession());
        // 获取servletContext
        System.out.println(request.getServletContext());
        System.out.println(session.getServletContext());
        return &quot;&quot;;
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二种方法【注入的方式绑定】</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    @Autowired
    private HttpServletRequest request;

    @Autowired
    private HttpServletResponse response;

    @Autowired
    private HttpSession session;

    @RequestMapping(&quot;queryWeb&quot;)
    public String queryWeb() {
        System.out.println(request);
        System.out.println(response);
        System.out.println(session);
        // 从request中取出session
        System.out.println(request.getSession());
        // 获取servletContext
        System.out.println(request.getServletContext());
        System.out.println(session.getServletContext());
        return &quot;&quot;;
    }

//要求：当前的类的对象必须是spring的ioc容器创建的

// 注意点：对象的hasCode的值可能不一样，但是里面的内容是一样的。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第三种方法【解耦的方式】</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>想要哪个写哪个，请看，是不是很高大上</p><h2 id="六-httprequest的几种其它获取方法" tabindex="-1"><a class="header-anchor" href="#六-httprequest的几种其它获取方法" aria-hidden="true">#</a> 六，HttpRequest的几种其它获取方法</h2><p>1，使用注解的方法</p><pre><code>要求。对象必须由ioc 容器创建  
</code></pre><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addUser</span><span class="token punctuation">(</span><span class="token class-name">User</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2，使用解耦的方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token comment">//当前这个对象没有被spring管理  如何得到   在这里面得到request</span>
        <span class="token class-name">ServletRequestAttributes</span> requestAttributes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span><span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> requestAttributes<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HttpServletResponse</span> response <span class="token operator">=</span> requestAttributes<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HttpSession</span> session <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_07【掌握】中文乱码处理" tabindex="-1"><a class="header-anchor" href="#_07【掌握】中文乱码处理" aria-hidden="true">#</a> 07【掌握】中文乱码处理</h1><p><strong>servlet里面的解决方法：</strong></p><p>1、请求乱码：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>// 1、 
request.setCheracterEncoding(&quot;utf-8&quot;);
// 2、如果这样还是乱码，接下来需要配置tomcat
String name = request.getParamater(&quot;name&quot;);
// 配置tomcat的servlet.xml--&gt;Connertor添加useBodyEncodingForURI=&quot;true&quot;
                    一般把URLEncoding=&quot;utf-8&quot;加上
// 3、如果还是解决不了乱码
String myname = new String(name.getBytes(&quot;iso-8859-1&quot;), &quot;utf-8&quot;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、响应乱码：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>// 1、解决写入的字符串的编码格式
response.setCheracterEncoding(&quot;utf-8&quot;);
    PrintWriter out = response.getWriter();
    out.wrinte(&quot;你好世界&quot;);
// 2、强制浏览器使用某种格式解析
response.setContentType(&quot;text/html;charset=utf-8&quot;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、过滤器解决</p><p><strong>spring里面的解决方法【过滤器】：</strong></p><p>在web.xml配置过滤器。CharacterEncodingFilter</p><p>4、数据库乱码</p><p>（1）新建数据库时指定编码：utf-8</p><p>（2）</p><p><img src="https://picgo.xingenhi.cn//typoraccccef25-8a32-4dc5-80c3-a4cf280ae985.jpg" alt="image"></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>url: jdbc:mysql://129.211.39.189:3306/carrent?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=UTC
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（3）修改mysql的my.ini</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>第57行：[mysql]节点修改default-character-set=utf8
第81行：[mysqld]节点修改character-set-servlet=utf8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_08【掌握】springmvc的跳转" tabindex="-1"><a class="header-anchor" href="#_08【掌握】springmvc的跳转" aria-hidden="true">#</a> 08【掌握】springMVC的跳转</h1><h2 id="一-视图解析器的配置" tabindex="-1"><a class="header-anchor" href="#一-视图解析器的配置" aria-hidden="true">#</a> 一，视图解析器的配置</h2><p>视图解析器配置前缀和后缀：</p><p><img src="https://picgo.xingenhi.cn//typora88504433-90d6-4992-a71d-b0c447b4ea95.jpg" alt="image"></p><p>程序中不用指定前缀和后缀：</p><p><img src="https://picgo.xingenhi.cn//typoraa2b75076-d23f-4cc0-a800-eb2ddb56c42d.png" alt="image"></p><h2 id="二-两种跳转方式" tabindex="-1"><a class="header-anchor" href="#二-两种跳转方式" aria-hidden="true">#</a> 二，两种跳转方式</h2><p>在Servlet和struts里面我们知道有两种跳转方法</p><pre><code>1，请求转发 【项目内部，一次请求一次响应】

2，请求重定向【可以转发到外部的项目，两次请求两次响应】
</code></pre><p>同理springmvc里面也提供了这两种方法</p><pre><code>在Controller里面的返回值可以是String  ModelAndView  如果是ModelAndView默认的就是请求转发  

如  return &quot;index.jsp&quot; 这种方法是默认的请求转发   这个写法====return &quot;forward:index.jsp&quot;  

如  return &quot;redirect:index.jsp&quot;这种方法是就重定向到index.jsp页面  
</code></pre><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/***
         * 前提:已经配置了视图解析器
         * 请求转化：
               return &quot;index.jsp&quot; 
               model.addAttribute(arg1,arg2)将数据封装到request作用域
           重定向：
                return &quot;redirect:url[A1] &quot;，视图解析器不再起作用
         *      model.addAttribute(arg1,arg2)变为url传参数  会跟在url的后面
         * **/</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>servlet中的转发和重定向</strong></p><p>转发：一次请求一次响应，只能在服务器内部转发，页面发生变化之后客户端不知道</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重定向：两次请求两次响应，可以重定向到其他服务器，页面的url会发生变化</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>response<span class="token punctuation">.</span><span class="token function">sedRedirect</span><span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="_09【掌握】springmvc和ajax的交互" tabindex="-1"><a class="header-anchor" href="#_09【掌握】springmvc和ajax的交互" aria-hidden="true">#</a> 09【掌握】springMVC和ajax的交互</h1><h2 id="一-响应简单文本到客户端" tabindex="-1"><a class="header-anchor" href="#一-响应简单文本到客户端" aria-hidden="true">#</a> 一，响应简单文本到客户端</h2><h3 id="_1-controller的方法" tabindex="-1"><a class="header-anchor" href="#_1-controller的方法" aria-hidden="true">#</a> 1，Controller的方法</h3><p><img src="https://picgo.xingenhi.cn//typora05e4cff3-3522-498f-9361-ad367ebe5e8e.png" alt="image"></p><p>注意这里的@ResponseBosy 设置return直接响应字符串</p><h3 id="_2-index-jsp" tabindex="-1"><a class="header-anchor" href="#_2-index-jsp" aria-hidden="true">#</a> 2，index.jsp</h3><p><img src="https://picgo.xingenhi.cn//typora699eea55-8803-40c8-ae0b-d639e4d1e556.png" alt="image"></p><p>解决返回字符串乱码问题</p><p>第一种：在@RequestMapping中添加<strong>produces=&quot;text/html;charset=UTF-8</strong></p><p>第二种：在MVC 配置中加入，spring版本必需为3.1或以上版本才可以下配置</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>message-converters</span> <span class="token attr-name">register-defaults</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.http.converter.StringHttpMessageConverter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>message-converters</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二-响应json对象到客户端" tabindex="-1"><a class="header-anchor" href="#二-响应json对象到客户端" aria-hidden="true">#</a> 二，响应json对象到客户端</h2><h3 id="_1-实现方法" tabindex="-1"><a class="header-anchor" href="#_1-实现方法" aria-hidden="true">#</a> 1，实现方法</h3><p>①，可以使用上面的方法组装一个json的字符串，让Handler里面的方法返回一个字符串就可以了</p><p>②，springmvc里面内置了jackson的json生成和解析的方法，【但是要导jackson的包】</p><h3 id="_2-jackson的实现方法" tabindex="-1"><a class="header-anchor" href="#_2-jackson的实现方法" aria-hidden="true">#</a> 2，jackson的实现方法</h3><pre><code>1，导入jackson的jar包
</code></pre><p><img src="https://picgo.xingenhi.cn//typora26b052f9-1321-4b36-b2ec-1c672786fd30.png" alt="image"></p><pre><code>2，编写Handler  
</code></pre><p><img src="https://picgo.xingenhi.cn//typora34321302-5bb4-400d-9e80-102c3f6eba3e.png" alt="image"></p><pre><code>3，请求  

    [http://127.0.0.1:8080/bjsxt/user/queryUsers.action](http://127.0.0.1:8080/bjsxt/user/queryUsers.action)
</code></pre><p><img src="https://picgo.xingenhi.cn//typorae2edb0a7-afe1-4893-96fb-6b0914b040f9.png" alt="image"></p><h1 id="_10【掌握】ssm的整合" tabindex="-1"><a class="header-anchor" href="#_10【掌握】ssm的整合" aria-hidden="true">#</a> 10【掌握】SSM的整合</h1><p><strong>使用spring springmvc mybatis整合框架</strong></p><p>业务：完成用户的登陆和用户的全查询显示</p><h2 id="一-创建项目和包" tabindex="-1"><a class="header-anchor" href="#一-创建项目和包" aria-hidden="true">#</a> 一，创建项目和包</h2><p><img src="https://picgo.xingenhi.cn//typora49dc9cfd-4489-46c4-842e-5bc036dfcbbe.png" alt="image"></p><h2 id="二-导包" tabindex="-1"><a class="header-anchor" href="#二-导包" aria-hidden="true">#</a> 二，导包</h2><h3 id="_1-导spring的包" tabindex="-1"><a class="header-anchor" href="#_1-导spring的包" aria-hidden="true">#</a> 1，导spring的包</h3><p><img src="https://picgo.xingenhi.cn//typora154704be-c347-4f82-95ef-d88a9cd0f29e.png" alt="image"></p><h3 id="_2-导mybatis的包" tabindex="-1"><a class="header-anchor" href="#_2-导mybatis的包" aria-hidden="true">#</a> 2，导mybatis的包</h3><p><img src="https://picgo.xingenhi.cn//typora75f31acb-9528-404a-883a-fd29a3c2276c.png" alt="image"></p><h3 id="_3-导数据库驱动包" tabindex="-1"><a class="header-anchor" href="#_3-导数据库驱动包" aria-hidden="true">#</a> 3，导数据库驱动包</h3><p><img src="https://picgo.xingenhi.cn//typora6a82ea8f-fdaf-4260-a826-7df8e16c0b6b.png" alt="image"></p><h3 id="_4-导链接池的包【可不导】" tabindex="-1"><a class="header-anchor" href="#_4-导链接池的包【可不导】" aria-hidden="true">#</a> 4，导链接池的包【可不导】</h3><p><img src="https://picgo.xingenhi.cn//typora1d77ddc0-cd8f-4bbb-9961-dca2a686f262.png" alt="image"></p><h3 id="_5-导分页的包【不用可不导】" tabindex="-1"><a class="header-anchor" href="#_5-导分页的包【不用可不导】" aria-hidden="true">#</a> 5，导分页的包【不用可不导】</h3><p><img src="https://picgo.xingenhi.cn//typora26ff701d-d723-415a-adce-540ca4586ca6.png" alt="image"></p><h3 id="_6-导json包" tabindex="-1"><a class="header-anchor" href="#_6-导json包" aria-hidden="true">#</a> 6，导json包</h3><p><img src="https://picgo.xingenhi.cn//typoraef89ab40-9d17-4f7b-98a6-63035aaeba84.png" alt="image"></p><h2 id="三-创建springmvc-xml" tabindex="-1"><a class="header-anchor" href="#三-创建springmvc-xml" aria-hidden="true">#</a> 三，创建springmvc.xml</h2><h3 id="_1-创建srpingmvc-xml导入头文件" tabindex="-1"><a class="header-anchor" href="#_1-创建srpingmvc-xml导入头文件" aria-hidden="true">#</a> 1，创建srpingmvc.xml导入头文件</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/context<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/mvc<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-配置handler注解扫描" tabindex="-1"><a class="header-anchor" href="#_2-配置handler注解扫描" aria-hidden="true">#</a> 2，配置Handler注解扫描</h3><h3 id="_3-配置注解映射器和适配器" tabindex="-1"><a class="header-anchor" href="#_3-配置注解映射器和适配器" aria-hidden="true">#</a> 3，配置注解映射器和适配器</h3><h3 id="_4-配置视图解析器" tabindex="-1"><a class="header-anchor" href="#_4-配置视图解析器" aria-hidden="true">#</a> 4，配置视图解析器</h3><h3 id="_5-配置静态资源" tabindex="-1"><a class="header-anchor" href="#_5-配置静态资源" aria-hidden="true">#</a> 5，配置静态资源</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>resources</span> <span class="token attr-name">mapping</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/static/**<span class="token punctuation">&quot;</span></span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/static/<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="四-创建mybatis-cfg-xml" tabindex="-1"><a class="header-anchor" href="#四-创建mybatis-cfg-xml" aria-hidden="true">#</a> 四，创建mybatis.cfg.xml</h2><p>其它这个文件可以不创建，但是为了配置mapper.xml的别名，我们还是在这里配置一下</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>
<span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span>
<span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logImpl<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>LOG4J<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 别外优化 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.domain<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">interceptor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.github.pagehelper.PageInterceptor<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五-创建applicationcontext-xml" tabindex="-1"><a class="header-anchor" href="#五-创建applicationcontext-xml" aria-hidden="true">#</a> 五，创建applicationContext.xml</h2><h3 id="_1-创建applicationcontext-xml并导入头文件" tabindex="-1"><a class="header-anchor" href="#_1-创建applicationcontext-xml并导入头文件" aria-hidden="true">#</a> 1,创建applicationContext.xml并导入头文件</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/context<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>tx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/tx<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/aop<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-扫描service的注解" tabindex="-1"><a class="header-anchor" href="#_2-扫描service的注解" aria-hidden="true">#</a> 2，扫描service的注解</h3><h3 id="_3-配置数据源【这里说三种配置方法】" tabindex="-1"><a class="header-anchor" href="#_3-配置数据源【这里说三种配置方法】" aria-hidden="true">#</a> 3，配置数据源【这里说三种配置方法】</h3><h4 id="_3-1spring自带的" tabindex="-1"><a class="header-anchor" href="#_3-1spring自带的" aria-hidden="true">#</a> 3.1spring自带的</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.jdbc.datasource.DriverManagerDataSource<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>driverClassName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mysql.jdbc.Driver<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jdbc:mysql://localhost:3306/ssm<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>123456<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2c3p0的【注意导c3p0的两个jar包】" tabindex="-1"><a class="header-anchor" href="#_3-2c3p0的【注意导c3p0的两个jar包】" aria-hidden="true">#</a> 3.2c3p0的【注意导c3p0的两个jar包】</h4><h4 id="_3-3dbcp的【注意导dbcp的两个jar包】" tabindex="-1"><a class="header-anchor" href="#_3-3dbcp的【注意导dbcp的两个jar包】" aria-hidden="true">#</a> 3.3dbcp的【注意导dbcp的两个jar包】</h4><h3 id="_4-实例化sqlsessionfactory" tabindex="-1"><a class="header-anchor" href="#_4-实例化sqlsessionfactory" aria-hidden="true">#</a> 4，实例化SqlSessionFactory</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sqlSessionFactory<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.mybatis.spring.SqlSessionFactoryBean<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--mybatis的配置文件 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>configLocation<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>classpath:mybatis.cfg.xml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token comment">&lt;!--扫描 XXXmapper.xml映射文件,配置扫描的路径 这个不配置也可以，但是不配置的话，下面dao和xxxMapper.xml必须放在同一个包下面 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mapperLocations<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>classpath:com/sxt/mapping/*.xml<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-配置dao包的查找" tabindex="-1"><a class="header-anchor" href="#_5-配置dao包的查找" aria-hidden="true">#</a> 5，配置dao包的查找</h3><h3 id="_6-第4点和第五点还可以这样配置【不推荐】" tabindex="-1"><a class="header-anchor" href="#_6-第4点和第五点还可以这样配置【不推荐】" aria-hidden="true">#</a> 6，第4点和第五点还可以这样配置【不推荐】</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> 注意，这样配置就没有mybatis.cfg.xml了，当然，想要也可以加进来，还有就是XxxMapper.java和XxxMapper.xml的名字必须相同
<span class="token comment">&lt;!-- 实例化SqlSessionFactory --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sqlSessionFactory<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.mybatis.spring.SqlSessionFactoryBean<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 给SqlSessionFactory 对象注入 DataSource --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dataSource<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 注入分页插件，拦截器 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>plugins<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.github.pagehelper.PageHelper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>properties<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>props</span><span class="token punctuation">&gt;</span></span>
                            <span class="token comment">&lt;!-- 底层数据库的方言 --&gt;</span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dialect<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">&gt;</span></span>
                            <span class="token comment">&lt;!-- 分页最大页，最小页判断 --&gt;</span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>reasonable<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>props</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 
        通过MapperScannerConfigurer扫描，产生Mapper接口的代理对象
        产生的Mapper接口的代理对象，在spring容器的id为接受名字，首字母小写
        mapper.java 和 mapper.xml必须名字相同，在同一个目录
     --&gt;</span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.mybatis.spring.mapper.MapperScannerConfigurer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 指定需要扫的package --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>basePackage<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.bjsxt.mapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 注入SqlSessionFactory对象 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sqlSessionFactoryBeanName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sqlSessionFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-声明式事务配置" tabindex="-1"><a class="header-anchor" href="#_7-声明式事务配置" aria-hidden="true">#</a> 7，声明式事务配置</h3><h2 id="六-log4j的配置" tabindex="-1"><a class="header-anchor" href="#六-log4j的配置" aria-hidden="true">#</a> 六，log4j的配置</h2><h3 id="_1-创建log4j-properties" tabindex="-1"><a class="header-anchor" href="#_1-创建log4j-properties" aria-hidden="true">#</a> 1，创建log4j.properties</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code># Global logging configuration
log4j.rootLogger=DEBUG, stdout
# MyBatis logging configuration...
log4j.logger.org.mybatis.example.BlogMapper=TRACE
# Console output...
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-修改mybtais-xml让mybtis使用log4j的日志输出" tabindex="-1"><a class="header-anchor" href="#_2-修改mybtais-xml让mybtis使用log4j的日志输出" aria-hidden="true">#</a> 2，修改mybtais.xml让mybtis使用log4j的日志输出</h3><p><img src="https://picgo.xingenhi.cn//typora16134586-1c57-427d-8bcf-a8bde361251d.png" alt="image"></p><h2 id="七-web-xml的配置" tabindex="-1"><a class="header-anchor" href="#七-web-xml的配置" aria-hidden="true">#</a> 七，web.xml的配置</h2><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://java.sun.com/xml/ns/javaee<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>WebApp_ID<span class="token punctuation">&quot;</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>display-name</span><span class="token punctuation">&gt;</span></span>ssm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>display-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 加载Spring容器配置 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.context.ContextLoaderListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- Spring容器加载所有的配置文件的路径 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>classpath*:applicationContext.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 配置SpringMVC核心控制器,将所有的请求(除了刚刚Spring MVC中的静态资源请求)都交给Spring MVC --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>springMvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>classpath*:springmvc.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--用来标记是否在项目启动时就加在此Servlet,0或正数表示容器在应用启动时就加载这个Servlet, 当是一个负数时或者没有指定时，则指示容器在该servlet被选择时才加载.正数值越小启动优先值越高 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--为DispatcherServlet建立映射 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>springMvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 拦截所有请求,千万注意是(/)而不是(/*) --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>*.action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 设置编码过滤器 --&gt;</span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">&gt;</span></span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">&gt;</span></span>encodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">&gt;</span></span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.filter.CharacterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">&gt;</span></span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>  
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>encoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>  
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>  
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>forceEncoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>  
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">&gt;</span></span>  

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">&gt;</span></span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">&gt;</span></span>encodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">&gt;</span></span>  
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">&gt;</span></span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file-list</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>login.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file-list</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>到此，框架搭建完成，那么接下来完成登陆和显示所用用户的操作</strong></p><h2 id="七-完成用户登陆" tabindex="-1"><a class="header-anchor" href="#七-完成用户登陆" aria-hidden="true">#</a> 七，完成用户登陆</h2><h3 id="_1-创建user-java" tabindex="-1"><a class="header-anchor" href="#_1-创建user-java" aria-hidden="true">#</a> 1，创建User.java</h3><p><img src="https://picgo.xingenhi.cn//typora53385f9b-75df-404e-b63b-149c37c014d2.png" alt="image"></p><h3 id="_2-创建userdao-java" tabindex="-1"><a class="header-anchor" href="#_2-创建userdao-java" aria-hidden="true">#</a> 2，创建UserDAO.java</h3><p><img src="https://picgo.xingenhi.cn//typoraa510b6b2-816f-41fb-9275-1d10fba9f614.png" alt="image"></p><h3 id="_3-创建usermapper-xml【这里面的id名必须和userdao里面的方法名一样】" tabindex="-1"><a class="header-anchor" href="#_3-创建usermapper-xml【这里面的id名必须和userdao里面的方法名一样】" aria-hidden="true">#</a> 3，创建UserMapper.xml【这里面的id名必须和UserDAO里面的方法名一样】</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>
<span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>
<span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- mapper 引来定义数据库操作的信息 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.dao.UserDAO<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 添加 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        insert into user values(null,#{name},#{age},#{sex},#{address},#{loginname},#{pwd})
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 修改 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>update<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        update user set name=#{name},age=#{age},sex=#{sex},address=#{address},loginname=#{loginname},pwd=#{pwd} where id=#{id}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 删除  --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>delete<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        delete from user where id=#{id}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 全查询 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>queryAll<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        select * from user;
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 查询一个 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>queryById<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        select * from user where id=\${id}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 登陆 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        select * from user where loginname=#{loginname} and pwd=#{pwd}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-创建userservice-java" tabindex="-1"><a class="header-anchor" href="#_4-创建userservice-java" aria-hidden="true">#</a> 4，创建UserService.java</h3><p><img src="https://picgo.xingenhi.cn//typoradd93f232-44ca-445e-9b0a-61e5363f425f.png" alt="image"></p><h3 id="_5-创建userserviceimpl-java" tabindex="-1"><a class="header-anchor" href="#_5-创建userserviceimpl-java" aria-hidden="true">#</a> 5，创建UserServiceImpl.java</h3><p><img src="https://picgo.xingenhi.cn//typora4a1eccf8-00a1-4785-8e8c-259567f7563a.png" alt="image"></p><h3 id="_6-创建usercontroller-java" tabindex="-1"><a class="header-anchor" href="#_6-创建usercontroller-java" aria-hidden="true">#</a> 6，创建UserController.java</h3><p><img src="https://picgo.xingenhi.cn//typora31426ba3-6a78-4d6c-96b0-b88458a68706.png" alt="image"></p><h3 id="_8-导入模版" tabindex="-1"><a class="header-anchor" href="#_8-导入模版" aria-hidden="true">#</a> 8，导入模版</h3><p><img src="https://picgo.xingenhi.cn//typora713c05a4-996b-475e-a3cb-de60cbfd10d7.png" alt="image"></p><pre><code>1，程序入口index.jsp  
</code></pre><p><img src="https://picgo.xingenhi.cn//typora6321f931-d7b7-4ace-b02a-89426bfbb190.png" alt="image"></p><pre><code>1，登陆页面login.jsp  
</code></pre><p><img src="https://picgo.xingenhi.cn//typora79810f9a-3005-428d-a5d4-a1c963dd5f0f.jpg" alt="image"></p><pre><code>2，index.jsp  

3，list.jsp  
</code></pre><p><img src="https://picgo.xingenhi.cn//typora2964edbb-4759-4487-ab85-149fe3080af4.jpg" alt="image"></p><h1 id="_11【掌握】springmvc的文件上传下载" tabindex="-1"><a class="header-anchor" href="#_11【掌握】springmvc的文件上传下载" aria-hidden="true">#</a> 11【掌握】springMVC的文件上传下载</h1><h2 id="一-文件上传" tabindex="-1"><a class="header-anchor" href="#一-文件上传" aria-hidden="true">#</a> 一，文件上传</h2><h3 id="_1-下载导入jar包" tabindex="-1"><a class="header-anchor" href="#_1-下载导入jar包" aria-hidden="true">#</a> 1，下载导入jar包</h3><p><img src="https://picgo.xingenhi.cn//typora74204cc3-22d6-4c1c-9a9f-4fba422c171c.jpg" alt="image"></p><h3 id="_2-配置二进制流程解析" tabindex="-1"><a class="header-anchor" href="#_2-配置二进制流程解析" aria-hidden="true">#</a> 2，配置二进制流程解析</h3><h3 id="_3-创建index-jsp" tabindex="-1"><a class="header-anchor" href="#_3-创建index-jsp" aria-hidden="true">#</a> 3，创建index.jsp</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uploadFile.action<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>multipart/form-data<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mf<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>上传<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-定义handler处理上传请求" tabindex="-1"><a class="header-anchor" href="#_4-定义handler处理上传请求" aria-hidden="true">#</a> 4，定义Handler处理上传请求</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Controller</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileController</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/***
     * 处理文件上传的请求
     * mf:绑定客户端提交的文件数据（上传文件）
     * **/</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/uploadFile&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> mf<span class="token punctuation">,</span><span class="token class-name">HttpSession</span> session<span class="token punctuation">)</span><span class="token punctuation">{</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;====&quot;</span><span class="token operator">+</span>mf<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;====&quot;</span><span class="token operator">+</span>mf<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;====&quot;</span><span class="token operator">+</span>mf<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获得upload目录，在服务器上的绝对路径</span>
        <span class="token class-name">String</span> path <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">&quot;/upload&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获得文件名称</span>
        <span class="token class-name">String</span> fileName<span class="token operator">=</span>mf<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fileName<span class="token operator">=</span><span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token operator">+</span>
                fileName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//创建目标文件</span>
        <span class="token class-name">File</span> dest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/***
         * 将上传的文件拷贝到磁盘目录
         * **/</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            mf<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// TODO Auto-generated catch block</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// TODO Auto-generated catch block</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5，修改文件名</p><p>6，分文件夹管理</p><p>7，保存路径到数据库</p><h2 id="二-文件下载" tabindex="-1"><a class="header-anchor" href="#二-文件下载" aria-hidden="true">#</a> 二，文件下载</h2><p>1，直接使用路径下载【简单】</p><p>2，通过Handler下载</p><pre><code>1，创建down.jsp  
</code></pre><p><img src="https://picgo.xingenhi.cn//typorab0e2b56a-b961-4b8b-988b-faeebb773a74.png" alt="image"></p><pre><code>2，创建Handler并写下载的方法
</code></pre><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/***
     * 处理文件下载的请求
     * <span class="token keyword">@return</span> 将下载的文件，封装到ResponseEntity对象
     * **/</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/downFile&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span>  <span class="token function">downFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> fname<span class="token punctuation">,</span><span class="token class-name">HttpSession</span> session<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//获得需要下载的文件保存的目录</span>
        <span class="token class-name">String</span> path <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">&quot;/upload&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获得需要下载的文件对象</span>
        <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>fname<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//将下载的文件，封装byte[]</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            bytes <span class="token operator">=</span> <span class="token class-name">FileUtils</span><span class="token punctuation">.</span><span class="token function">readFileToByteArray</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// TODO Auto-generated catch block</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//创建封装响应头信息的对象</span>
        <span class="token class-name">HttpHeaders</span> header<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//封装响应内容类型(APPLICATION_OCTET_STREAM 响应的内容不限定)</span>
        header<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_OCTET_STREAM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置下载的文件的名称</span>
        header<span class="token punctuation">.</span><span class="token function">setContentDispositionFormData</span><span class="token punctuation">(</span><span class="token string">&quot;attachment&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">//创建ResponseEntity对象</span>
        <span class="token class-name">ResponseEntity</span> entity<span class="token operator">=</span>
                <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> header<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">CREATED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> entity<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_12【掌握】拦截器" tabindex="-1"><a class="header-anchor" href="#_12【掌握】拦截器" aria-hidden="true">#</a> 12【掌握】拦截器</h1><h2 id="一-未登陆拦截器" tabindex="-1"><a class="header-anchor" href="#一-未登陆拦截器" aria-hidden="true">#</a> 一，未登陆拦截器</h2><h3 id="_1-创建logininterceptor" tabindex="-1"><a class="header-anchor" href="#_1-创建logininterceptor" aria-hidden="true">#</a> 1，创建LoginInterceptor</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/***
     * handler中处理请求的方法,完全执行完毕之后，执行该方法 对handler中的方法进行异常的统一处理 和 进行日志记录
     * 
     * **/</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span>
            <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">,</span> <span class="token class-name">Object</span> obj<span class="token punctuation">,</span> <span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;============afterCompletion&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/***
     * handler中处理请求的方法，返回ModelAndView对象之前执行 对象ModelAndView进行统一处理
     * */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">,</span>
            <span class="token class-name">Object</span> obj<span class="token punctuation">,</span> <span class="token class-name">ModelAndView</span> mav<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;============postHandle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/***
     * handler中处理请求的方法之前执行
     * 
     * <span class="token keyword">@return</span> 控制者被拦截的handler是否进行放行
     * **/</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">,</span>
            <span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;============preHandle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HttpSession</span> session <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> uname <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uname <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 用户已经登陆，放行</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 跳转到登陆页面</span>
        resp<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getContextPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;/login.jsp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-在springmvc-xml里面注册自定义拦截器" tabindex="-1"><a class="header-anchor" href="#_2-在springmvc-xml里面注册自定义拦截器" aria-hidden="true">#</a> 2，在springmvc.xml里面注册自定义拦截器</h3><h1 id="_13【了解】springmvc-restful" tabindex="-1"><a class="header-anchor" href="#_13【了解】springmvc-restful" aria-hidden="true">#</a> 13【了解】springmvc-RestFul</h1><h2 id="一-什么是restful" tabindex="-1"><a class="header-anchor" href="#一-什么是restful" aria-hidden="true">#</a> 一，什么是RestFul</h2><p>什么是rest?当我看到这个词的时候，本意是休息,定是做web开发的和中设计模式</p><p>好了,就来简单介绍一下rest</p><p>rest即<strong>Representational State Transfer</strong>，表现层状态转化</p><p>互联网上资源（是服务）细化理解为一个url，如果访问某个资源通过http url访问。</p><p>我们把”资源”具体呈现出来的形式，叫做它的”表现层”（Representation）</p><p>表现层对用户展示的形式：html、json、xml、pdf、图片。。</p><pre><code>    由于http协议的限制,服务器和客户端不能实现主动通信,只能有客户端发起请求服务端响应请求,也就是将请求方法和参数都包含url,

    使用rest和不使用rest的规则都是这样做的,但是rest对于url做了很好的规划,这个规则将方法和资源分开看起来做的很简单,但是却使我们更好理解了,上网无非就是对于网络资源的操作,网络资源在internet中直白点说就是url(个人理解)所以如果客户端想要操作服务器，必须通过某种手段，让服务器端发生”状态转化”（State Transfer）。而这种转化是建立在表现层之上的，所以就是”表现层状态转化”。

    GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源
</code></pre><p>RESTful就是对http最全面最好的诠释，RESTful就是进行互联网开发的理念、思想。</p><h2 id="二-restful开发中url的规范" tabindex="-1"><a class="header-anchor" href="#二-restful开发中url的规范" aria-hidden="true">#</a> 二，RESTful开发中url的规范</h2><h3 id="_1、url规范" tabindex="-1"><a class="header-anchor" href="#_1、url规范" aria-hidden="true">#</a> 1、url规范</h3><p>原始url：http://www……/queryItems.action?type=101&amp;id=111…</p><p>规范后：http://www…/item/101/1</p><p>比如：</p><p>对商品查询</p><p>url：http://www…/item/101/1 表示对101分类 下的1号商品查询</p><p>http请求方法设置为get</p><p>比如：</p><p>对商品删除</p><p>url：http://www…/item/101/1表示对101分类 下的1号商品删除</p><p>http请求方法设置为delete</p><h3 id="_2-rest向客户端发送数据" tabindex="-1"><a class="header-anchor" href="#_2-rest向客户端发送数据" aria-hidden="true">#</a> 2，rest向客户端发送数据</h3><p>在请求时指定服务端给客户端响应的内容类型是什么？</p><p>实现：在请求时设置http头中Accept</p><p>对商品查询，以json格式展示：</p><p>rest设置：</p><p>url为：http://www…/item/101/1</p><p>客户端请求此url并且设置Accept为”applicatoin/json”</p><p>服务端处理方法：</p><p>接收请求，解析Accept，根据指定类型返回不同的内容格式。</p><p>如果解析到Accept为”applicatoin/json”，服务端就将内容转成json输出</p><p>如果解析到Accept为”applicatoin/xml”，服务端就将内容转成xml输出</p><p>RESTful架构的特点：</p><p>综合上面的解释，我们总结一下什么是RESTful架构：</p><p><strong>（1）每一个URI代表一种资源；</strong></p><p>实现：</p><p>规范后的url规范后：http://www…/item/101/1，特点是参数通过url传递。</p><p><strong>（2）客户端和服务器之间，传递这种资源的某种表现层；</strong></p><p>实现：</p><p>服务端解析Accept，根据客户端的要求将内容进行输出。</p><p><strong>（3）客户端通过四个HTTP动词，对服务器端资源进行操作，实现”表现层状态转化”。</strong></p><p>实现：</p><p>服务解析客户端请求的http方法，根据不同的方法执行不同的service操作。</p><hr><h2 id="三-springmvc-json构建基于restful风格的应用" tabindex="-1"><a class="header-anchor" href="#三-springmvc-json构建基于restful风格的应用" aria-hidden="true">#</a> 三，SpringMVC+Json构建基于Restful风格的应用</h2><h3 id="_1-创建项目并导入spring的jar包" tabindex="-1"><a class="header-anchor" href="#_1-创建项目并导入spring的jar包" aria-hidden="true">#</a> 1，创建项目并导入spring的jar包</h3><p><img src="https://picgo.xingenhi.cn//typora8ea9512b-33b4-4b4d-ad1a-df3968d0c47a.png" alt="image"></p><h3 id="_2-配置web-xml" tabindex="-1"><a class="header-anchor" href="#_2-配置web-xml" aria-hidden="true">#</a> 2，配置web.xml</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://java.sun.com/xml/ns/javaee<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>WebApp_ID<span class="token punctuation">&quot;</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>display-name</span><span class="token punctuation">&gt;</span></span>01_springmvc_hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>display-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 解决HTTP PUT请求Spring无法获取请求参数的问题 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">&gt;</span></span>HttpPutFormContentFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.filter.HttpPutFormContentFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">&gt;</span></span>HttpPutFormContentFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>springmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 配置springmvc的核心控制器 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>springmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 给DispatcherServlet给定初始化参数 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>classpath*:springmvc.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 在启动服务器的时候，实例化核心控制器 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>springmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--注意这个地方，一定要这么配置 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 编码过虑 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">&gt;</span></span>encodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.filter.CharacterEncodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>encoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>forceEncoding<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">&gt;</span></span>encodingFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-创建springmvc-xml" tabindex="-1"><a class="header-anchor" href="#_3-创建springmvc-xml" aria-hidden="true">#</a> 3，创建springmvc.xml</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/context<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/mvc<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.sxt.controller<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>component-scan</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 配置视图解析器 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prefix<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/WEB-INF/jsp<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suffix<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.jsp<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
 <span class="token comment">&lt;!-- 对静态资源文件的访问 不支持访问WEB-INF目录 --&gt;</span>  
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>default-servlet-handler</span> <span class="token punctuation">/&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-创建person-java" tabindex="-1"><a class="header-anchor" href="#_4-创建person-java" aria-hidden="true">#</a> 4，创建Person.java</h3><p><img src="https://picgo.xingenhi.cn//typora472e13d9-3693-4170-8e0b-89dfaae4fadb.png" alt="image"></p><h3 id="_5-创建personcontroller" tabindex="-1"><a class="header-anchor" href="#_5-创建personcontroller" aria-hidden="true">#</a> 5，创建PersonController</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Controller</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersonController</span><span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> persons<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Random</span> random<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span><span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span>random<span class="token punctuation">.</span><span class="token function">nextDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0.5</span><span class="token operator">?</span><span class="token string">&quot;男&quot;</span><span class="token operator">:</span><span class="token string">&quot;女&quot;</span> <span class="token punctuation">,</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">89</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span>produces<span class="token operator">=</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;你好!:hello &quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;say/{name}/{msg}&quot;</span><span class="token punctuation">,</span>produces<span class="token operator">=</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">)</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> name<span class="token operator">+</span><span class="token string">&quot;:&quot;</span><span class="token operator">+</span>msg<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 根据id得到person
     */</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;person/{id}&quot;</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token keyword">public</span> <span class="token class-name">Person</span> <span class="token function">getPerson</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Person</span> p<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Person</span> person <span class="token operator">:</span> persons<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token operator">==</span>person<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                p<span class="token operator">=</span>person<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 添加
     */</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;person&quot;</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">,</span>produces<span class="token operator">=</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ResponseBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">addPerson</span><span class="token punctuation">(</span><span class="token class-name">Person</span> person<span class="token punctuation">)</span><span class="token punctuation">{</span>
        persons<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;添加成功  当前集合长度为:&quot;</span><span class="token operator">+</span>persons<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 删除方法
     */</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;person/{id}&quot;</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token punctuation">,</span>produces<span class="token operator">=</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">deletePerson</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Person</span> person <span class="token operator">:</span> persons<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>id<span class="token operator">==</span>person<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                persons<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">&quot;删除成功  当前集合长度为:&quot;</span><span class="token operator">+</span>persons<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 更新
     */</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;person&quot;</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">PUT</span><span class="token punctuation">,</span>produces<span class="token operator">=</span><span class="token string">&quot;text/html;charset=utf-8&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">updatePerson</span><span class="token punctuation">(</span><span class="token class-name">Person</span> person<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Person</span> p <span class="token operator">:</span> persons<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>person<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">&quot;更新成功  当前集合长度为:&quot;</span><span class="token operator">+</span>persons<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 全查询
     */</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;person&quot;</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">PATCH</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> persons<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-创建index-jsp测试" tabindex="-1"><a class="header-anchor" href="#_6-创建index-jsp测试" aria-hidden="true">#</a> 6，创建index.jsp测试</h3><p><img src="https://picgo.xingenhi.cn//typora5e4fa3e3-1024-42bd-a8a4-74a34fc98c56.png" alt="image"></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>say<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>获取Person id=1 GET<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>添加Person POST<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>删除人员  DELETE<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>更新人员  PULL<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn7<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>全查询人员  PATCH<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">

    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">url</span> <span class="token operator">:</span> <span class="token string">&#39;person/1&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">type</span> <span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
                <span class="token function-variable function">success</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token function-variable function">error</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">xhr<span class="token punctuation">,</span> textStatus</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>textStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">url</span> <span class="token operator">:</span> <span class="token string">&#39;person&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">type</span> <span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;小明11&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">22</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token function-variable function">success</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token function-variable function">error</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">xhr<span class="token punctuation">,</span> textStatus</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>textStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">url</span> <span class="token operator">:</span> <span class="token string">&#39;person/1&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">type</span> <span class="token operator">:</span> <span class="token string">&#39;delete&#39;</span><span class="token punctuation">,</span>
                <span class="token function-variable function">success</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token function-variable function">error</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">xhr<span class="token punctuation">,</span> textStatus</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>textStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">url</span> <span class="token operator">:</span> <span class="token string">&#39;person&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">type</span> <span class="token operator">:</span> <span class="token string">&#39;put&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;小明222&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">sex</span><span class="token operator">:</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">22</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token function-variable function">success</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token function-variable function">error</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">xhr<span class="token punctuation">,</span> textStatus</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>textStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn7&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">url</span> <span class="token operator">:</span> <span class="token string">&#39;person&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">type</span> <span class="token operator">:</span> <span class="token string">&#39;patch&#39;</span><span class="token punctuation">,</span>
                <span class="token function-variable function">success</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token function-variable function">error</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">xhr<span class="token punctuation">,</span> textStatus</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span>textStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_14【了解】源码分析" tabindex="-1"><a class="header-anchor" href="#_14【了解】源码分析" aria-hidden="true">#</a> 14【了解】源码分析</h1><h2 id="_1-tomcat启动时的加载的代码分析" tabindex="-1"><a class="header-anchor" href="#_1-tomcat启动时的加载的代码分析" aria-hidden="true">#</a> 1.tomcat启动时的加载的代码分析</h2><h3 id="_1-web-xml-前端控制器" tabindex="-1"><a class="header-anchor" href="#_1-web-xml-前端控制器" aria-hidden="true">#</a> 1.web.xml--前端控制器</h3><p><img src="https://picgo.xingenhi.cn//typorab286379b-6f7d-46c6-a670-e627292cca9c.jpg" alt="image"></p><h3 id="_2-disaptcherservlet" tabindex="-1"><a class="header-anchor" href="#_2-disaptcherservlet" aria-hidden="true">#</a> 2.DisaptcherServlet</h3><pre><code>     |-- FrameworkServlet

                        |-- HttpServletBean

                                           |--init方法
</code></pre><p><img src="https://picgo.xingenhi.cn//typora2d4fbf72-2911-4043-8f74-3e5d899a6b14.jpg" alt="image"></p><h3 id="_3-httpservletbean" tabindex="-1"><a class="header-anchor" href="#_3-httpservletbean" aria-hidden="true">#</a> 3.HttpServletBean</h3><p><img src="https://picgo.xingenhi.cn//typoraa0107166-bb6c-4e6a-b19e-65aee1cfea5b.jpg" alt="image"></p><p>里面有initServletBean();这个方法是在子里面重写的</p><h3 id="_4-frameworkservlet" tabindex="-1"><a class="header-anchor" href="#_4-frameworkservlet" aria-hidden="true">#</a> 4. FrameWorkServlet</h3><p><img src="https://picgo.xingenhi.cn//typora2637b398-dd75-43a8-b1b2-342f0c8d1448.jpg" alt="image"></p><p>发现有initWebApplicationContext()</p><h3 id="_5-frameworkservlet-initwebapplicationcontext" tabindex="-1"><a class="header-anchor" href="#_5-frameworkservlet-initwebapplicationcontext" aria-hidden="true">#</a> 5.FrameWorkServlet -- initWebApplicationContext()</h3><p><img src="https://picgo.xingenhi.cn//typorae2e0568d-10b2-469d-8e64-69c05583b2a0.jpg" alt="image"></p><p>有onRefresh()</p><p>发面不前类里面的onRefresh方法是空的，所有再找子类 DispactherServlet</p><h3 id="_6-dispatcherservlet-onrefresh" tabindex="-1"><a class="header-anchor" href="#_6-dispatcherservlet-onrefresh" aria-hidden="true">#</a> 6.DispatcherServlet-onRefresh</h3><p><img src="https://picgo.xingenhi.cn//typora36f90d53-06af-441f-930c-153efd7f1c37.jpg" alt="image"></p><h3 id="_7-dispatcherservlet-initstrategies" tabindex="-1"><a class="header-anchor" href="#_7-dispatcherservlet-initstrategies" aria-hidden="true">#</a> 7.DispatcherServlet- initStrategies()</h3><p><img src="https://picgo.xingenhi.cn//typora7e7faf43-59ac-48ed-b959-83b440ac281d.jpg" alt="image"></p><p>这个方法加载完成之后启动的加载就完成</p><h2 id="_2-用户请求时的加载代码分析" tabindex="-1"><a class="header-anchor" href="#_2-用户请求时的加载代码分析" aria-hidden="true">#</a> 2.用户请求时的加载代码分析</h2><p>http://127.0.0.1:8080/user/addUser.action</p><h3 id="_1-web-xml里面的前端控制器" tabindex="-1"><a class="header-anchor" href="#_1-web-xml里面的前端控制器" aria-hidden="true">#</a> 1.web.xml里面的前端控制器</h3><p><img src="https://picgo.xingenhi.cn//typora32124027-5a91-4e2a-afb8-edfe7d8f10c5.jpg" alt="image"></p><h3 id="_2-frameworkservlet" tabindex="-1"><a class="header-anchor" href="#_2-frameworkservlet" aria-hidden="true">#</a> 2.FrameWorkServlet</h3><p><img src="https://picgo.xingenhi.cn//typora3fc2784b-7d50-4453-a22d-775e2131b62b.jpg" alt="image"></p><p>调用HttpServlet里面的service方法</p><p>service方法里面根据请求方式调用FrameWorkServlet里面的</p><p>doGET</p><p>doPost</p><p><img src="https://picgo.xingenhi.cn//typorae42345fe-e1d1-4a42-bf01-778b9f187022.jpg" alt="image"></p><h3 id="_3-frameworkservlet调用doxxx方法" tabindex="-1"><a class="header-anchor" href="#_3-frameworkservlet调用doxxx方法" aria-hidden="true">#</a> 3. FrameWorkServlet调用doXXX方法</h3><p><img src="https://picgo.xingenhi.cn//typora2d33f3f7-dfcd-4d81-a4b6-8d9fae49222c.jpg" alt="image"></p><h3 id="_4-frameworkservlet-processrequest" tabindex="-1"><a class="header-anchor" href="#_4-frameworkservlet-processrequest" aria-hidden="true">#</a> 4.FrameWorkServlet-- processRequest</h3><p><img src="https://picgo.xingenhi.cn//typora7d92ff20-34fd-4219-8357-8dd3ab7737fb.jpg" alt="image"></p><p>发面有doService的方法</p><h3 id="_5-dispatcherservlet-doservice" tabindex="-1"><a class="header-anchor" href="#_5-dispatcherservlet-doservice" aria-hidden="true">#</a> 5.DispatcherServlet-- doService</h3><p><img src="https://picgo.xingenhi.cn//typorabf326f8c-bbbd-418b-8d97-9ac70482f394.jpg" alt="image"></p><h3 id="_6-dispatcherservlet-dodispatch" tabindex="-1"><a class="header-anchor" href="#_6-dispatcherservlet-dodispatch" aria-hidden="true">#</a> 6.DispatcherServlet-- doDispatch</h3><p><img src="https://picgo.xingenhi.cn//typora43af216f-b1cf-4a19-bbe4-62a683ef2d6c.jpg" alt="image"></p><p>执行Controller里面的相关方法</p><p><img src="https://picgo.xingenhi.cn//typora887cf6e9-fb49-40aa-80b0-383cb5fc7d38.jpg" alt="image"></p><p>执行结果集的转发</p><p><img src="https://picgo.xingenhi.cn//typorad7243646-bc10-4f1f-8363-0674a8e4965c.jpg" alt="image"></p><p><img src="https://picgo.xingenhi.cn//typora665e5b21-79f5-4d7e-a63a-322582c205d4.jpg" alt="image"></p>`,321);function q(f,x){const a=o("ExternalLinkIcon");return c(),l("div",null,[n("div",u,[r,k,n("p",null,[n("a",d,[s("视频链接"),t(a)])])]),m,n("p",null,[n("a",v,[s("http://127.0.0.1:8080/bjsxt/user1Controller.action"),t(a)])]),g,n("p",null,[n("a",b,[s("http://127.0.0.1:8080/bjsxt/user3.action"),t(a)])]),h])}const y=e(i,[["render",q],["__file","SpringMVC.html.vue"]]);export{y as default};
